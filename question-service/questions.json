[
  {
    "id": 1,
    "title": "Two Sum",
    "title_slug": "two-sum",
    "link": "https://leetcode.com/problems/two-sum",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Hash Table"
    ],
    "question": "<div><div><p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p> <p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p> <p>You can return the answer in any order.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,7,11,15], target = 9 <strong>Output:</strong> [0,1] <strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1]. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,2,4], target = 6 <strong>Output:</strong> [1,2] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [3,3], target = 6 <strong>Output:</strong> [0,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> <li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li> <li><strong>Only one valid answer exists.</strong></li> </ul> <strong>Follow-up: </strong>Can you come up with an algorithm that is less than <code>O(n<sup>2</sup>) </code>time complexity?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 2,
    "title": "Add Two Numbers",
    "title_slug": "add-two-numbers",
    "link": "https://leetcode.com/problems/add-two-numbers",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Math",
      "Recursion"
    ],
    "question": "<div><div><p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p> <p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\"> <pre><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4] <strong>Output:</strong> [7,0,8] <strong>Explanation:</strong> 342 + 465 = 807. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> l1 = [0], l2 = [0] <strong>Output:</strong> [0] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9] <strong>Output:</strong> [8,9,9,9,0,0,0,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li>It is guaranteed that the list represents a number that does not have leading zeros.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 3,
    "title": "Longest Substring Without Repeating Characters",
    "title_slug": "longest-substring-without-repeating-characters",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "question": "<div><div><p>Given a string <code>s</code>, find the length of the <strong>longest substring</strong> without repeating characters.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"abcabcbb\" <strong>Output:</strong> 3 <strong>Explanation:</strong> The answer is \"abc\", with the length of 3. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"bbbbb\" <strong>Output:</strong> 1 <strong>Explanation:</strong> The answer is \"b\", with the length of 1. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"pwwkew\" <strong>Output:</strong> 3 <strong>Explanation:</strong> The answer is \"wke\", with the length of 3. Notice that the answer must be a substring, \"pwke\" is a subsequence and not a substring. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>s</code> consists of English letters, digits, symbols and spaces.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 4,
    "title": "Median of Two Sorted Arrays",
    "title_slug": "median-of-two-sorted-arrays",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ],
    "question": "<div><div><p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p> <p>The overall run time complexity should be <code>O(log (m+n))</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums1 = [1,3], nums2 = [2] <strong>Output:</strong> 2.00000 <strong>Explanation:</strong> merged array = [1,2,3] and median is 2. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums1 = [1,2], nums2 = [3,4] <strong>Output:</strong> 2.50000 <strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>nums1.length == m</code></li> <li><code>nums2.length == n</code></li> <li><code>0 &lt;= m &lt;= 1000</code></li> <li><code>0 &lt;= n &lt;= 1000</code></li> <li><code>1 &lt;= m + n &lt;= 2000</code></li> <li><code>-10<sup>6</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>6</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 5,
    "title": "Longest Palindromic Substring",
    "title_slug": "longest-palindromic-substring",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given a string <code>s</code>, return <em>the longest palindromic substring</em> in <code>s</code>.</p> <p>A string is called a palindrome string if the reverse of that string is the same as the original string.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"babad\" <strong>Output:</strong> \"bab\" <strong>Explanation:</strong> \"aba\" is also a valid answer. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"cbbd\" <strong>Output:</strong> \"bb\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 1000</code></li> <li><code>s</code> consist of only digits and English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 6,
    "title": "Zigzag Conversion",
    "title_slug": "zigzag-conversion",
    "link": "https://leetcode.com/problems/zigzag-conversion",
    "difficulty": "Medium",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>The string <code>\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p> <pre>P A H N A P L S I I G Y I R </pre> <p>And then read line by line: <code>\"PAHNAPLSIIGYIR\"</code></p> <p>Write the code that will take a string and make this conversion given a number of rows:</p> <pre>string convert(string s, int numRows); </pre> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"PAYPALISHIRING\", numRows = 3 <strong>Output:</strong> \"PAHNAPLSIIGYIR\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"PAYPALISHIRING\", numRows = 4 <strong>Output:</strong> \"PINALSIGYAHRPI\" <strong>Explanation:</strong> P I N A L S I G Y A H R P I </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"A\", numRows = 1 <strong>Output:</strong> \"A\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 1000</code></li> <li><code>s</code> consists of English letters (lower-case and upper-case), <code>','</code> and <code>'.'</code>.</li> <li><code>1 &lt;= numRows &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 7,
    "title": "Reverse Integer",
    "title_slug": "reverse-integer",
    "link": "https://leetcode.com/problems/reverse-integer",
    "difficulty": "Medium",
    "similar_topics": [
      "Math"
    ],
    "question": "<div><div><p>Given a signed 32-bit integer <code>x</code>, return <code>x</code><em> with its digits reversed</em>. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then return <code>0</code>.</p> <p><strong>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</strong></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> x = 123 <strong>Output:</strong> 321 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> x = -123 <strong>Output:</strong> -321 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> x = 120 <strong>Output:</strong> 21 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= x &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 8,
    "title": "String to Integer (atoi)",
    "title_slug": "string-to-integer-(atoi)",
    "link": "https://leetcode.com/problems/string-to-integer-(atoi)",
    "difficulty": "Medium",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>Implement the <code>myAtoi(string s)</code> function, which converts a string to a 32-bit signed integer (similar to C/C++'s <code>atoi</code> function).</p> <p>The algorithm for <code>myAtoi(string s)</code> is as follows:</p> <ol> <li>Read in and ignore any leading whitespace.</li> <li>Check if the next character (if not already at the end of the string) is <code>'-'</code> or <code>'+'</code>. Read this character in if it is either. This determines if the final result is negative or positive respectively. Assume the result is positive if neither is present.</li> <li>Read in next the characters until the next non-digit character or the end of the input is reached. The rest of the string is ignored.</li> <li>Convert these digits into an integer (i.e. <code>\"123\" -&gt; 123</code>, <code>\"0032\" -&gt; 32</code>). If no digits were read, then the integer is <code>0</code>. Change the sign as necessary (from step 2).</li> <li>If the integer is out of the 32-bit signed integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then clamp the integer so that it remains in the range. Specifically, integers less than <code>-2<sup>31</sup></code> should be clamped to <code>-2<sup>31</sup></code>, and integers greater than <code>2<sup>31</sup> - 1</code> should be clamped to <code>2<sup>31</sup> - 1</code>.</li> <li>Return the integer as the final result.</li> </ol> <p><strong>Note:</strong></p> <ul> <li>Only the space character <code>' '</code> is considered a whitespace character.</li> <li><strong>Do not ignore</strong> any characters other than the leading whitespace or the rest of the string after the digits.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"42\" <strong>Output:</strong> 42 <strong>Explanation:</strong> The underlined characters are what is read in, the caret is the current reader position. Step 1: \"42\" (no characters read because there is no leading whitespace) ^ Step 2: \"42\" (no characters read because there is neither a '-' nor '+') ^ Step 3: \"42\" (\"42\" is read in) ^ The parsed integer is 42. Since 42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 42. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \" -42\" <strong>Output:</strong> -42 <strong>Explanation:</strong> Step 1: \" -42\" (leading whitespace is read and ignored) ^ Step 2: \" -42\" ('-' is read, so the result should be negative) ^ Step 3: \" -42\" (\"42\" is read in) ^ The parsed integer is -42. Since -42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is -42. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"4193 with words\" <strong>Output:</strong> 4193 <strong>Explanation:</strong> Step 1: \"4193 with words\" (no characters read because there is no leading whitespace) ^ Step 2: \"4193 with words\" (no characters read because there is neither a '-' nor '+') ^ Step 3: \"4193 with words\" (\"4193\" is read in; reading stops because the next character is a non-digit) ^ The parsed integer is 4193. Since 4193 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 4193. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 200</code></li> <li><code>s</code> consists of English letters (lower-case and upper-case), digits (<code>0-9</code>), <code>' '</code>, <code>'+'</code>, <code>'-'</code>, and <code>'.'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 9,
    "title": "Palindrome Number",
    "title_slug": "palindrome-number",
    "link": "https://leetcode.com/problems/palindrome-number",
    "difficulty": "Easy",
    "similar_topics": [
      "Math"
    ],
    "question": "<div><div><p>Given an integer <code>x</code>, return <code>true</code> if <code>x</code> is palindrome integer.</p> <p>An integer is a <strong>palindrome</strong> when it reads the same backward as forward.</p> <ul> <li>For example, <code>121</code> is a palindrome while <code>123</code> is not.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> x = 121 <strong>Output:</strong> true <strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> x = -121 <strong>Output:</strong> false <strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> x = 10 <strong>Output:</strong> false <strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= x &lt;= 2<sup>31</sup> - 1</code></li> </ul> <strong>Follow up:</strong> Could you solve it without converting the integer to a string?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 10,
    "title": "Regular Expression Matching",
    "title_slug": "regular-expression-matching",
    "link": "https://leetcode.com/problems/regular-expression-matching",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ],
    "question": "<div><div><p>Given an input string <code>s</code> and a pattern <code>p</code>, implement regular expression matching with support for <code>'.'</code> and <code>'*'</code> where:</p> <ul> <li><code>'.'</code> Matches any single character.​​​​</li> <li><code>'*'</code> Matches zero or more of the preceding element.</li> </ul> <p>The matching should cover the <strong>entire</strong> input string (not partial).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aa\", p = \"a\" <strong>Output:</strong> false <strong>Explanation:</strong> \"a\" does not match the entire string \"aa\". </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"aa\", p = \"a*\" <strong>Output:</strong> true <strong>Explanation:</strong> '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\". </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"ab\", p = \".*\" <strong>Output:</strong> true <strong>Explanation:</strong> \".*\" means \"zero or more (*) of any character (.)\". </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 20</code></li> <li><code>1 &lt;= p.length &lt;= 30</code></li> <li><code>s</code> contains only lowercase English letters.</li> <li><code>p</code> contains only lowercase English letters, <code>'.'</code>, and <code>'*'</code>.</li> <li>It is guaranteed for each appearance of the character <code>'*'</code>, there will be a previous valid character to match.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 11,
    "title": "Container With Most Water",
    "title_slug": "container-with-most-water",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "question": "<div><div><p>You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p> <p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p> <p>Return <em>the maximum amount of water a container can store</em>.</p> <p><strong>Notice</strong> that you may not slant the container.</p> <p><strong>Example 1:</strong></p> <img src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg\"> <pre><strong>Input:</strong> height = [1,8,6,2,5,4,8,3,7] <strong>Output:</strong> 49 <strong>Explanation:</strong> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> height = [1,1] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == height.length</code></li> <li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= height[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 12,
    "title": "Integer to Roman",
    "title_slug": "integer-to-roman",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "question": "<div><div><p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p> <pre><strong>Symbol Value</strong> I 1 V 5 X 10 L 50 C 100 D 500 M 1000</pre> <p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two one's added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p> <p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p> <ul> <li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9. </li> <li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90. </li> <li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li> </ul> <p>Given an integer, convert it to a roman numeral.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> num = 3 <strong>Output:</strong> \"III\" <strong>Explanation:</strong> 3 is represented as 3 ones. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> num = 58 <strong>Output:</strong> \"LVIII\" <strong>Explanation:</strong> L = 50, V = 5, III = 3. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> num = 1994 <strong>Output:</strong> \"MCMXCIV\" <strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= num &lt;= 3999</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 13,
    "title": "Roman to Integer",
    "title_slug": "roman-to-integer",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "question": "<div><div><p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p> <pre><strong>Symbol Value</strong> I 1 V 5 X 10 L 50 C 100 D 500 M 1000</pre> <p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two ones added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p> <p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p> <ul> <li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9. </li> <li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90. </li> <li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li> </ul> <p>Given a roman numeral, convert it to an integer.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"III\" <strong>Output:</strong> 3 <strong>Explanation:</strong> III = 3. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"LVIII\" <strong>Output:</strong> 58 <strong>Explanation:</strong> L = 50, V= 5, III = 3. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"MCMXCIV\" <strong>Output:</strong> 1994 <strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 15</code></li> <li><code>s</code> contains only the characters <code>('I', 'V', 'X', 'L', 'C', 'D', 'M')</code>.</li> <li>It is <strong>guaranteed</strong> that <code>s</code> is a valid roman numeral in the range <code>[1, 3999]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 14,
    "title": "Longest Common Prefix",
    "title_slug": "longest-common-prefix",
    "link": "https://leetcode.com/problems/longest-common-prefix",
    "difficulty": "Easy",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>Write a function to find the longest common prefix string amongst an array of strings.</p> <p>If there is no common prefix, return an empty string <code>\"\"</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> strs = [\"flower\",\"flow\",\"flight\"] <strong>Output:</strong> \"fl\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> strs = [\"dog\",\"racecar\",\"car\"] <strong>Output:</strong> \"\" <strong>Explanation:</strong> There is no common prefix among the input strings. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= strs.length &lt;= 200</code></li> <li><code>0 &lt;= strs[i].length &lt;= 200</code></li> <li><code>strs[i]</code> consists of only lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 15,
    "title": "3Sum",
    "title_slug": "3sum",
    "link": "https://leetcode.com/problems/3sum",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "question": "<div><div><p>Given an integer array nums, return all the triplets <code>[nums[i], nums[j], nums[k]]</code> such that <code>i != j</code>, <code>i != k</code>, and <code>j != k</code>, and <code>nums[i] + nums[j] + nums[k] == 0</code>.</p> <p>Notice that the solution set must not contain duplicate triplets.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [-1,0,1,2,-1,-4] <strong>Output:</strong> [[-1,-1,2],[-1,0,1]] <strong>Explanation:</strong> nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0. nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0. nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0. The distinct triplets are [-1,0,1] and [-1,-1,2]. Notice that the order of the output and the order of the triplets does not matter. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,1,1] <strong>Output:</strong> [] <strong>Explanation:</strong> The only possible triplet does not sum up to 0. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [0,0,0] <strong>Output:</strong> [[0,0,0]] <strong>Explanation:</strong> The only possible triplet sums up to 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>3 &lt;= nums.length &lt;= 3000</code></li> <li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 16,
    "title": "3Sum Closest",
    "title_slug": "3sum-closest",
    "link": "https://leetcode.com/problems/3sum-closest",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> of length <code>n</code> and an integer <code>target</code>, find three integers in <code>nums</code> such that the sum is closest to <code>target</code>.</p> <p>Return <em>the sum of the three integers</em>.</p> <p>You may assume that each input would have exactly one solution.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [-1,2,1,-4], target = 1 <strong>Output:</strong> 2 <strong>Explanation:</strong> The sum that is closest to the target is 2. (-1 + 2 + 1 = 2). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,0,0], target = 1 <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>3 &lt;= nums.length &lt;= 1000</code></li> <li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li> <li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 17,
    "title": "Letter Combinations of a Phone Number",
    "title_slug": "letter-combinations-of-a-phone-number",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "question": "<div><div><p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent. Return the answer in <strong>any order</strong>.</p> <p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p> <img src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\"> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> digits = \"23\" <strong>Output:</strong> [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> digits = \"\" <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> digits = \"2\" <strong>Output:</strong> [\"a\",\"b\",\"c\"] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= digits.length &lt;= 4</code></li> <li><code>digits[i]</code> is a digit in the range <code>['2', '9']</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png"
      ],
      "previous_element": [
        "A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters."
      ]
    }
  },
  {
    "id": 18,
    "title": "4Sum",
    "title_slug": "4sum",
    "link": "https://leetcode.com/problems/4sum",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "question": "<div><div><p>Given an array <code>nums</code> of <code>n</code> integers, return <em>an array of all the <strong>unique</strong> quadruplets</em> <code>[nums[a], nums[b], nums[c], nums[d]]</code> such that:</p> <ul> <li><code>0 &lt;= a, b, c, d &lt; n</code></li> <li><code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code> are <strong>distinct</strong>.</li> <li><code>nums[a] + nums[b] + nums[c] + nums[d] == target</code></li> </ul> <p>You may return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,0,-1,0,-2,2], target = 0 <strong>Output:</strong> [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,2,2,2,2], target = 8 <strong>Output:</strong> [[2,2,2,2]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 200</code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> <li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 19,
    "title": "Remove Nth Node From End of List",
    "title_slug": "remove-nth-node-from-end-of-list",
    "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list, remove the <code>n<sup>th</sup></code> node from the end of the list and return its head.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5], n = 2 <strong>Output:</strong> [1,2,3,5] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [1], n = 1 <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> head = [1,2], n = 1 <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is <code>sz</code>.</li> <li><code>1 &lt;= sz &lt;= 30</code></li> <li><code>0 &lt;= Node.val &lt;= 100</code></li> <li><code>1 &lt;= n &lt;= sz</code></li> </ul> <p><strong>Follow up:</strong> Could you do this in one pass?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 20,
    "title": "Valid Parentheses",
    "title_slug": "valid-parentheses",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "difficulty": "Easy",
    "similar_topics": [
      "String",
      "Stack"
    ],
    "question": "<div><div><p>Given a string <code>s</code> containing just the characters <code>'('</code>, <code>')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>, determine if the input string is valid.</p> <p>An input string is valid if:</p> <ol> <li>Open brackets must be closed by the same type of brackets.</li> <li>Open brackets must be closed in the correct order.</li> <li>Every close bracket has a corresponding open bracket of the same type.</li> </ol> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"()\" <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"()[]{}\" <strong>Output:</strong> true </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"(]\" <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <li><code>s</code> consists of parentheses only <code>'()[]{}'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 21,
    "title": "Merge Two Sorted Lists",
    "title_slug": "merge-two-sorted-lists",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists",
    "difficulty": "Easy",
    "similar_topics": [
      "Linked List",
      "Recursion"
    ],
    "question": "<div><div><p>You are given the heads of two sorted linked lists <code>list1</code> and <code>list2</code>.</p> <p>Merge the two lists in a one <strong>sorted</strong> list. The list should be made by splicing together the nodes of the first two lists.</p> <p>Return <em>the head of the merged linked list</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg\"> <pre><strong>Input:</strong> list1 = [1,2,4], list2 = [1,3,4] <strong>Output:</strong> [1,1,2,3,4,4] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> list1 = [], list2 = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> list1 = [], list2 = [0] <strong>Output:</strong> [0] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in both lists is in the range <code>[0, 50]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li>Both <code>list1</code> and <code>list2</code> are sorted in <strong>non-decreasing</strong> order.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 22,
    "title": "Generate Parentheses",
    "title_slug": "generate-parentheses",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "question": "<div><div><p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> [\"()\"] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 8</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 23,
    "title": "Merge k Sorted Lists",
    "title_slug": "merge-k-sorted-lists",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "difficulty": "Hard",
    "similar_topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ],
    "question": "<div><div><p>You are given an array of <code>k</code> linked-lists <code>lists</code>, each linked-list is sorted in ascending order.</p> <p><em>Merge all the linked-lists into one sorted linked-list and return it.</em></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> lists = [[1,4,5],[1,3,4],[2,6]] <strong>Output:</strong> [1,1,2,3,4,4,5,6] <strong>Explanation:</strong> The linked-lists are: [ 1-&gt;4-&gt;5, 1-&gt;3-&gt;4, 2-&gt;6 ] merging them into one sorted list: 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> lists = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> lists = [[]] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>k == lists.length</code></li> <li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= lists[i].length &lt;= 500</code></li> <li><code>-10<sup>4</sup> &lt;= lists[i][j] &lt;= 10<sup>4</sup></code></li> <li><code>lists[i]</code> is sorted in <strong>ascending order</strong>.</li> <li>The sum of <code>lists[i].length</code> will not exceed <code>10<sup>4</sup></code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 24,
    "title": "Swap Nodes in Pairs",
    "title_slug": "swap-nodes-in-pairs",
    "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Recursion"
    ],
    "question": "<div><div><p>Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4] <strong>Output:</strong> [2,1,4,3] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> head = [1] <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 100]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 25,
    "title": "Reverse Nodes in k-Group",
    "title_slug": "reverse-nodes-in-k-group",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
    "difficulty": "Hard",
    "similar_topics": [
      "Linked List",
      "Recursion"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list, reverse the nodes of the list <code>k</code> at a time, and return <em>the modified list</em>.</p> <p><code>k</code> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <code>k</code> then left-out nodes, in the end, should remain as it is.</p> <p>You may not alter the values in the list's nodes, only nodes themselves may be changed.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5], k = 2 <strong>Output:</strong> [2,1,4,3,5] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5], k = 3 <strong>Output:</strong> [3,2,1,4,5] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is <code>n</code>.</li> <li><code>1 &lt;= k &lt;= n &lt;= 5000</code></li> <li><code>0 &lt;= Node.val &lt;= 1000</code></li> </ul> <p><strong>Follow-up:</strong> Can you solve the problem in <code>O(1)</code> extra memory space?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg",
        "https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 26,
    "title": "Remove Duplicates from Sorted Array",
    "title_slug": "remove-duplicates-from-sorted-array",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a> such that each unique element appears only <strong>once</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>.</p> <p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code> should hold the final result. It does not matter what you leave beyond the first <code>k</code> elements.</p> <p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p> <p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in-place</a></strong> with O(1) extra memory.</p> <p><strong>Custom Judge:</strong></p> <p>The judge will test your solution with the following code:</p> <pre>int[] nums = [...]; // Input array int[] expectedNums = [...]; // The expected answer with correct length int k = removeDuplicates(nums); // Calls your implementation assert k == expectedNums.length; for (int i = 0; i &lt; k; i++) { assert nums[i] == expectedNums[i]; } </pre> <p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,1,2] <strong>Output:</strong> 2, nums = [1,2,_] <strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,0,1,1,1,2,2,3,3,4] <strong>Output:</strong> 5, nums = [0,1,2,3,4,_,_,_,_,_] <strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>-100 &lt;= nums[i] &lt;= 100</code></li> <li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 27,
    "title": "Remove Element",
    "title_slug": "remove-element",
    "link": "https://leetcode.com/problems/remove-element",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> and an integer <code>val</code>, remove all occurrences of <code>val</code> in <code>nums</code> <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a>. The relative order of the elements may be changed.</p> <p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code> should hold the final result. It does not matter what you leave beyond the first <code>k</code> elements.</p> <p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p> <p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in-place</a></strong> with O(1) extra memory.</p> <p><strong>Custom Judge:</strong></p> <p>The judge will test your solution with the following code:</p> <pre>int[] nums = [...]; // Input array int val = ...; // Value to remove int[] expectedNums = [...]; // The expected answer with correct length. // It is sorted with no values equaling val. int k = removeElement(nums, val); // Calls your implementation assert k == expectedNums.length; sort(nums, 0, k); // Sort the first k elements of nums for (int i = 0; i &lt; actualLength; i++) { assert nums[i] == expectedNums[i]; } </pre> <p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,2,2,3], val = 3 <strong>Output:</strong> 2, nums = [2,2,_,_] <strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 2. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,1,2,2,3,0,4,2], val = 2 <strong>Output:</strong> 5, nums = [0,1,4,0,3,_,_,_] <strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4. Note that the five elements can be returned in any order. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 50</code></li> <li><code>0 &lt;= val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 28,
    "title": "Find the Index of the First Occurrence in a String",
    "title_slug": "find-the-index-of-the-first-occurrence-in-a-string",
    "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",
    "difficulty": "Medium",
    "similar_topics": [
      "Two Pointers",
      "String",
      "String Matching"
    ],
    "question": "<div><div><p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> haystack = \"sadbutsad\", needle = \"sad\" <strong>Output:</strong> 0 <strong>Explanation:</strong> \"sad\" occurs at index 0 and 6. The first occurrence is at index 0, so we return 0. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> haystack = \"leetcode\", needle = \"leeto\" <strong>Output:</strong> -1 <strong>Explanation:</strong> \"leeto\" did not occur in \"leetcode\", so we return -1. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= haystack.length, needle.length &lt;= 10<sup>4</sup></code></li> <li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 29,
    "title": "Divide Two Integers",
    "title_slug": "divide-two-integers",
    "link": "https://leetcode.com/problems/divide-two-integers",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers <strong>without</strong> using multiplication, division, and mod operator.</p> <p>The integer division should truncate toward zero, which means losing its fractional part. For example, <code>8.345</code> would be truncated to <code>8</code>, and <code>-2.7335</code> would be truncated to <code>-2</code>.</p> <p>Return <em>the <strong>quotient</strong> after dividing </em><code>dividend</code><em> by </em><code>divisor</code>.</p> <p><strong>Note: </strong>Assume we are dealing with an environment that could only store integers within the <strong>32-bit</strong> signed integer range: <code>[−2<sup>31</sup>, 2<sup>31</sup> − 1]</code>. For this problem, if the quotient is <strong>strictly greater than</strong> <code>2<sup>31</sup> - 1</code>, then return <code>2<sup>31</sup> - 1</code>, and if the quotient is <strong>strictly less than</strong> <code>-2<sup>31</sup></code>, then return <code>-2<sup>31</sup></code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> dividend = 10, divisor = 3 <strong>Output:</strong> 3 <strong>Explanation:</strong> 10/3 = 3.33333.. which is truncated to 3. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> dividend = 7, divisor = -3 <strong>Output:</strong> -2 <strong>Explanation:</strong> 7/-3 = -2.33333.. which is truncated to -2. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= dividend, divisor &lt;= 2<sup>31</sup> - 1</code></li> <li><code>divisor != 0</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 30,
    "title": "Substring with Concatenation of All Words",
    "title_slug": "substring-with-concatenation-of-all-words",
    "link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words",
    "difficulty": "Hard",
    "similar_topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "question": "<div><div><p>You are given a string <code>s</code> and an array of strings <code>words</code>. All the strings of <code>words</code> are of <strong>the same length</strong>.</p> <p>A <strong>concatenated substring</strong> in <code>s</code> is a substring that contains all the strings of any permutation of <code>words</code> concatenated.</p> <ul> <li>For example, if <code>words = [\"ab\",\"cd\",\"ef\"]</code>, then <code>\"abcdef\"</code>, <code>\"abefcd\"</code>, <code>\"cdabef\"</code>, <code>\"cdefab\"</code>, <code>\"efabcd\"</code>, and <code>\"efcdab\"</code> are all concatenated strings. <code>\"acdbef\"</code> is not a concatenated substring because it is not the concatenation of any permutation of <code>words</code>.</li> </ul> <p>Return <em>the starting indices of all the concatenated substrings in </em><code>s</code>. You can return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"barfoothefoobarman\", words = [\"foo\",\"bar\"] <strong>Output:</strong> [0,9] <strong>Explanation:</strong> Since words.length == 2 and words[i].length == 3, the concatenated substring has to be of length 6. The substring starting at 0 is \"barfoo\". It is the concatenation of [\"bar\",\"foo\"] which is a permutation of words. The substring starting at 9 is \"foobar\". It is the concatenation of [\"foo\",\"bar\"] which is a permutation of words. The output order does not matter. Returning [9,0] is fine too. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"] <strong>Output:</strong> [] <strong>Explanation:</strong> Since words.length == 4 and words[i].length == 4, the concatenated substring has to be of length 16. There is no substring of length 16 is s that is equal to the concatenation of any permutation of words. We return an empty array. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"] <strong>Output:</strong> [6,9,12] <strong>Explanation:</strong> Since words.length == 3 and words[i].length == 3, the concatenated substring has to be of length 9. The substring starting at 6 is \"foobarthe\". It is the concatenation of [\"foo\",\"bar\",\"the\"] which is a permutation of words. The substring starting at 9 is \"barthefoo\". It is the concatenation of [\"bar\",\"the\",\"foo\"] which is a permutation of words. The substring starting at 12 is \"thefoobar\". It is the concatenation of [\"the\",\"foo\",\"bar\"] which is a permutation of words. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <li><code>1 &lt;= words.length &lt;= 5000</code></li> <li><code>1 &lt;= words[i].length &lt;= 30</code></li> <li><code>s</code> and <code>words[i]</code> consist of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 31,
    "title": "Next Permutation",
    "title_slug": "next-permutation",
    "link": "https://leetcode.com/problems/next-permutation",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers"
    ],
    "question": "<div><div><p>A <strong>permutation</strong> of an array of integers is an arrangement of its members into a sequence or linear order.</p> <ul> <li>For example, for <code>arr = [1,2,3]</code>, the following are all the permutations of <code>arr</code>: <code>[1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1]</code>.</li> </ul> <p>The <strong>next permutation</strong> of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the <strong>next permutation</strong> of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).</p> <ul> <li>For example, the next permutation of <code>arr = [1,2,3]</code> is <code>[1,3,2]</code>.</li> <li>Similarly, the next permutation of <code>arr = [2,3,1]</code> is <code>[3,1,2]</code>.</li> <li>While the next permutation of <code>arr = [3,2,1]</code> is <code>[1,2,3]</code> because <code>[3,2,1]</code> does not have a lexicographical larger rearrangement.</li> </ul> <p>Given an array of integers <code>nums</code>, <em>find the next permutation of</em> <code>nums</code>.</p> <p>The replacement must be <strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in place</a></strong> and use only constant extra memory.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3] <strong>Output:</strong> [1,3,2] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,2,1] <strong>Output:</strong> [1,2,3] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,1,5] <strong>Output:</strong> [1,5,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 32,
    "title": "Longest Valid Parentheses",
    "title_slug": "longest-valid-parentheses",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "question": "<div><div><p>Given a string containing just the characters <code>'('</code> and <code>')'</code>, find the length of the longest valid (well-formed) parentheses substring.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"(()\" <strong>Output:</strong> 2 <strong>Explanation:</strong> The longest valid parentheses substring is \"()\". </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \")()())\" <strong>Output:</strong> 4 <strong>Explanation:</strong> The longest valid parentheses substring is \"()()\". </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"\" <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>s[i]</code> is <code>'('</code>, or <code>')'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 33,
    "title": "Search in Rotated Sorted Array",
    "title_slug": "search-in-rotated-sorted-array",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>There is an integer array <code>nums</code> sorted in ascending order (with <strong>distinct</strong> values).</p> <p>Prior to being passed to your function, <code>nums</code> is <strong>possibly rotated</strong> at an unknown pivot index <code>k</code> (<code>1 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,5,6,7]</code> might be rotated at pivot index <code>3</code> and become <code>[4,5,6,7,0,1,2]</code>.</p> <p>Given the array <code>nums</code> <strong>after</strong> the possible rotation and an integer <code>target</code>, return <em>the index of </em><code>target</code><em> if it is in </em><code>nums</code><em>, or </em><code>-1</code><em> if it is not in </em><code>nums</code>.</p> <p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0 <strong>Output:</strong> 4 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3 <strong>Output:</strong> -1 </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1], target = 0 <strong>Output:</strong> -1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 5000</code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li>All values of <code>nums</code> are <strong>unique</strong>.</li> <li><code>nums</code> is an ascending array that is possibly rotated.</li> <li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 34,
    "title": "Find First and Last Position of Element in Sorted Array",
    "title_slug": "find-first-and-last-position-of-element-in-sorted-array",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>Given an array of integers <code>nums</code> sorted in non-decreasing order, find the starting and ending position of a given <code>target</code> value.</p> <p>If <code>target</code> is not found in the array, return <code>[-1, -1]</code>.</p> <p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 8 <strong>Output:</strong> [3,4] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 6 <strong>Output:</strong> [-1,-1] </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [], target = 0 <strong>Output:</strong> [-1,-1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> <li><code>nums</code> is a non-decreasing array.</li> <li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 35,
    "title": "Search Insert Position",
    "title_slug": "search-insert-position",
    "link": "https://leetcode.com/problems/search-insert-position",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p> <p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,3,5,6], target = 5 <strong>Output:</strong> 2 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,3,5,6], target = 2 <strong>Output:</strong> 1 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,3,5,6], target = 7 <strong>Output:</strong> 4 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li><code>nums</code> contains <strong>distinct</strong> values sorted in <strong>ascending</strong> order.</li> <li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 36,
    "title": "Valid Sudoku",
    "title_slug": "valid-sudoku",
    "link": "https://leetcode.com/problems/valid-sudoku",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "question": "<div><div><p>Determine if a <code>9 x 9</code> Sudoku board is valid. Only the filled cells need to be validated <strong>according to the following rules</strong>:</p> <ol> <li>Each row must contain the digits <code>1-9</code> without repetition.</li> <li>Each column must contain the digits <code>1-9</code> without repetition.</li> <li>Each of the nine <code>3 x 3</code> sub-boxes of the grid must contain the digits <code>1-9</code> without repetition.</li> </ol> <p><strong>Note:</strong></p> <ul> <li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li> <li>Only the filled cells need to be validated according to the mentioned rules.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\"> <pre><strong>Input:</strong> board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"] ,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"] ,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"] ,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"] ,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"] ,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"] ,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"] ,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"] ,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> board = [[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"] ,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"] ,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"] ,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"] ,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"] ,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"] ,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"] ,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"] ,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]] <strong>Output:</strong> false <strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8's in the top left 3x3 sub-box, it is invalid. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>board.length == 9</code></li> <li><code>board[i].length == 9</code></li> <li><code>board[i][j]</code> is a digit <code>1-9</code> or <code>'.'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 37,
    "title": "Sudoku Solver",
    "title_slug": "sudoku-solver",
    "link": "https://leetcode.com/problems/sudoku-solver",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Backtracking",
      "Matrix"
    ],
    "question": "<div><div><p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p> <p>A sudoku solution must satisfy <strong>all of the following rules</strong>:</p> <ol> <li>Each of the digits <code>1-9</code> must occur exactly once in each row.</li> <li>Each of the digits <code>1-9</code> must occur exactly once in each column.</li> <li>Each of the digits <code>1-9</code> must occur exactly once in each of the 9 <code>3x3</code> sub-boxes of the grid.</li> </ol> <p>The <code>'.'</code> character indicates empty cells.</p> <p><strong>Example 1:</strong></p> <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\"> <pre><strong>Input:</strong> board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]] <strong>Output:</strong> [[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]] <strong>Explanation:</strong> The input board is shown above and the only valid solution is shown below: <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\"> </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>board.length == 9</code></li> <li><code>board[i].length == 9</code></li> <li><code>board[i][j]</code> is a digit or <code>'.'</code>.</li> <li>It is <strong>guaranteed</strong> that the input board has only one solution.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png",
        "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png"
      ],
      "previous_element": [
        "Example 1:",
        "Explanation:"
      ]
    }
  },
  {
    "id": 38,
    "title": "Count and Say",
    "title_slug": "count-and-say",
    "link": "https://leetcode.com/problems/count-and-say",
    "difficulty": "Medium",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>The <strong>count-and-say</strong> sequence is a sequence of digit strings defined by the recursive formula:</p> <ul> <li><code>countAndSay(1) = \"1\"</code></li> <li><code>countAndSay(n)</code> is the way you would \"say\" the digit string from <code>countAndSay(n-1)</code>, which is then converted into a different digit string.</li> </ul> <p>To determine how you \"say\" a digit string, split it into the <strong>minimal</strong> number of substrings such that each substring contains exactly <strong>one</strong> unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.</p> <p>For example, the saying and conversion for digit string <code>\"3322251\"</code>:</p> <img src=\"https://assets.leetcode.com/uploads/2020/10/23/countandsay.jpg\"> <p>Given a positive integer <code>n</code>, return <em>the </em><code>n<sup>th</sup></code><em> term of the <strong>count-and-say</strong> sequence</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> \"1\" <strong>Explanation:</strong> This is the base case. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 4 <strong>Output:</strong> \"1211\" <strong>Explanation:</strong> countAndSay(1) = \"1\" countAndSay(2) = say \"1\" = one 1 = \"11\" countAndSay(3) = say \"11\" = two 1's = \"21\" countAndSay(4) = say \"21\" = one 2 + one 1 = \"12\" + \"11\" = \"1211\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 30</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/23/countandsay.jpg"
      ],
      "previous_element": [
        "\"3322251\""
      ]
    }
  },
  {
    "id": 39,
    "title": "Combination Sum",
    "title_slug": "combination-sum",
    "link": "https://leetcode.com/problems/combination-sum",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>Given an array of <strong>distinct</strong> integers <code>candidates</code> and a target integer <code>target</code>, return <em>a list of all <strong>unique combinations</strong> of </em><code>candidates</code><em> where the chosen numbers sum to </em><code>target</code><em>.</em> You may return the combinations in <strong>any order</strong>.</p> <p>The <strong>same</strong> number may be chosen from <code>candidates</code> an <strong>unlimited number of times</strong>. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p> <p>The test cases are generated such that the number of unique combinations that sum up to <code>target</code> is less than <code>150</code> combinations for the given input.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> candidates = [2,3,6,7], target = 7 <strong>Output:</strong> [[2,2,3],[7]] <strong>Explanation:</strong> 2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times. 7 is a candidate, and 7 = 7. These are the only two combinations. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> candidates = [2,3,5], target = 8 <strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> candidates = [2], target = 1 <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= candidates.length &lt;= 30</code></li> <li><code>2 &lt;= candidates[i] &lt;= 40</code></li> <li>All elements of <code>candidates</code> are <strong>distinct</strong>.</li> <li><code>1 &lt;= target &lt;= 500</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 40,
    "title": "Combination Sum II",
    "title_slug": "combination-sum-ii",
    "link": "https://leetcode.com/problems/combination-sum-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code> where the candidate numbers sum to <code>target</code>.</p> <p>Each number in <code>candidates</code> may only be used <strong>once</strong> in the combination.</p> <p><strong>Note:</strong> The solution set must not contain duplicate combinations.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> candidates = [10,1,2,7,6,1,5], target = 8 <strong>Output:</strong> [ [1,1,6], [1,2,5], [1,7], [2,6] ] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> candidates = [2,5,2,1,2], target = 5 <strong>Output:</strong> [ [1,2,2], [5] ] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= candidates.length &lt;= 100</code></li> <li><code>1 &lt;= candidates[i] &lt;= 50</code></li> <li><code>1 &lt;= target &lt;= 30</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 41,
    "title": "First Missing Positive",
    "title_slug": "first-missing-positive",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Hash Table"
    ],
    "question": "<div><div><p>Given an unsorted integer array <code>nums</code>, return the smallest missing positive integer.</p> <p>You must implement an algorithm that runs in <code>O(n)</code> time and uses constant extra space.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,0] <strong>Output:</strong> 3 <strong>Explanation:</strong> The numbers in the range [1,2] are all in the array. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,4,-1,1] <strong>Output:</strong> 2 <strong>Explanation:</strong> 1 is in the array but 2 is missing. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [7,8,9,11,12] <strong>Output:</strong> 1 <strong>Explanation:</strong> The smallest positive integer 1 is missing. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 42,
    "title": "Trapping Rain Water",
    "title_slug": "trapping-rain-water",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "question": "<div><div><p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\"> <pre><strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1] <strong>Output:</strong> 6 <strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> height = [4,2,0,3,2,5] <strong>Output:</strong> 9 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == height.length</code></li> <li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li> <li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 43,
    "title": "Multiply Strings",
    "title_slug": "multiply-strings",
    "link": "https://leetcode.com/problems/multiply-strings",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "String",
      "Simulation"
    ],
    "question": "<div><div><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p> <p><strong>Note:</strong> You must not use any built-in BigInteger library or convert the inputs to integer directly.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\" <strong>Output:</strong> \"6\" </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\" <strong>Output:</strong> \"56088\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li> <li><code>num1</code> and <code>num2</code> consist of digits only.</li> <li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number <code>0</code> itself.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 44,
    "title": "Wildcard Matching",
    "title_slug": "wildcard-matching",
    "link": "https://leetcode.com/problems/wildcard-matching",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Recursion"
    ],
    "question": "<div><div><p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>'?'</code> and <code>'*'</code> where:</p> <ul> <li><code>'?'</code> Matches any single character.</li> <li><code>'*'</code> Matches any sequence of characters (including the empty sequence).</li> </ul> <p>The matching should cover the <strong>entire</strong> input string (not partial).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aa\", p = \"a\" <strong>Output:</strong> false <strong>Explanation:</strong> \"a\" does not match the entire string \"aa\". </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"aa\", p = \"*\" <strong>Output:</strong> true <strong>Explanation:</strong> '*' matches any sequence. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"cb\", p = \"?a\" <strong>Output:</strong> false <strong>Explanation:</strong> '?' matches 'c', but the second letter is 'a', which does not match 'b'. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length, p.length &lt;= 2000</code></li> <li><code>s</code> contains only lowercase English letters.</li> <li><code>p</code> contains only lowercase English letters, <code>'?'</code> or <code>'*'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 45,
    "title": "Jump Game II",
    "title_slug": "jump-game-ii",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "question": "<div><div><p>Given an array of non-negative integers <code>nums</code>, you are initially positioned at the first index of the array.</p> <p>Each element in the array represents your maximum jump length at that position.</p> <p>Your goal is to reach the last index in the minimum number of jumps.</p> <p>You can assume that you can always reach the last index.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,3,1,1,4] <strong>Output:</strong> 2 <strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,3,0,1,4] <strong>Output:</strong> 2 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= nums[i] &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 46,
    "title": "Permutations",
    "title_slug": "permutations",
    "link": "https://leetcode.com/problems/permutations",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>Given an array <code>nums</code> of distinct integers, return <em>all the possible permutations</em>. You can return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3] <strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,1] <strong>Output:</strong> [[0,1],[1,0]] </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1] <strong>Output:</strong> [[1]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 6</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> <li>All the integers of <code>nums</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 47,
    "title": "Permutations II",
    "title_slug": "permutations-ii",
    "link": "https://leetcode.com/problems/permutations-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>Given a collection of numbers, <code>nums</code>, that might contain duplicates, return <em>all possible unique permutations <strong>in any order</strong>.</em></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,1,2] <strong>Output:</strong> [[1,1,2], [1,2,1], [2,1,1]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3] <strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 8</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 48,
    "title": "Rotate Image",
    "title_slug": "rotate-image",
    "link": "https://leetcode.com/problems/rotate-image",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Matrix"
    ],
    "question": "<div><div><p>You are given an <code>n x n</code> 2D <code>matrix</code> representing an image, rotate the image by <strong>90</strong> degrees (clockwise).</p> <p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg\"> <pre><strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]] <strong>Output:</strong> [[7,4,1],[8,5,2],[9,6,3]] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg\"> <pre><strong>Input:</strong> matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]] <strong>Output:</strong> [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == matrix.length == matrix[i].length</code></li> <li><code>1 &lt;= n &lt;= 20</code></li> <li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg",
        "https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 49,
    "title": "Group Anagrams",
    "title_slug": "group-anagrams",
    "link": "https://leetcode.com/problems/group-anagrams",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "question": "<div><div><p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p> <p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"] <strong>Output:</strong> [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> strs = [\"\"] <strong>Output:</strong> [[\"\"]] </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> strs = [\"a\"] <strong>Output:</strong> [[\"a\"]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= strs.length &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= strs[i].length &lt;= 100</code></li> <li><code>strs[i]</code> consists of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 50,
    "title": "Pow(x, n)",
    "title_slug": "pow(x,-n)",
    "link": "https://leetcode.com/problems/pow(x,-n)",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Recursion"
    ],
    "question": "<div><div><p>Implement <a href=\"http://www.cplusplus.com/reference/valarray/pow/\" target=\"_blank\" rel=\"noopener\">pow(x, n)</a>, which calculates <code>x</code> raised to the power <code>n</code> (i.e., <code>x<sup>n</sup></code>).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> x = 2.00000, n = 10 <strong>Output:</strong> 1024.00000 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> x = 2.10000, n = 3 <strong>Output:</strong> 9.26100 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> x = 2.00000, n = -2 <strong>Output:</strong> 0.25000 <strong>Explanation:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-100.0 &lt; x &lt; 100.0</code></li> <li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup>-1</code></li> <li><code>n</code> is an integer.</li> <li><code>-10<sup>4</sup> &lt;= x<sup>n</sup> &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 51,
    "title": "N-Queens",
    "title_slug": "n-queens",
    "link": "https://leetcode.com/problems/n-queens",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p> <p>Given an integer <code>n</code>, return <em>all distinct solutions to the <strong>n-queens puzzle</strong></em>. You may return the answer in <strong>any order</strong>.</p> <p>Each solution contains a distinct board configuration of the n-queens' placement, where <code>'Q'</code> and <code>'.'</code> both indicate a queen and an empty space, respectively.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\"> <pre><strong>Input:</strong> n = 4 <strong>Output:</strong> [[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]] <strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle as shown above </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> [[\"Q\"]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 9</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/13/queens.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 52,
    "title": "N-Queens II",
    "title_slug": "n-queens-ii",
    "link": "https://leetcode.com/problems/n-queens-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Backtracking"
    ],
    "question": "<div><div><p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p> <p>Given an integer <code>n</code>, return <em>the number of distinct solutions to the <strong>n-queens puzzle</strong></em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\"> <pre><strong>Input:</strong> n = 4 <strong>Output:</strong> 2 <strong>Explanation:</strong> There are two distinct solutions to the 4-queens puzzle as shown. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 9</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/13/queens.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 53,
    "title": "Maximum Subarray",
    "title_slug": "maximum-subarray",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p> <p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4] <strong>Output:</strong> 6 <strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1] <strong>Output:</strong> 1 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [5,4,-1,7,8] <strong>Output:</strong> 23 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> </ul> <p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 54,
    "title": "Spiral Matrix",
    "title_slug": "spiral-matrix",
    "link": "https://leetcode.com/problems/spiral-matrix",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "question": "<div><div><p>Given an <code>m x n matrix</code> , return <em>all elements of the</em> <code>matrix</code> <em>in spiral order</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg\"> <pre><strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]] <strong>Output:</strong> [1,2,3,6,9,8,7,4,5] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral.jpg\"> <pre><strong>Input:</strong> matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]] <strong>Output:</strong> [1,2,3,4,8,12,11,10,9,5,6,7] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 10</code></li> <li><code>-100 &lt;= matrix[i][j] &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg",
        "https://assets.leetcode.com/uploads/2020/11/13/spiral.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 55,
    "title": "Jump Game",
    "title_slug": "jump-game",
    "link": "https://leetcode.com/problems/jump-game",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "question": "<div><div><p>You are given an integer array <code>nums</code>. You are initially positioned at the array's <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p> <p>Return <code>true</code><em> if you can reach the last index, or </em><code>false</code><em> otherwise</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,3,1,1,4] <strong>Output:</strong> true <strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,2,1,0,4] <strong>Output:</strong> false <strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 56,
    "title": "Merge Intervals",
    "title_slug": "merge-intervals",
    "link": "https://leetcode.com/problems/merge-intervals",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Sorting"
    ],
    "question": "<div><div><p>Given an array of <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]] <strong>Output:</strong> [[1,6],[8,10],[15,18]] <strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlap, merge them into [1,6]. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> intervals = [[1,4],[4,5]] <strong>Output:</strong> [[1,5]] <strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li> <li><code>intervals[i].length == 2</code></li> <li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 57,
    "title": "Insert Interval",
    "title_slug": "insert-interval",
    "link": "https://leetcode.com/problems/insert-interval",
    "difficulty": "Medium",
    "similar_topics": [
      "Array"
    ],
    "question": "<div><div><p>You are given an array of non-overlapping intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> represent the start and the end of the <code>i<sup>th</sup></code> interval and <code>intervals</code> is sorted in ascending order by <code>start<sub>i</sub></code>. You are also given an interval <code>newInterval = [start, end]</code> that represents the start and end of another interval.</p> <p>Insert <code>newInterval</code> into <code>intervals</code> such that <code>intervals</code> is still sorted in ascending order by <code>start<sub>i</sub></code> and <code>intervals</code> still does not have any overlapping intervals (merge overlapping intervals if necessary).</p> <p>Return <code>intervals</code><em> after the insertion</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5] <strong>Output:</strong> [[1,5],[6,9]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8] <strong>Output:</strong> [[1,2],[3,10],[12,16]] <strong>Explanation:</strong> Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10]. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li> <li><code>intervals[i].length == 2</code></li> <li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>5</sup></code></li> <li><code>intervals</code> is sorted by <code>start<sub>i</sub></code> in <strong>ascending</strong> order.</li> <li><code>newInterval.length == 2</code></li> <li><code>0 &lt;= start &lt;= end &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 58,
    "title": "Length of Last Word",
    "title_slug": "length-of-last-word",
    "link": "https://leetcode.com/problems/length-of-last-word",
    "difficulty": "Easy",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>Given a string <code>s</code> consisting of words and spaces, return <em>the length of the <strong>last</strong> word in the string.</em></p> <p>A <strong>word</strong> is a maximal substring consisting of non-space characters only.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"Hello World\" <strong>Output:</strong> 5 <strong>Explanation:</strong> The last word is \"World\" with length 5. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \" fly me to the moon \" <strong>Output:</strong> 4 <strong>Explanation:</strong> The last word is \"moon\" with length 4. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"luffy is still joyboy\" <strong>Output:</strong> 6 <strong>Explanation:</strong> The last word is \"joyboy\" with length 6. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <li><code>s</code> consists of only English letters and spaces <code>' '</code>.</li> <li>There will be at least one word in <code>s</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 59,
    "title": "Spiral Matrix II",
    "title_slug": "spiral-matrix-ii",
    "link": "https://leetcode.com/problems/spiral-matrix-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "question": "<div><div><p>Given a positive integer <code>n</code>, generate an <code>n x n matrix</code> filled with elements from <code>1</code> to <code>n<sup>2</sup></code> in spiral order.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\"> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> [[1]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 20</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 60,
    "title": "Permutation Sequence",
    "title_slug": "permutation-sequence",
    "link": "https://leetcode.com/problems/permutation-sequence",
    "difficulty": "Hard",
    "similar_topics": [
      "Math",
      "Recursion"
    ],
    "question": "<div><div><p>The set <code>[1, 2, 3, ..., n]</code> contains a total of <code>n!</code> unique permutations.</p> <p>By listing and labeling all of the permutations in order, we get the following sequence for <code>n = 3</code>:</p> <ol> <li><code>\"123\"</code></li> <li><code>\"132\"</code></li> <li><code>\"213\"</code></li> <li><code>\"231\"</code></li> <li><code>\"312\"</code></li> <li><code>\"321\"</code></li> </ol> <p>Given <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> permutation sequence.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 3, k = 3 <strong>Output:</strong> \"213\" </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 4, k = 9 <strong>Output:</strong> \"2314\" </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 3, k = 1 <strong>Output:</strong> \"123\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 9</code></li> <li><code>1 &lt;= k &lt;= n!</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 61,
    "title": "Rotate List",
    "title_slug": "rotate-list",
    "link": "https://leetcode.com/problems/rotate-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list, rotate the list to the right by <code>k</code> places.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/rotate1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5], k = 2 <strong>Output:</strong> [4,5,1,2,3] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/13/roate2.jpg\"> <pre><strong>Input:</strong> head = [0,1,2], k = 4 <strong>Output:</strong> [2,0,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 500]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li><code>0 &lt;= k &lt;= 2 * 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/13/rotate1.jpg",
        "https://assets.leetcode.com/uploads/2020/11/13/roate2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 62,
    "title": "Unique Paths",
    "title_slug": "unique-paths",
    "link": "https://leetcode.com/problems/unique-paths",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "question": "<div><div><p>There is a robot on an <code>m x n</code> grid. The robot is initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p> <p>Given the two integers <code>m</code> and <code>n</code>, return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p> <p>The test cases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\"> <pre><strong>Input:</strong> m = 3, n = 7 <strong>Output:</strong> 28 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> m = 3, n = 2 <strong>Output:</strong> 3 <strong>Explanation:</strong> From the top-left corner, there are a total of 3 ways to reach the bottom-right corner: 1. Right -&gt; Down -&gt; Down 2. Down -&gt; Down -&gt; Right 3. Down -&gt; Right -&gt; Down </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= m, n &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 63,
    "title": "Unique Paths II",
    "title_slug": "unique-paths-ii",
    "link": "https://leetcode.com/problems/unique-paths-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "question": "<div><div><p>You are given an <code>m x n</code> integer array <code>grid</code>. There is a robot initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m-1][n-1]</code>). The robot can only move either down or right at any point in time.</p> <p>An obstacle and space are marked as <code>1</code> or <code>0</code> respectively in <code>grid</code>. A path that the robot takes cannot include <strong>any</strong> square that is an obstacle.</p> <p>Return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p> <p>The testcases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg\"> <pre><strong>Input:</strong> obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]] <strong>Output:</strong> 2 <strong>Explanation:</strong> There is one obstacle in the middle of the 3x3 grid above. There are two ways to reach the bottom-right corner: 1. Right -&gt; Right -&gt; Down -&gt; Down 2. Down -&gt; Down -&gt; Right -&gt; Right </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg\"> <pre><strong>Input:</strong> obstacleGrid = [[0,1],[0,0]] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == obstacleGrid.length</code></li> <li><code>n == obstacleGrid[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li><code>obstacleGrid[i][j]</code> is <code>0</code> or <code>1</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg",
        "https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 64,
    "title": "Minimum Path Sum",
    "title_slug": "minimum-path-sum",
    "link": "https://leetcode.com/problems/minimum-path-sum",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "question": "<div><div><p>Given a <code>m x n grid</code> filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p> <p><strong>Note:</strong> You can only move either down or right at any point in time.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\"> <pre><strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]] <strong>Output:</strong> 7 <strong>Explanation:</strong> Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> grid = [[1,2,3],[4,5,6]] <strong>Output:</strong> 12 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == grid.length</code></li> <li><code>n == grid[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>0 &lt;= grid[i][j] &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 65,
    "title": "Valid Number",
    "title_slug": "valid-number",
    "link": "https://leetcode.com/problems/valid-number",
    "difficulty": "Hard",
    "similar_topics": [
      "String"
    ],
    "question": "<div><div><p>A <strong>valid number</strong> can be split up into these components (in order):</p> <ol> <li>A <strong>decimal number</strong> or an <strong>integer</strong>.</li> <li>(Optional) An <code>'e'</code> or <code>'E'</code>, followed by an <strong>integer</strong>.</li> </ol> <p>A <strong>decimal number</strong> can be split up into these components (in order):</p> <ol> <li>(Optional) A sign character (either <code>'+'</code> or <code>'-'</code>).</li> <li>One of the following formats: <ol> <li>One or more digits, followed by a dot <code>'.'</code>.</li> <li>One or more digits, followed by a dot <code>'.'</code>, followed by one or more digits.</li> <li>A dot <code>'.'</code>, followed by one or more digits.</li> </ol> </li> </ol> <p>An <strong>integer</strong> can be split up into these components (in order):</p> <ol> <li>(Optional) A sign character (either <code>'+'</code> or <code>'-'</code>).</li> <li>One or more digits.</li> </ol> <p>For example, all the following are valid numbers: <code>[\"2\", \"0089\", \"-0.1\", \"+3.14\", \"4.\", \"-.9\", \"2e10\", \"-90E3\", \"3e+7\", \"+6e-1\", \"53.5e93\", \"-123.456e789\"]</code>, while the following are not valid numbers: <code>[\"abc\", \"1a\", \"1e\", \"e3\", \"99e2.5\", \"--6\", \"-+3\", \"95a54e53\"]</code>.</p> <p>Given a string <code>s</code>, return <code>true</code><em> if </em><code>s</code><em> is a <strong>valid number</strong></em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"0\" <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"e\" <strong>Output:</strong> false </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \".\" <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 20</code></li> <li><code>s</code> consists of only English letters (both uppercase and lowercase), digits (<code>0-9</code>), plus <code>'+'</code>, minus <code>'-'</code>, or dot <code>'.'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 66,
    "title": "Plus One",
    "title_slug": "plus-one",
    "link": "https://leetcode.com/problems/plus-one",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Math"
    ],
    "question": "<div><div><p>You are given a <strong>large integer</strong> represented as an integer array <code>digits</code>, where each <code>digits[i]</code> is the <code>i<sup>th</sup></code> digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading <code>0</code>'s.</p> <p>Increment the large integer by one and return <em>the resulting array of digits</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> digits = [1,2,3] <strong>Output:</strong> [1,2,4] <strong>Explanation:</strong> The array represents the integer 123. Incrementing by one gives 123 + 1 = 124. Thus, the result should be [1,2,4]. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> digits = [4,3,2,1] <strong>Output:</strong> [4,3,2,2] <strong>Explanation:</strong> The array represents the integer 4321. Incrementing by one gives 4321 + 1 = 4322. Thus, the result should be [4,3,2,2]. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> digits = [9] <strong>Output:</strong> [1,0] <strong>Explanation:</strong> The array represents the integer 9. Incrementing by one gives 9 + 1 = 10. Thus, the result should be [1,0]. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= digits.length &lt;= 100</code></li> <li><code>0 &lt;= digits[i] &lt;= 9</code></li> <li><code>digits</code> does not contain any leading <code>0</code>'s.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 67,
    "title": "Add Binary",
    "title_slug": "add-binary",
    "link": "https://leetcode.com/problems/add-binary",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "String",
      "Bit Manipulation",
      "Simulation"
    ],
    "question": "<div><div><p>Given two binary strings <code>a</code> and <code>b</code>, return <em>their sum as a binary string</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> a = \"11\", b = \"1\" <strong>Output:</strong> \"100\" </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> a = \"1010\", b = \"1011\" <strong>Output:</strong> \"10101\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= a.length, b.length &lt;= 10<sup>4</sup></code></li> <li><code>a</code> and <code>b</code> consist only of <code>'0'</code> or <code>'1'</code> characters.</li> <li>Each string does not contain leading zeros except for the zero itself.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 68,
    "title": "Text Justification",
    "title_slug": "text-justification",
    "link": "https://leetcode.com/problems/text-justification",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "String",
      "Simulation"
    ],
    "question": "<div><div><p>Given an array of strings <code>words</code> and a width <code>maxWidth</code>, format the text such that each line has exactly <code>maxWidth</code> characters and is fully (left and right) justified.</p> <p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>' '</code> when necessary so that each line has exactly <code>maxWidth</code> characters.</p> <p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p> <p>For the last line of text, it should be left-justified, and no extra space is inserted between words.</p> <p><strong>Note:</strong></p> <ul> <li>A word is defined as a character sequence consisting of non-space characters only.</li> <li>Each word's length is guaranteed to be greater than <code>0</code> and not exceed <code>maxWidth</code>.</li> <li>The input array <code>words</code> contains at least one word.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16 <strong>Output:</strong> [ \"This is an\", \"example of text\", \"justification. \" ]</pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> words = [\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"], maxWidth = 16 <strong>Output:</strong> [ \"What must be\", \"acknowledgment \", \"shall be \" ] <strong>Explanation:</strong> Note that the last line is \"shall be \" instead of \"shall be\", because the last line must be left-justified instead of fully-justified. Note that the second line is also left-justified because it contains only one word.</pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20 <strong>Output:</strong> [ \"Science is what we\", \"understand well\", \"enough to explain to\", \"a computer. Art is\", \"everything else we\", \"do \" ]</pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= words.length &lt;= 300</code></li> <li><code>1 &lt;= words[i].length &lt;= 20</code></li> <li><code>words[i]</code> consists of only English letters and symbols.</li> <li><code>1 &lt;= maxWidth &lt;= 100</code></li> <li><code>words[i].length &lt;= maxWidth</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 69,
    "title": "Sqrt(x)",
    "title_slug": "sqrt(x)",
    "link": "https://leetcode.com/problems/sqrt(x)",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "Binary Search"
    ],
    "question": "<div><div><p>Given a non-negative integer <code>x</code>, compute and return <em>the square root of</em> <code>x</code>.</p> <p>Since the return type is an integer, the decimal digits are <strong>truncated</strong>, and only <strong>the integer part</strong> of the result is returned.</p> <p><strong>Note: </strong>You are not allowed to use any built-in exponent function or operator, such as <code>pow(x, 0.5)</code> or <code>x ** 0.5</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> x = 4 <strong>Output:</strong> 2 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> x = 8 <strong>Output:</strong> 2 <strong>Explanation:</strong> The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.</pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= x &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 70,
    "title": "Climbing Stairs",
    "title_slug": "climbing-stairs",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "question": "<div><div><p>You are climbing a staircase. It takes <code>n</code> steps to reach the top.</p> <p>Each time you can either climb <code>1</code> or <code>2</code> steps. In how many distinct ways can you climb to the top?</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 2 <strong>Output:</strong> 2 <strong>Explanation:</strong> There are two ways to climb to the top. 1. 1 step + 1 step 2. 2 steps </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> 3 <strong>Explanation:</strong> There are three ways to climb to the top. 1. 1 step + 1 step + 1 step 2. 1 step + 2 steps 3. 2 steps + 1 step </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 45</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 71,
    "title": "Simplify Path",
    "title_slug": "simplify-path",
    "link": "https://leetcode.com/problems/simplify-path",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Stack"
    ],
    "question": "<div><div><p>Given a string <code>path</code>, which is an <strong>absolute path</strong> (starting with a slash <code>'/'</code>) to a file or directory in a Unix-style file system, convert it to the simplified <strong>canonical path</strong>.</p> <p>In a Unix-style file system, a period <code>'.'</code> refers to the current directory, a double period <code>'..'</code> refers to the directory up a level, and any multiple consecutive slashes (i.e. <code>'//'</code>) are treated as a single slash <code>'/'</code>. For this problem, any other format of periods such as <code>'...'</code> are treated as file/directory names.</p> <p>The <strong>canonical path</strong> should have the following format:</p> <ul> <li>The path starts with a single slash <code>'/'</code>.</li> <li>Any two directories are separated by a single slash <code>'/'</code>.</li> <li>The path does not end with a trailing <code>'/'</code>.</li> <li>The path only contains the directories on the path from the root directory to the target file or directory (i.e., no period <code>'.'</code> or double period <code>'..'</code>)</li> </ul> <p>Return <em>the simplified <strong>canonical path</strong></em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> path = \"/home/\" <strong>Output:</strong> \"/home\" <strong>Explanation:</strong> Note that there is no trailing slash after the last directory name. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> path = \"/../\" <strong>Output:</strong> \"/\" <strong>Explanation:</strong> Going one level up from the root directory is a no-op, as the root level is the highest level you can go. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> path = \"/home//foo/\" <strong>Output:</strong> \"/home/foo\" <strong>Explanation:</strong> In the canonical path, multiple consecutive slashes are replaced by a single one. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= path.length &lt;= 3000</code></li> <li><code>path</code> consists of English letters, digits, period <code>'.'</code>, slash <code>'/'</code> or <code>'_'</code>.</li> <li><code>path</code> is a valid absolute Unix path.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 72,
    "title": "Edit Distance",
    "title_slug": "edit-distance",
    "link": "https://leetcode.com/problems/edit-distance",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of operations required to convert <code>word1</code> to <code>word2</code></em>.</p> <p>You have the following three operations permitted on a word:</p> <ul> <li>Insert a character</li> <li>Delete a character</li> <li>Replace a character</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> word1 = \"horse\", word2 = \"ros\" <strong>Output:</strong> 3 <strong>Explanation:</strong> horse -&gt; rorse (replace 'h' with 'r') rorse -&gt; rose (remove 'r') rose -&gt; ros (remove 'e') </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> word1 = \"intention\", word2 = \"execution\" <strong>Output:</strong> 5 <strong>Explanation:</strong> intention -&gt; inention (remove 't') inention -&gt; enention (replace 'i' with 'e') enention -&gt; exention (replace 'n' with 'x') exention -&gt; exection (replace 'n' with 'c') exection -&gt; execution (insert 'u') </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= word1.length, word2.length &lt;= 500</code></li> <li><code>word1</code> and <code>word2</code> consist of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 73,
    "title": "Set Matrix Zeroes",
    "title_slug": "set-matrix-zeroes",
    "link": "https://leetcode.com/problems/set-matrix-zeroes",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> integer matrix <code>matrix</code>, if an element is <code>0</code>, set its entire row and column to <code>0</code>'s.</p> <p>You must do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in place</a>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\"> <pre><strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]] <strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\"> <pre><strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] <strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[0].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li> </ul> <p><strong>Follow up:</strong></p> <ul> <li>A straightforward solution using <code>O(mn)</code> space is probably a bad idea.</li> <li>A simple improvement uses <code>O(m + n)</code> space, but still not the best solution.</li> <li>Could you devise a constant space solution?</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg",
        "https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 74,
    "title": "Search a 2D Matrix",
    "title_slug": "search-a-2d-matrix",
    "link": "https://leetcode.com/problems/search-a-2d-matrix",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search",
      "Matrix"
    ],
    "question": "<div><div><p>Write an efficient algorithm that searches for a value <code>target</code> in an <code>m x n</code> integer matrix <code>matrix</code>. This matrix has the following properties:</p> <ul> <li>Integers in each row are sorted from left to right.</li> <li>The first integer of each row is greater than the last integer of the previous row.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/05/mat.jpg\"> <pre><strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3 <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/05/mat2.jpg\"> <pre><strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 100</code></li> <li><code>-10<sup>4</sup> &lt;= matrix[i][j], target &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/05/mat.jpg",
        "https://assets.leetcode.com/uploads/2020/10/05/mat2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 75,
    "title": "Sort Colors",
    "title_slug": "sort-colors",
    "link": "https://leetcode.com/problems/sort-colors",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "question": "<div><div><p>Given an array <code>nums</code> with <code>n</code> objects colored red, white, or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in-place</a> </strong>so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p> <p>We will use the integers <code>0</code>, <code>1</code>, and <code>2</code> to represent the color red, white, and blue, respectively.</p> <p>You must solve this problem without using the library's sort function.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,0,2,1,1,0] <strong>Output:</strong> [0,0,1,1,2,2] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,0,1] <strong>Output:</strong> [0,1,2] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 300</code></li> <li><code>nums[i]</code> is either <code>0</code>, <code>1</code>, or <code>2</code>.</li> </ul> <p><strong>Follow up:</strong> Could you come up with a one-pass algorithm using only constant extra space?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 76,
    "title": "Minimum Window Substring",
    "title_slug": "minimum-window-substring",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "difficulty": "Hard",
    "similar_topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "question": "<div><div><p>Given two strings <code>s</code> and <code>t</code> of lengths <code>m</code> and <code>n</code> respectively, return <em>the <strong>minimum window substring</strong> of </em><code>s</code><em> such that every character in </em><code>t</code><em> (<strong>including duplicates</strong>) is included in the window. If there is no such substring , return the empty string </em><code>\"\"</code><em>.</em></p> <p>The testcases will be generated such that the answer is <strong>unique</strong>.</p> <p>A <strong>substring</strong> is a contiguous sequence of characters within the string.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"ADOBECODEBANC\", t = \"ABC\" <strong>Output:</strong> \"BANC\" <strong>Explanation:</strong> The minimum window substring \"BANC\" includes 'A', 'B', and 'C' from string t. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"a\", t = \"a\" <strong>Output:</strong> \"a\" <strong>Explanation:</strong> The entire string s is the minimum window. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"a\", t = \"aa\" <strong>Output:</strong> \"\" <strong>Explanation:</strong> Both 'a's from t must be included in the window. Since the largest window of s only has one 'a', return empty string. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == s.length</code></li> <li><code>n == t.length</code></li> <li><code>1 &lt;= m, n &lt;= 10<sup>5</sup></code></li> <li><code>s</code> and <code>t</code> consist of uppercase and lowercase English letters.</li> </ul> <p><strong>Follow up:</strong> Could you find an algorithm that runs in <code>O(m + n)</code> time?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 77,
    "title": "Combinations",
    "title_slug": "combinations",
    "link": "https://leetcode.com/problems/combinations",
    "difficulty": "Medium",
    "similar_topics": [
      "Backtracking"
    ],
    "question": "<div><div><p>Given two integers <code>n</code> and <code>k</code>, return <em>all possible combinations of</em> <code>k</code> <em>numbers chosen from the range</em> <code>[1, n]</code>.</p> <p>You may return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 4, k = 2 <strong>Output:</strong> [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]] <strong>Explanation:</strong> There are 4 choose 2 = 6 total combinations. Note that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1, k = 1 <strong>Output:</strong> [[1]] <strong>Explanation:</strong> There is 1 choose 1 = 1 total combination. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 20</code></li> <li><code>1 &lt;= k &lt;= n</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 78,
    "title": "Subsets",
    "title_slug": "subsets",
    "link": "https://leetcode.com/problems/subsets",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> of <strong>unique</strong> elements, return <em>all possible subsets (the power set)</em>.</p> <p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3] <strong>Output:</strong> [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0] <strong>Output:</strong> [[],[0]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> <li>All the numbers of <code>nums</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 79,
    "title": "Word Search",
    "title_slug": "word-search",
    "link": "https://leetcode.com/problems/word-search",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> grid of characters <code>board</code> and a string <code>word</code>, return <code>true</code> <em>if</em> <code>word</code> <em>exists in the grid</em>.</p> <p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\"> <pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\" <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg\"> <pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\" <strong>Output:</strong> true </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg\"> <pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\" <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == board.length</code></li> <li><code>n = board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 6</code></li> <li><code>1 &lt;= word.length &lt;= 15</code></li> <li><code>board</code> and <code>word</code> consists of only lowercase and uppercase English letters.</li> </ul> <p><strong>Follow up:</strong> Could you use search pruning to make your solution faster with a larger <code>board</code>?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/04/word2.jpg",
        "https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg",
        "https://assets.leetcode.com/uploads/2020/10/15/word3.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 80,
    "title": "Remove Duplicates from Sorted Array II",
    "title_slug": "remove-duplicates-from-sorted-array-ii",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove some duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\"><strong>in-place</strong></a> such that each unique element appears <strong>at most twice</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>.</p> <p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code> should hold the final result. It does not matter what you leave beyond the first <code>k</code> elements.</p> <p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p> <p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener\">in-place</a></strong> with O(1) extra memory.</p> <p><strong>Custom Judge:</strong></p> <p>The judge will test your solution with the following code:</p> <pre>int[] nums = [...]; // Input array int[] expectedNums = [...]; // The expected answer with correct length int k = removeDuplicates(nums); // Calls your implementation assert k == expectedNums.length; for (int i = 0; i &lt; k; i++) { assert nums[i] == expectedNums[i]; } </pre> <p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,1,1,2,2,3] <strong>Output:</strong> 5, nums = [1,1,2,2,3,_] <strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,0,1,1,1,1,2,3,3] <strong>Output:</strong> 7, nums = [0,0,1,1,2,3,3,_,_] <strong>Explanation:</strong> Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively. It does not matter what you leave beyond the returned k (hence they are underscores). </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 81,
    "title": "Search in Rotated Sorted Array II",
    "title_slug": "search-in-rotated-sorted-array-ii",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>There is an integer array <code>nums</code> sorted in non-decreasing order (not necessarily with <strong>distinct</strong> values).</p> <p>Before being passed to your function, <code>nums</code> is <strong>rotated</strong> at an unknown pivot index <code>k</code> (<code>0 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,4,4,5,6,6,7]</code> might be rotated at pivot index <code>5</code> and become <code>[4,5,6,6,7,0,1,2,4,4]</code>.</p> <p>Given the array <code>nums</code> <strong>after</strong> the rotation and an integer <code>target</code>, return <code>true</code><em> if </em><code>target</code><em> is in </em><code>nums</code><em>, or </em><code>false</code><em> if it is not in </em><code>nums</code><em>.</em></p> <p>You must decrease the overall operation steps as much as possible.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 0 <strong>Output:</strong> true </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 3 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 5000</code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li><code>nums</code> is guaranteed to be rotated at some pivot.</li> <li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li> </ul> <p><strong>Follow up:</strong> This problem is similar to <a href=\"/problems/search-in-rotated-sorted-array/description/\" target=\"_blank\" rel=\"noopener\">Search in Rotated Sorted Array</a>, but <code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 82,
    "title": "Remove Duplicates from Sorted List II",
    "title_slug": "remove-duplicates-from-sorted-list-ii",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a sorted linked list, <em>delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,3,4,4,5] <strong>Output:</strong> [1,2,5] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist2.jpg\"> <pre><strong>Input:</strong> head = [1,1,1,2,3] <strong>Output:</strong> [2,3] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/04/linkedlist1.jpg",
        "https://assets.leetcode.com/uploads/2021/01/04/linkedlist2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 83,
    "title": "Remove Duplicates from Sorted List",
    "title_slug": "remove-duplicates-from-sorted-list",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list",
    "difficulty": "Easy",
    "similar_topics": [
      "Linked List"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a sorted linked list, <em>delete all duplicates such that each element appears only once</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/list1.jpg\"> <pre><strong>Input:</strong> head = [1,1,2] <strong>Output:</strong> [1,2] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/list2.jpg\"> <pre><strong>Input:</strong> head = [1,1,2,3,3] <strong>Output:</strong> [1,2,3] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/04/list1.jpg",
        "https://assets.leetcode.com/uploads/2021/01/04/list2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 84,
    "title": "Largest Rectangle in Histogram",
    "title_slug": "largest-rectangle-in-histogram",
    "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "question": "<div><div><p>Given an array of integers <code>heights</code> representing the histogram's bar height where the width of each bar is <code>1</code>, return <em>the area of the largest rectangle in the histogram</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg\"> <pre><strong>Input:</strong> heights = [2,1,5,6,2,3] <strong>Output:</strong> 10 <strong>Explanation:</strong> The above is a histogram where width of each bar is 1. The largest rectangle is shown in the red area, which has an area = 10 units. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg\"> <pre><strong>Input:</strong> heights = [2,4] <strong>Output:</strong> 4 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= heights[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg",
        "https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 85,
    "title": "Maximal Rectangle",
    "title_slug": "maximal-rectangle",
    "link": "https://leetcode.com/problems/maximal-rectangle",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Matrix",
      "Monotonic Stack"
    ],
    "question": "<div><div><p>Given a <code>rows x cols</code> binary <code>matrix</code> filled with <code>0</code>'s and <code>1</code>'s, find the largest rectangle containing only <code>1</code>'s and return <em>its area</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg\"> <pre><strong>Input:</strong> matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]] <strong>Output:</strong> 6 <strong>Explanation:</strong> The maximal rectangle is shown in the above picture. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> matrix = [[\"0\"]] <strong>Output:</strong> 0 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> matrix = [[\"1\"]] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>rows == matrix.length</code></li> <li><code>cols == matrix[i].length</code></li> <li><code>1 &lt;= row, cols &lt;= 200</code></li> <li><code>matrix[i][j]</code> is <code>'0'</code> or <code>'1'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 86,
    "title": "Partition List",
    "title_slug": "partition-list",
    "link": "https://leetcode.com/problems/partition-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list and a value <code>x</code>, partition it such that all nodes <strong>less than</strong> <code>x</code> come before nodes <strong>greater than or equal</strong> to <code>x</code>.</p> <p>You should <strong>preserve</strong> the original relative order of the nodes in each of the two partitions.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/04/partition.jpg\"> <pre><strong>Input:</strong> head = [1,4,3,2,5,2], x = 3 <strong>Output:</strong> [1,2,2,4,3,5] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [2,1], x = 2 <strong>Output:</strong> [1,2] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 200]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> <li><code>-200 &lt;= x &lt;= 200</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/04/partition.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 87,
    "title": "Scramble String",
    "title_slug": "scramble-string",
    "link": "https://leetcode.com/problems/scramble-string",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>We can scramble a string s to get a string t using the following algorithm:</p> <ol> <li>If the length of the string is 1, stop.</li> <li>If the length of the string is &gt; 1, do the following: <ul> <li>Split the string into two non-empty substrings at a random index, i.e., if the string is <code>s</code>, divide it to <code>x</code> and <code>y</code> where <code>s = x + y</code>.</li> <li><strong>Randomly</strong> decide to swap the two substrings or to keep them in the same order. i.e., after this step, <code>s</code> may become <code>s = x + y</code> or <code>s = y + x</code>.</li> <li>Apply step 1 recursively on each of the two substrings <code>x</code> and <code>y</code>.</li> </ul> </li> </ol> <p>Given two strings <code>s1</code> and <code>s2</code> of <strong>the same length</strong>, return <code>true</code> if <code>s2</code> is a scrambled string of <code>s1</code>, otherwise, return <code>false</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s1 = \"great\", s2 = \"rgeat\" <strong>Output:</strong> true <strong>Explanation:</strong> One possible scenario applied on s1 is: \"great\" --&gt; \"gr/eat\" // divide at random index. \"gr/eat\" --&gt; \"gr/eat\" // random decision is not to swap the two substrings and keep them in order. \"gr/eat\" --&gt; \"g/r / e/at\" // apply the same algorithm recursively on both substrings. divide at random index each of them. \"g/r / e/at\" --&gt; \"r/g / e/at\" // random decision was to swap the first substring and to keep the second substring in the same order. \"r/g / e/at\" --&gt; \"r/g / e/ a/t\" // again apply the algorithm recursively, divide \"at\" to \"a/t\". \"r/g / e/ a/t\" --&gt; \"r/g / e/ a/t\" // random decision is to keep both substrings in the same order. The algorithm stops now, and the result string is \"rgeat\" which is s2. As one possible scenario led s1 to be scrambled to s2, we return true. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s1 = \"abcde\", s2 = \"caebd\" <strong>Output:</strong> false </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s1 = \"a\", s2 = \"a\" <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>s1.length == s2.length</code></li> <li><code>1 &lt;= s1.length &lt;= 30</code></li> <li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 88,
    "title": "Merge Sorted Array",
    "title_slug": "merge-sorted-array",
    "link": "https://leetcode.com/problems/merge-sorted-array",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "question": "<div><div><p>You are given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in <strong>non-decreasing order</strong>, and two integers <code>m</code> and <code>n</code>, representing the number of elements in <code>nums1</code> and <code>nums2</code> respectively.</p> <p><strong>Merge</strong> <code>nums1</code> and <code>nums2</code> into a single array sorted in <strong>non-decreasing order</strong>.</p> <p>The final sorted array should not be returned by the function, but instead be <em>stored inside the array </em><code>nums1</code>. To accommodate this, <code>nums1</code> has a length of <code>m + n</code>, where the first <code>m</code> elements denote the elements that should be merged, and the last <code>n</code> elements are set to <code>0</code> and should be ignored. <code>nums2</code> has a length of <code>n</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3 <strong>Output:</strong> [1,2,2,3,5,6] <strong>Explanation:</strong> The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums1 = [1], m = 1, nums2 = [], n = 0 <strong>Output:</strong> [1] <strong>Explanation:</strong> The arrays we are merging are [1] and []. The result of the merge is [1]. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums1 = [0], m = 0, nums2 = [1], n = 1 <strong>Output:</strong> [1] <strong>Explanation:</strong> The arrays we are merging are [] and [1]. The result of the merge is [1]. Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>nums1.length == m + n</code></li> <li><code>nums2.length == n</code></li> <li><code>0 &lt;= m, n &lt;= 200</code></li> <li><code>1 &lt;= m + n &lt;= 200</code></li> <li><code>-10<sup>9</sup> &lt;= nums1[i], nums2[j] &lt;= 10<sup>9</sup></code></li> </ul> <p><strong>Follow up: </strong>Can you come up with an algorithm that runs in <code>O(m + n)</code> time?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 89,
    "title": "Gray Code",
    "title_slug": "gray-code",
    "link": "https://leetcode.com/problems/gray-code",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Backtracking",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>An <strong>n-bit gray code sequence</strong> is a sequence of <code>2<sup>n</sup></code> integers where:</p> <ul> <li>Every integer is in the <strong>inclusive</strong> range <code>[0, 2<sup>n</sup> - 1]</code>,</li> <li>The first integer is <code>0</code>,</li> <li>An integer appears <strong>no more than once</strong> in the sequence,</li> <li>The binary representation of every pair of <strong>adjacent</strong> integers differs by <strong>exactly one bit</strong>, and</li> <li>The binary representation of the <strong>first</strong> and <strong>last</strong> integers differs by <strong>exactly one bit</strong>.</li> </ul> <p>Given an integer <code>n</code>, return <em>any valid <strong>n-bit gray code sequence</strong></em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 2 <strong>Output:</strong> [0,1,3,2] <strong>Explanation:</strong> The binary representation of [0,1,3,2] is [00,01,11,10]. - 00 and 01 differ by one bit - 01 and 11 differ by one bit - 11 and 10 differ by one bit - 10 and 00 differ by one bit [0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01]. - 00 and 10 differ by one bit - 10 and 11 differ by one bit - 11 and 01 differ by one bit - 01 and 00 differ by one bit </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> [0,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 16</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 90,
    "title": "Subsets II",
    "title_slug": "subsets-ii",
    "link": "https://leetcode.com/problems/subsets-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> that may contain duplicates, return <em>all possible subsets (the power set)</em>.</p> <p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,2] <strong>Output:</strong> [[],[1],[1,2],[1,2,2],[2],[2,2]] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0] <strong>Output:</strong> [[],[0]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10</code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 91,
    "title": "Decode Ways",
    "title_slug": "decode-ways",
    "link": "https://leetcode.com/problems/decode-ways",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>A message containing letters from <code>A-Z</code> can be <strong>encoded</strong> into numbers using the following mapping:</p> <pre>'A' -&gt; \"1\" 'B' -&gt; \"2\" ... 'Z' -&gt; \"26\" </pre> <p>To <strong>decode</strong> an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, <code>\"11106\"</code> can be mapped into:</p> <ul> <li><code>\"AAJF\"</code> with the grouping <code>(1 1 10 6)</code></li> <li><code>\"KJF\"</code> with the grouping <code>(11 10 6)</code></li> </ul> <p>Note that the grouping <code>(1 11 06)</code> is invalid because <code>\"06\"</code> cannot be mapped into <code>'F'</code> since <code>\"6\"</code> is different from <code>\"06\"</code>.</p> <p>Given a string <code>s</code> containing only digits, return <em>the <strong>number</strong> of ways to <strong>decode</strong> it</em>.</p> <p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"12\" <strong>Output:</strong> 2 <strong>Explanation:</strong> \"12\" could be decoded as \"AB\" (1 2) or \"L\" (12). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"226\" <strong>Output:</strong> 3 <strong>Explanation:</strong> \"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6). </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"06\" <strong>Output:</strong> 0 <strong>Explanation:</strong> \"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\"). </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 100</code></li> <li><code>s</code> contains only digits and may contain leading zero(s).</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 92,
    "title": "Reverse Linked List II",
    "title_slug": "reverse-linked-list-ii",
    "link": "https://leetcode.com/problems/reverse-linked-list-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a singly linked list and two integers <code>left</code> and <code>right</code> where <code>left &lt;= right</code>, reverse the nodes of the list from position <code>left</code> to position <code>right</code>, and return <em>the reversed list</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5], left = 2, right = 4 <strong>Output:</strong> [1,4,3,2,5] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [5], left = 1, right = 1 <strong>Output:</strong> [5] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is <code>n</code>.</li> <li><code>1 &lt;= n &lt;= 500</code></li> <li><code>-500 &lt;= Node.val &lt;= 500</code></li> <li><code>1 &lt;= left &lt;= right &lt;= n</code></li> </ul> <strong>Follow up:</strong> Could you do it in one pass?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 93,
    "title": "Restore IP Addresses",
    "title_slug": "restore-ip-addresses",
    "link": "https://leetcode.com/problems/restore-ip-addresses",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Backtracking"
    ],
    "question": "<div><div><p>A <strong>valid IP address</strong> consists of exactly four integers separated by single dots. Each integer is between <code>0</code> and <code>255</code> (<strong>inclusive</strong>) and cannot have leading zeros.</p> <ul> <li>For example, <code>\"0.1.2.201\"</code> and <code>\"192.168.1.1\"</code> are <strong>valid</strong> IP addresses, but <code>\"0.011.255.245\"</code>, <code>\"192.168.1.312\"</code> and <code>\"192.168@1.1\"</code> are <strong>invalid</strong> IP addresses.</li> </ul> <p>Given a string <code>s</code> containing only digits, return <em>all possible valid IP addresses that can be formed by inserting dots into </em><code>s</code>. You are <strong>not</strong> allowed to reorder or remove any digits in <code>s</code>. You may return the valid IP addresses in <strong>any</strong> order.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"25525511135\" <strong>Output:</strong> [\"255.255.11.135\",\"255.255.111.35\"] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"0000\" <strong>Output:</strong> [\"0.0.0.0\"] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"101023\" <strong>Output:</strong> [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 20</code></li> <li><code>s</code> consists of digits only.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 94,
    "title": "Binary Tree Inorder Traversal",
    "title_slug": "binary-tree-inorder-traversal",
    "link": "https://leetcode.com/problems/binary-tree-inorder-traversal",
    "difficulty": "Easy",
    "similar_topics": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes' values</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\"> <pre><strong>Input:</strong> root = [1,null,2,3] <strong>Output:</strong> [1,3,2] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 95,
    "title": "Unique Binary Search Trees II",
    "title_slug": "unique-binary-search-trees-ii",
    "link": "https://leetcode.com/problems/unique-binary-search-trees-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Dynamic Programming",
      "Backtracking",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return <em>all the structurally unique <strong>BST'</strong>s (binary search trees), which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>. Return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\"> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> [[1]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 8</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 96,
    "title": "Unique Binary Search Trees",
    "title_slug": "unique-binary-search-trees",
    "link": "https://leetcode.com/problems/unique-binary-search-trees",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return <em>the number of structurally unique <strong>BST'</strong>s (binary search trees) which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\"> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> 5 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 19</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 97,
    "title": "Interleaving String",
    "title_slug": "interleaving-string",
    "link": "https://leetcode.com/problems/interleaving-string",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given strings <code>s1</code>, <code>s2</code>, and <code>s3</code>, find whether <code>s3</code> is formed by an <strong>interleaving</strong> of <code>s1</code> and <code>s2</code>.</p> <p>An <strong>interleaving</strong> of two strings <code>s</code> and <code>t</code> is a configuration where <code>s</code> and <code>t</code> are divided into <code>n</code> and <code>m</code> <strong>non-empty</strong> substrings respectively, such that:</p> <ul> <li><code>s = s<sub>1</sub> + s<sub>2</sub> + ... + s<sub>n</sub></code></li> <li><code>t = t<sub>1</sub> + t<sub>2</sub> + ... + t<sub>m</sub></code></li> <li><code>|n - m| &lt;= 1</code></li> <li>The <strong>interleaving</strong> is <code>s<sub>1</sub> + t<sub>1</sub> + s<sub>2</sub> + t<sub>2</sub> + s<sub>3</sub> + t<sub>3</sub> + ...</code> or <code>t<sub>1</sub> + s<sub>1</sub> + t<sub>2</sub> + s<sub>2</sub> + t<sub>3</sub> + s<sub>3</sub> + ...</code></li> </ul> <p><strong>Note:</strong> <code>a + b</code> is the concatenation of strings <code>a</code> and <code>b</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg\"> <pre><strong>Input:</strong> s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\" <strong>Output:</strong> true <strong>Explanation:</strong> One way to obtain s3 is: Split s1 into s1 = \"aa\" + \"bc\" + \"c\", and s2 into s2 = \"dbbc\" + \"a\". Interleaving the two splits, we get \"aa\" + \"dbbc\" + \"bc\" + \"a\" + \"c\" = \"aadbbcbcac\". Since s3 can be obtained by interleaving s1 and s2, we return true. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\" <strong>Output:</strong> false <strong>Explanation:</strong> Notice how it is impossible to interleave s2 with any other string to obtain s3. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s1 = \"\", s2 = \"\", s3 = \"\" <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s1.length, s2.length &lt;= 100</code></li> <li><code>0 &lt;= s3.length &lt;= 200</code></li> <li><code>s1</code>, <code>s2</code>, and <code>s3</code> consist of lowercase English letters.</li> </ul> <p><strong>Follow up:</strong> Could you solve it using only <code>O(s2.length)</code> additional memory space?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 98,
    "title": "Validate Binary Search Tree",
    "title_slug": "validate-binary-search-tree",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, <em>determine if it is a valid binary search tree (BST)</em>.</p> <p>A <strong>valid BST</strong> is defined as follows:</p> <ul> <li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node's key.</li> <li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node's key.</li> <li>Both the left and right subtrees must also be binary search trees.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg\"> <pre><strong>Input:</strong> root = [2,1,3] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg\"> <pre><strong>Input:</strong> root = [5,1,4,null,null,3,6] <strong>Output:</strong> false <strong>Explanation:</strong> The root node's value is 5 but its right child's value is 4. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li> <li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg",
        "https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 99,
    "title": "Recover Binary Search Tree",
    "title_slug": "recover-binary-search-tree",
    "link": "https://leetcode.com/problems/recover-binary-search-tree",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>You are given the <code>root</code> of a binary search tree (BST), where the values of <strong>exactly</strong> two nodes of the tree were swapped by mistake. <em>Recover the tree without changing its structure</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg\"> <pre><strong>Input:</strong> root = [1,3,null,null,2] <strong>Output:</strong> [3,1,null,null,2] <strong>Explanation:</strong> 3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg\"> <pre><strong>Input:</strong> root = [3,1,4,null,null,2] <strong>Output:</strong> [2,1,4,null,null,3] <strong>Explanation:</strong> 2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[2, 1000]</code>.</li> <li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li> </ul> <strong>Follow up:</strong> A solution using <code>O(n)</code> space is pretty straight-forward. Could you devise a constant <code>O(1)</code> space solution?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg",
        "https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 100,
    "title": "Same Tree",
    "title_slug": "same-tree",
    "link": "https://leetcode.com/problems/same-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the roots of two binary trees <code>p</code> and <code>q</code>, write a function to check if they are the same or not.</p> <p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg\"> <pre><strong>Input:</strong> p = [1,2,3], q = [1,2,3] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg\"> <pre><strong>Input:</strong> p = [1,2], q = [1,null,2] <strong>Output:</strong> false </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg\"> <pre><strong>Input:</strong> p = [1,2,1], q = [1,1,2] <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in both trees is in the range <code>[0, 100]</code>.</li> <li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg",
        "https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg",
        "https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 101,
    "title": "Symmetric Tree",
    "title_slug": "symmetric-tree",
    "link": "https://leetcode.com/problems/symmetric-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, <em>check whether it is a mirror of itself</em> (i.e., symmetric around its center).</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg\"> <pre><strong>Input:</strong> root = [1,2,2,3,4,4,3] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg\"> <pre><strong>Input:</strong> root = [1,2,2,null,3,null,3] <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <strong>Follow up:</strong> Could you solve it both recursively and iteratively?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg",
        "https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 102,
    "title": "Binary Tree Level Order Traversal",
    "title_slug": "binary-tree-level-order-traversal",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the level order traversal of its nodes' values</em>. (i.e., from left to right, level by level).</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> [[3],[9,20],[15,7]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [[1]] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 103,
    "title": "Binary Tree Zigzag Level Order Traversal",
    "title_slug": "binary-tree-zigzag-level-order-traversal",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the zigzag level order traversal of its nodes' values</em>. (i.e., from left to right, then right to left for the next level and alternate between).</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> [[3],[20,9],[15,7]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [[1]] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 104,
    "title": "Maximum Depth of Binary Tree",
    "title_slug": "maximum-depth-of-binary-tree",
    "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>its maximum depth</em>.</p> <p>A binary tree's <strong>maximum depth</strong> is the number of nodes along the longest path from the root node down to the farthest leaf node.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/26/tmp-tree.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> 3 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1,null,2] <strong>Output:</strong> 2 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/26/tmp-tree.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 105,
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "title_slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return <em>the binary tree</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\"> <pre><strong>Input:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7] <strong>Output:</strong> [3,9,20,null,null,15,7] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> preorder = [-1], inorder = [-1] <strong>Output:</strong> [-1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= preorder.length &lt;= 3000</code></li> <li><code>inorder.length == preorder.length</code></li> <li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li> <li><code>preorder</code> and <code>inorder</code> consist of <strong>unique</strong> values.</li> <li>Each value of <code>inorder</code> also appears in <code>preorder</code>.</li> <li><code>preorder</code> is <strong>guaranteed</strong> to be the preorder traversal of the tree.</li> <li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/tree.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 106,
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "title_slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given two integer arrays <code>inorder</code> and <code>postorder</code> where <code>inorder</code> is the inorder traversal of a binary tree and <code>postorder</code> is the postorder traversal of the same tree, construct and return <em>the binary tree</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\"> <pre><strong>Input:</strong> inorder = [9,3,15,20,7], postorder = [9,15,7,20,3] <strong>Output:</strong> [3,9,20,null,null,15,7] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> inorder = [-1], postorder = [-1] <strong>Output:</strong> [-1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= inorder.length &lt;= 3000</code></li> <li><code>postorder.length == inorder.length</code></li> <li><code>-3000 &lt;= inorder[i], postorder[i] &lt;= 3000</code></li> <li><code>inorder</code> and <code>postorder</code> consist of <strong>unique</strong> values.</li> <li>Each value of <code>postorder</code> also appears in <code>inorder</code>.</li> <li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li> <li><code>postorder</code> is <strong>guaranteed</strong> to be the postorder traversal of the tree.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/tree.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 107,
    "title": "Binary Tree Level Order Traversal II",
    "title_slug": "binary-tree-level-order-traversal-ii",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the bottom-up level order traversal of its nodes' values</em>. (i.e., from left to right, level by level from leaf to root).</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> [[15,7],[9,20],[3]] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [[1]] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 108,
    "title": "Convert Sorted Array to Binary Search Tree",
    "title_slug": "convert-sorted-array-to-binary-search-tree",
    "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> where the elements are sorted in <strong>ascending order</strong>, convert <em>it to a <strong>height-balanced</strong> binary search tree</em>.</p> <p>A <strong>height-balanced</strong> binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/18/btree1.jpg\"> <pre><strong>Input:</strong> nums = [-10,-3,0,5,9] <strong>Output:</strong> [0,-3,9,-10,null,5] <strong>Explanation:</strong> [0,-10,5,null,-3,null,9] is also accepted: <img src=\"https://assets.leetcode.com/uploads/2021/02/18/btree2.jpg\"> </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/18/btree.jpg\"> <pre><strong>Input:</strong> nums = [1,3] <strong>Output:</strong> [3,1] <strong>Explanation:</strong> [1,null,3] and [3,1] are both height-balanced BSTs. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li><code>nums</code> is sorted in a <strong>strictly increasing</strong> order.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/18/btree1.jpg",
        "https://assets.leetcode.com/uploads/2021/02/18/btree2.jpg",
        "https://assets.leetcode.com/uploads/2021/02/18/btree.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Explanation:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 109,
    "title": "Convert Sorted List to Binary Search Tree",
    "title_slug": "convert-sorted-list-to-binary-search-tree",
    "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a singly linked list where elements are <strong>sorted in ascending order</strong>, convert it to a height balanced BST.</p> <p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/17/linked.jpg\"> <pre><strong>Input:</strong> head = [-10,-3,0,5,9] <strong>Output:</strong> [0,-3,9,-10,null,5] <strong>Explanation:</strong> One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in <code>head</code> is in the range <code>[0, 2 * 10<sup>4</sup>]</code>.</li> <li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/08/17/linked.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 110,
    "title": "Balanced Binary Tree",
    "title_slug": "balanced-binary-tree",
    "link": "https://leetcode.com/problems/balanced-binary-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given a binary tree, determine if it is height-balanced.</p> <p>For this problem, a height-balanced binary tree is defined as:</p>  <p>a binary tree in which the left and right subtrees of <em>every</em> node differ in height by no more than 1.</p>  <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg\"> <pre><strong>Input:</strong> root = [1,2,2,3,3,null,null,4,4] <strong>Output:</strong> false </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li> <li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg",
        "https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 111,
    "title": "Minimum Depth of Binary Tree",
    "title_slug": "minimum-depth-of-binary-tree",
    "link": "https://leetcode.com/problems/minimum-depth-of-binary-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given a binary tree, find its minimum depth.</p> <p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p> <p><strong>Note:</strong> A leaf is a node with no children.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/12/ex_depth.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> 2 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [2,null,3,null,4,null,5,null,6] <strong>Output:</strong> 5 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 10<sup>5</sup>]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/12/ex_depth.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 112,
    "title": "Path Sum",
    "title_slug": "path-sum",
    "link": "https://leetcode.com/problems/path-sum",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <code>true</code> if the tree has a <strong>root-to-leaf</strong> path such that adding up all the values along the path equals <code>targetSum</code>.</p> <p>A <strong>leaf</strong> is a node with no children.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg\"> <pre><strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22 <strong>Output:</strong> true <strong>Explanation:</strong> The root-to-leaf path with the target sum is shown. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\"> <pre><strong>Input:</strong> root = [1,2,3], targetSum = 5 <strong>Output:</strong> false <strong>Explanation:</strong> There two root-to-leaf paths in the tree: (1 --&gt; 2): The sum is 3. (1 --&gt; 3): The sum is 4. There is no root-to-leaf path with sum = 5. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [], targetSum = 0 <strong>Output:</strong> false <strong>Explanation:</strong> Since the tree is empty, there are no root-to-leaf paths. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> <li><code>-1000 &lt;= targetSum &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg",
        "https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 113,
    "title": "Path Sum II",
    "title_slug": "path-sum-ii",
    "link": "https://leetcode.com/problems/path-sum-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <em>all <strong>root-to-leaf</strong> paths where the sum of the node values in the path equals </em><code>targetSum</code><em>. Each path should be returned as a list of the node <strong>values</strong>, not node references</em>.</p> <p>A <strong>root-to-leaf</strong> path is a path starting from the root and ending at any leaf node. A <strong>leaf</strong> is a node with no children.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg\"> <pre><strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22 <strong>Output:</strong> [[5,4,11,2],[5,8,4,5]] <strong>Explanation:</strong> There are two paths whose sum equals targetSum: 5 + 4 + 11 + 2 = 22 5 + 8 + 4 + 5 = 22 </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\"> <pre><strong>Input:</strong> root = [1,2,3], targetSum = 5 <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1,2], targetSum = 0 <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> <li><code>-1000 &lt;= targetSum &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg",
        "https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 114,
    "title": "Flatten Binary Tree to Linked List",
    "title_slug": "flatten-binary-tree-to-linked-list",
    "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, flatten the tree into a \"linked list\":</p> <ul> <li>The \"linked list\" should use the same <code>TreeNode</code> class where the <code>right</code> child pointer points to the next node in the list and the <code>left</code> child pointer is always <code>null</code>.</li> <li>The \"linked list\" should be in the same order as a <a href=\"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR\" target=\"_blank\" rel=\"noopener\"><strong>pre-order traversal</strong></a> of the binary tree.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/14/flaten.jpg\"> <pre><strong>Input:</strong> root = [1,2,5,3,4,null,6] <strong>Output:</strong> [1,null,2,null,3,null,4,null,5,null,6] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [0] <strong>Output:</strong> [0] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <strong>Follow up:</strong> Can you flatten the tree in-place (with <code>O(1)</code> extra space)?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/14/flaten.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 115,
    "title": "Distinct Subsequences",
    "title_slug": "distinct-subsequences",
    "link": "https://leetcode.com/problems/distinct-subsequences",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given two strings <code>s</code> and <code>t</code>, return <em>the number of distinct subsequences of <code>s</code> which equals <code>t</code></em>.</p> <p>A string's <strong>subsequence</strong> is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters' relative positions. (i.e., <code>\"ACE\"</code> is a subsequence of <code>\"ABCDE\"</code> while <code>\"AEC\"</code> is not).</p> <p>The test cases are generated so that the answer fits on a 32-bit signed integer.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"rabbbit\", t = \"rabbit\" <strong>Output:</strong> 3 <strong>Explanation:</strong> As shown below, there are 3 ways you can generate \"rabbit\" from s. <code><strong>rabb</strong>b<strong>it</strong><strong>ra</strong>b<strong>bbit</strong><strong>rab</strong>b<strong>bit</strong></code> </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"babgbag\", t = \"bag\" <strong>Output:</strong> 5 <strong>Explanation:</strong> As shown below, there are 5 ways you can generate \"bag\" from s. <code><strong>ba</strong>b<strong>g</strong>bag<strong>ba</strong>bgba<strong>g</strong><strong>b</strong>abgb<strong>ag</strong> ba<strong>b</strong>gb<strong>ag</strong> babg<strong>bag</strong></code> </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length, t.length &lt;= 1000</code></li> <li><code>s</code> and <code>t</code> consist of English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 116,
    "title": "Populating Next Right Pointers in Each Node",
    "title_slug": "populating-next-right-pointers-in-each-node",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>You are given a <strong>perfect binary tree</strong> where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p> <pre>struct Node { int val; Node *left; Node *right; Node *next; } </pre> <p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p> <p>Initially, all next pointers are set to <code>NULL</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2019/02/14/116_sample.png\"> <pre><strong>Input:</strong> root = [1,2,3,4,5,6,7] <strong>Output:</strong> [1,#,2,3,#,4,5,6,7,#] <strong>Explanation: </strong>Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 2<sup>12</sup> - 1]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> <p><strong>Follow-up:</strong></p> <ul> <li>You may only use constant extra space.</li> <li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2019/02/14/116_sample.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 117,
    "title": "Populating Next Right Pointers in Each Node II",
    "title_slug": "populating-next-right-pointers-in-each-node-ii",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given a binary tree</p> <pre>struct Node { int val; Node *left; Node *right; Node *next; } </pre> <p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p> <p>Initially, all next pointers are set to <code>NULL</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2019/02/15/117_sample.png\"> <pre><strong>Input:</strong> root = [1,2,3,4,5,null,7] <strong>Output:</strong> [1,#,2,3,#,4,5,7,#] <strong>Explanation: </strong>Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 6000]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <p><strong>Follow-up:</strong></p> <ul> <li>You may only use constant extra space.</li> <li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2019/02/15/117_sample.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 118,
    "title": "Pascal's Triangle",
    "title_slug": "pascal's-triangle",
    "link": "https://leetcode.com/problems/pascal's-triangle",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given an integer <code>numRows</code>, return the first numRows of <strong>Pascal's triangle</strong>.</p> <p>In <strong>Pascal's triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p> <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\"> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> numRows = 5 <strong>Output:</strong> [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> numRows = 1 <strong>Output:</strong> [[1]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= numRows &lt;= 30</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif"
      ],
      "previous_element": [
        "Pascal's triangle"
      ]
    }
  },
  {
    "id": 119,
    "title": "Pascal's Triangle II",
    "title_slug": "pascal's-triangle-ii",
    "link": "https://leetcode.com/problems/pascal's-triangle-ii",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given an integer <code>rowIndex</code>, return the <code>rowIndex<sup>th</sup></code> (<strong>0-indexed</strong>) row of the <strong>Pascal's triangle</strong>.</p> <p>In <strong>Pascal's triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p> <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\"> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> rowIndex = 3 <strong>Output:</strong> [1,3,3,1] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> rowIndex = 0 <strong>Output:</strong> [1] </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> rowIndex = 1 <strong>Output:</strong> [1,1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= rowIndex &lt;= 33</code></li> </ul> <p><strong>Follow up:</strong> Could you optimize your algorithm to use only <code>O(rowIndex)</code> extra space?</p> </div></div>",
    "images": {
      "image": [
        "https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif"
      ],
      "previous_element": [
        "Pascal's triangle"
      ]
    }
  },
  {
    "id": 120,
    "title": "Triangle",
    "title_slug": "triangle",
    "link": "https://leetcode.com/problems/triangle",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given a <code>triangle</code> array, return <em>the minimum path sum from top to bottom</em>.</p> <p>For each step, you may move to an adjacent number of the row below. More formally, if you are on index <code>i</code> on the current row, you may move to either index <code>i</code> or index <code>i + 1</code> on the next row.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> triangle = [[2],[3,4],[6,5,7],[4,1,8,3]] <strong>Output:</strong> 11 <strong>Explanation:</strong> The triangle looks like: 2 3 4 6 5 7 4 1 8 3 The minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above). </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> triangle = [[-10]] <strong>Output:</strong> -10 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= triangle.length &lt;= 200</code></li> <li><code>triangle[0].length == 1</code></li> <li><code>triangle[i].length == triangle[i - 1].length + 1</code></li> <li><code>-10<sup>4</sup> &lt;= triangle[i][j] &lt;= 10<sup>4</sup></code></li> </ul> <strong>Follow up:</strong> Could you do this using only <code>O(n)</code> extra space, where <code>n</code> is the total number of rows in the triangle?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 121,
    "title": "Best Time to Buy and Sell Stock",
    "title_slug": "best-time-to-buy-and-sell-stock",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p> <p>You want to maximize your profit by choosing a <strong>single day</strong> to buy one stock and choosing a <strong>different day in the future</strong> to sell that stock.</p> <p>Return <em>the maximum profit you can achieve from this transaction</em>. If you cannot achieve any profit, return <code>0</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> prices = [7,1,5,3,6,4] <strong>Output:</strong> 5 <strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> prices = [7,6,4,3,1] <strong>Output:</strong> 0 <strong>Explanation:</strong> In this case, no transactions are done and the max profit = 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 122,
    "title": "Best Time to Buy and Sell Stock II",
    "title_slug": "best-time-to-buy-and-sell-stock-ii",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "question": "<div><div><p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p> <p>On each day, you may decide to buy and/or sell the stock. You can only hold <strong>at most one</strong> share of the stock at any time. However, you can buy it then immediately sell it on the <strong>same day</strong>.</p> <p>Find and return <em>the <strong>maximum</strong> profit you can achieve</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> prices = [7,1,5,3,6,4] <strong>Output:</strong> 7 <strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4. Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3. Total profit is 4 + 3 = 7. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> prices = [1,2,3,4,5] <strong>Output:</strong> 4 <strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Total profit is 4. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> prices = [7,6,4,3,1] <strong>Output:</strong> 0 <strong>Explanation:</strong> There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= prices.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 123,
    "title": "Best Time to Buy and Sell Stock III",
    "title_slug": "best-time-to-buy-and-sell-stock-iii",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p> <p>Find the maximum profit you can achieve. You may complete <strong>at most two transactions</strong>.</p> <p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> prices = [3,3,5,0,0,3,1,4] <strong>Output:</strong> 6 <strong>Explanation:</strong> Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3. Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.</pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> prices = [1,2,3,4,5] <strong>Output:</strong> 4 <strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4. Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> prices = [7,6,4,3,1] <strong>Output:</strong> 0 <strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= prices[i] &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 124,
    "title": "Binary Tree Maximum Path Sum",
    "title_slug": "binary-tree-maximum-path-sum",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "difficulty": "Hard",
    "similar_topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>A <strong>path</strong> in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence <strong>at most once</strong>. Note that the path does not need to pass through the root.</p> <p>The <strong>path sum</strong> of a path is the sum of the node's values in the path.</p> <p>Given the <code>root</code> of a binary tree, return <em>the maximum <strong>path sum</strong> of any <strong>non-empty</strong> path</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg\"> <pre><strong>Input:</strong> root = [1,2,3] <strong>Output:</strong> 6 <strong>Explanation:</strong> The optimal path is 2 -&gt; 1 -&gt; 3 with a path sum of 2 + 1 + 3 = 6. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg\"> <pre><strong>Input:</strong> root = [-10,9,20,null,null,15,7] <strong>Output:</strong> 42 <strong>Explanation:</strong> The optimal path is 15 -&gt; 20 -&gt; 7 with a path sum of 15 + 20 + 7 = 42. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 3 * 10<sup>4</sup>]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg",
        "https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 125,
    "title": "Valid Palindrome",
    "title_slug": "valid-palindrome",
    "link": "https://leetcode.com/problems/valid-palindrome",
    "difficulty": "Easy",
    "similar_topics": [
      "Two Pointers",
      "String"
    ],
    "question": "<div><div><p>A phrase is a <strong>palindrome</strong> if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p> <p>Given a string <code>s</code>, return <code>true</code><em> if it is a <strong>palindrome</strong>, or </em><code>false</code><em> otherwise</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"A man, a plan, a canal: Panama\" <strong>Output:</strong> true <strong>Explanation:</strong> \"amanaplanacanalpanama\" is a palindrome. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"race a car\" <strong>Output:</strong> false <strong>Explanation:</strong> \"raceacar\" is not a palindrome. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \" \" <strong>Output:</strong> true <strong>Explanation:</strong> s is an empty string \"\" after removing non-alphanumeric characters. Since an empty string reads the same forward and backward, it is a palindrome. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 2 * 10<sup>5</sup></code></li> <li><code>s</code> consists only of printable ASCII characters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 126,
    "title": "Word Ladder II",
    "title_slug": "word-ladder-ii",
    "link": "https://leetcode.com/problems/word-ladder-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Hash Table",
      "String",
      "Backtracking",
      "Breadth-First Search"
    ],
    "question": "<div><div><p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p> <ul> <li>Every adjacent pair of words differs by a single letter.</li> <li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li> <li><code>s<sub>k</sub> == endWord</code></li> </ul> <p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>all the <strong>shortest transformation sequences</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words </em><code>[beginWord, s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub>]</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"] <strong>Output:</strong> [[\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],[\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]] <strong>Explanation:</strong> There are 2 shortest transformation sequences: \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\" \"hit\" -&gt; \"hot\" -&gt; \"lot\" -&gt; \"log\" -&gt; \"cog\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"] <strong>Output:</strong> [] <strong>Explanation:</strong> The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= beginWord.length &lt;= 5</code></li> <li><code>endWord.length == beginWord.length</code></li> <li><code>1 &lt;= wordList.length &lt;= 500</code></li> <li><code>wordList[i].length == beginWord.length</code></li> <li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li> <li><code>beginWord != endWord</code></li> <li>All the words in <code>wordList</code> are <strong>unique</strong>.</li> <li>The <strong>sum</strong> of all shortest transformation sequences does not exceed <code>10<sup>5</sup></code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 127,
    "title": "Word Ladder",
    "title_slug": "word-ladder",
    "link": "https://leetcode.com/problems/word-ladder",
    "difficulty": "Hard",
    "similar_topics": [
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "question": "<div><div><p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p> <ul> <li>Every adjacent pair of words differs by a single letter.</li> <li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li> <li><code>s<sub>k</sub> == endWord</code></li> </ul> <p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>the <strong>number of words</strong> in the <strong>shortest transformation sequence</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or </em><code>0</code><em> if no such sequence exists.</em></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"] <strong>Output:</strong> 5 <strong>Explanation:</strong> One shortest transformation sequence is \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; cog\", which is 5 words long. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"] <strong>Output:</strong> 0 <strong>Explanation:</strong> The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= beginWord.length &lt;= 10</code></li> <li><code>endWord.length == beginWord.length</code></li> <li><code>1 &lt;= wordList.length &lt;= 5000</code></li> <li><code>wordList[i].length == beginWord.length</code></li> <li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li> <li><code>beginWord != endWord</code></li> <li>All the words in <code>wordList</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 128,
    "title": "Longest Consecutive Sequence",
    "title_slug": "longest-consecutive-sequence",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ],
    "question": "<div><div><p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest consecutive elements sequence.</em></p> <p>You must write an algorithm that runs in <code>O(n)</code> time.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [100,4,200,1,3,2] <strong>Output:</strong> 4 <strong>Explanation:</strong> The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,3,7,2,5,8,4,6,0,1] <strong>Output:</strong> 9 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 129,
    "title": "Sum Root to Leaf Numbers",
    "title_slug": "sum-root-to-leaf-numbers",
    "link": "https://leetcode.com/problems/sum-root-to-leaf-numbers",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>You are given the <code>root</code> of a binary tree containing digits from <code>0</code> to <code>9</code> only.</p> <p>Each root-to-leaf path in the tree represents a number.</p> <ul> <li>For example, the root-to-leaf path <code>1 -&gt; 2 -&gt; 3</code> represents the number <code>123</code>.</li> </ul> <p>Return <em>the total sum of all root-to-leaf numbers</em>. Test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p> <p>A <strong>leaf</strong> node is a node with no children.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg\"> <pre><strong>Input:</strong> root = [1,2,3] <strong>Output:</strong> 25 <strong>Explanation:</strong> The root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>. The root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>. Therefore, sum = 12 + 13 = <code>25</code>. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg\"> <pre><strong>Input:</strong> root = [4,9,0,5,1] <strong>Output:</strong> 1026 <strong>Explanation:</strong> The root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495. The root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491. The root-to-leaf path <code>4-&gt;0</code> represents the number 40. Therefore, sum = 495 + 491 + 40 = <code>1026</code>. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> <li>The depth of the tree will not exceed <code>10</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg",
        "https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 130,
    "title": "Surrounded Regions",
    "title_slug": "surrounded-regions",
    "link": "https://leetcode.com/problems/surrounded-regions",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> matrix <code>board</code> containing <code>'X'</code> and <code>'O'</code>, <em>capture all regions that are 4-directionally surrounded by</em> <code>'X'</code>.</p> <p>A region is <strong>captured</strong> by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg\"> <pre><strong>Input:</strong> board = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]] <strong>Output:</strong> [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]] <strong>Explanation:</strong> Notice that an 'O' should not be flipped if: - It is on the border, or - It is adjacent to an 'O' that should not be flipped. The bottom 'O' is on the border, so it is not flipped. The other three 'O' form a surrounded region, so they are flipped. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> board = [[\"X\"]] <strong>Output:</strong> [[\"X\"]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == board.length</code></li> <li><code>n == board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>board[i][j]</code> is <code>'X'</code> or <code>'O'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 131,
    "title": "Palindrome Partitioning",
    "title_slug": "palindrome-partitioning",
    "link": "https://leetcode.com/problems/palindrome-partitioning",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "question": "<div><div><p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a <strong>palindrome</strong>. Return all possible palindrome partitioning of <code>s</code>.</p> <p>A <strong>palindrome</strong> string is a string that reads the same backward as forward.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aab\" <strong>Output:</strong> [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"a\" <strong>Output:</strong> [[\"a\"]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 16</code></li> <li><code>s</code> contains only lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 132,
    "title": "Palindrome Partitioning II",
    "title_slug": "palindrome-partitioning-ii",
    "link": "https://leetcode.com/problems/palindrome-partitioning-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a palindrome.</p> <p>Return <em>the minimum cuts needed</em> for a palindrome partitioning of <code>s</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aab\" <strong>Output:</strong> 1 <strong>Explanation:</strong> The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"a\" <strong>Output:</strong> 0 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"ab\" <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 2000</code></li> <li><code>s</code> consists of lowercase English letters only.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 133,
    "title": "Clone Graph",
    "title_slug": "clone-graph",
    "link": "https://leetcode.com/problems/clone-graph",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ],
    "question": "<div><div><p>Given a reference of a node in a <strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\" rel=\"noopener\">connected</a></strong> undirected graph.</p> <p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\" rel=\"noopener\"><strong>deep copy</strong></a> (clone) of the graph.</p> <p>Each node in the graph contains a value (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p> <pre>class Node { public int val; public List&lt;Node&gt; neighbors; } </pre> <p><strong>Test case format:</strong></p> <p>For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with <code>val == 1</code>, the second node with <code>val == 2</code>, and so on. The graph is represented in the test case using an adjacency list.</p> <p><strong>An adjacency list</strong> is a collection of unordered <strong>lists</strong> used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.</p> <p>The given node will always be the first node with <code>val = 1</code>. You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2019/11/04/133_clone_graph_question.png\"> <pre><strong>Input:</strong> adjList = [[2,4],[1,3],[2,4],[1,3]] <strong>Output:</strong> [[2,4],[1,3],[2,4],[1,3]] <strong>Explanation:</strong> There are 4 nodes in the graph. 1st node (val = 1)'s neighbors are 2nd node (val = 2) and 4th node (val = 4). 2nd node (val = 2)'s neighbors are 1st node (val = 1) and 3rd node (val = 3). 3rd node (val = 3)'s neighbors are 2nd node (val = 2) and 4th node (val = 4). 4th node (val = 4)'s neighbors are 1st node (val = 1) and 3rd node (val = 3). </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/01/07/graph.png\"> <pre><strong>Input:</strong> adjList = [[]] <strong>Output:</strong> [[]] <strong>Explanation:</strong> Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> adjList = [] <strong>Output:</strong> [] <strong>Explanation:</strong> This an empty graph, it does not have any nodes. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the graph is in the range <code>[0, 100]</code>.</li> <li><code>1 &lt;= Node.val &lt;= 100</code></li> <li><code>Node.val</code> is unique for each node.</li> <li>There are no repeated edges and no self-loops in the graph.</li> <li>The Graph is connected and all nodes can be visited starting from the given node.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2019/11/04/133_clone_graph_question.png",
        "https://assets.leetcode.com/uploads/2020/01/07/graph.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 134,
    "title": "Gas Station",
    "title_slug": "gas-station",
    "link": "https://leetcode.com/problems/gas-station",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Greedy"
    ],
    "question": "<div><div><p>There are <code>n</code> gas stations along a circular route, where the amount of gas at the <code>i<sup>th</sup></code> station is <code>gas[i]</code>.</p> <p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from the <code>i<sup>th</sup></code> station to its next <code>(i + 1)<sup>th</sup></code> station. You begin the journey with an empty tank at one of the gas stations.</p> <p>Given two integer arrays <code>gas</code> and <code>cost</code>, return <em>the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return</em> <code>-1</code>. If there exists a solution, it is <strong>guaranteed</strong> to be <strong>unique</strong></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> gas = [1,2,3,4,5], cost = [3,4,5,1,2] <strong>Output:</strong> 3 <strong>Explanation:</strong> Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4 Travel to station 4. Your tank = 4 - 1 + 5 = 8 Travel to station 0. Your tank = 8 - 2 + 1 = 7 Travel to station 1. Your tank = 7 - 3 + 2 = 6 Travel to station 2. Your tank = 6 - 4 + 3 = 5 Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3. Therefore, return 3 as the starting index. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> gas = [2,3,4], cost = [3,4,3] <strong>Output:</strong> -1 <strong>Explanation:</strong> You can't start at station 0 or 1, as there is not enough gas to travel to the next station. Let's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4 Travel to station 0. Your tank = 4 - 3 + 2 = 3 Travel to station 1. Your tank = 3 - 3 + 3 = 3 You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3. Therefore, you can't travel around the circuit once no matter where you start. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == gas.length == cost.length</code></li> <li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= gas[i], cost[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 135,
    "title": "Candy",
    "title_slug": "candy",
    "link": "https://leetcode.com/problems/candy",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Greedy"
    ],
    "question": "<div><div><p>There are <code>n</code> children standing in a line. Each child is assigned a rating value given in the integer array <code>ratings</code>.</p> <p>You are giving candies to these children subjected to the following requirements:</p> <ul> <li>Each child must have at least one candy.</li> <li>Children with a higher rating get more candies than their neighbors.</li> </ul> <p>Return <em>the minimum number of candies you need to have to distribute the candies to the children</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> ratings = [1,0,2] <strong>Output:</strong> 5 <strong>Explanation:</strong> You can allocate to the first, second and third child with 2, 1, 2 candies respectively. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> ratings = [1,2,2] <strong>Output:</strong> 4 <strong>Explanation:</strong> You can allocate to the first, second and third child with 1, 2, 1 candies respectively. The third child gets 1 candy because it satisfies the above two conditions. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == ratings.length</code></li> <li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li> <li><code>0 &lt;= ratings[i] &lt;= 2 * 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 136,
    "title": "Single Number",
    "title_slug": "single-number",
    "link": "https://leetcode.com/problems/single-number",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p> <p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,2,1] <strong>Output:</strong> 1 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [4,1,2,1,2] <strong>Output:</strong> 4 </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li> <li>Each element in the array appears twice except for one element which appears only once.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 137,
    "title": "Single Number II",
    "title_slug": "single-number-ii",
    "link": "https://leetcode.com/problems/single-number-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> where every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p> <p>You must implement a solution with a linear runtime complexity and use only constant extra space.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,2,3,2] <strong>Output:</strong> 3 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99] <strong>Output:</strong> 99 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> <li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 138,
    "title": "Copy List with Random Pointer",
    "title_slug": "copy-list-with-random-pointer",
    "link": "https://leetcode.com/problems/copy-list-with-random-pointer",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Linked List"
    ],
    "question": "<div><div><p>A linked list of length <code>n</code> is given such that each node contains an additional random pointer, which could point to any node in the list, or <code>null</code>.</p> <p>Construct a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\" rel=\"noopener\"><strong>deep copy</strong></a> of the list. The deep copy should consist of exactly <code>n</code> <strong>brand new</strong> nodes, where each new node has its value set to the value of its corresponding original node. Both the <code>next</code> and <code>random</code> pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. <strong>None of the pointers in the new list should point to nodes in the original list</strong>.</p> <p>For example, if there are two nodes <code>X</code> and <code>Y</code> in the original list, where <code>X.random --&gt; Y</code>, then for the corresponding two nodes <code>x</code> and <code>y</code> in the copied list, <code>x.random --&gt; y</code>.</p> <p>Return <em>the head of the copied linked list</em>.</p> <p>The linked list is represented in the input/output as a list of <code>n</code> nodes. Each node is represented as a pair of <code>[val, random_index]</code> where:</p> <ul> <li><code>val</code>: an integer representing <code>Node.val</code></li> <li><code>random_index</code>: the index of the node (range from <code>0</code> to <code>n-1</code>) that the <code>random</code> pointer points to, or <code>null</code> if it does not point to any node.</li> </ul> <p>Your code will <strong>only</strong> be given the <code>head</code> of the original linked list.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2019/12/18/e1.png\"> <pre><strong>Input:</strong> head = [[7,null],[13,0],[11,4],[10,2],[1,0]] <strong>Output:</strong> [[7,null],[13,0],[11,4],[10,2],[1,0]] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2019/12/18/e2.png\"> <pre><strong>Input:</strong> head = [[1,1],[2,1]] <strong>Output:</strong> [[1,1],[2,1]] </pre> <p><strong>Example 3:</strong></p> <p><strong><img src=\"https://assets.leetcode.com/uploads/2019/12/18/e3.png\"></strong></p> <pre><strong>Input:</strong> head = [[3,null],[3,0],[3,null]] <strong>Output:</strong> [[3,null],[3,0],[3,null]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= n &lt;= 1000</code></li> <li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li> <li><code>Node.random</code> is <code>null</code> or is pointing to some node in the linked list.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2019/12/18/e1.png",
        "https://assets.leetcode.com/uploads/2019/12/18/e2.png",
        "https://assets.leetcode.com/uploads/2019/12/18/e3.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        ""
      ]
    }
  },
  {
    "id": 139,
    "title": "Word Break",
    "title_slug": "word-break",
    "link": "https://leetcode.com/problems/word-break",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ],
    "question": "<div><div><p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, return <code>true</code> if <code>s</code> can be segmented into a space-separated sequence of one or more dictionary words.</p> <p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"leetcode\", wordDict = [\"leet\",\"code\"] <strong>Output:</strong> true <strong>Explanation:</strong> Return true because \"leetcode\" can be segmented as \"leet code\". </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"applepenapple\", wordDict = [\"apple\",\"pen\"] <strong>Output:</strong> true <strong>Explanation:</strong> Return true because \"applepenapple\" can be segmented as \"apple pen apple\". Note that you are allowed to reuse a dictionary word. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"] <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 300</code></li> <li><code>1 &lt;= wordDict.length &lt;= 1000</code></li> <li><code>1 &lt;= wordDict[i].length &lt;= 20</code></li> <li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li> <li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 140,
    "title": "Word Break II",
    "title_slug": "word-break-ii",
    "link": "https://leetcode.com/problems/word-break-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization"
    ],
    "question": "<div><div><p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, add spaces in <code>s</code> to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in <strong>any order</strong>.</p> <p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"catsanddog\", wordDict = [\"cat\",\"cats\",\"and\",\"sand\",\"dog\"] <strong>Output:</strong> [\"cats and dog\",\"cat sand dog\"] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"pineapplepenapple\", wordDict = [\"apple\",\"pen\",\"applepen\",\"pine\",\"pineapple\"] <strong>Output:</strong> [\"pine apple pen apple\",\"pineapple pen apple\",\"pine applepen apple\"] <strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 20</code></li> <li><code>1 &lt;= wordDict.length &lt;= 1000</code></li> <li><code>1 &lt;= wordDict[i].length &lt;= 10</code></li> <li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li> <li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 141,
    "title": "Linked List Cycle",
    "title_slug": "linked-list-cycle",
    "link": "https://leetcode.com/problems/linked-list-cycle",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given <code>head</code>, the head of a linked list, determine if the linked list has a cycle in it.</p> <p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer. Internally, <code>pos</code> is used to denote the index of the node that tail's <code>next</code> pointer is connected to. <strong>Note that <code>pos</code> is not passed as a parameter</strong>.</p> <p>Return <code>true</code><em> if there is a cycle in the linked list</em>. Otherwise, return <code>false</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\"> <pre><strong>Input:</strong> head = [3,2,0,-4], pos = 1 <strong>Output:</strong> true <strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed). </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\"> <pre><strong>Input:</strong> head = [1,2], pos = 0 <strong>Output:</strong> true <strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 0th node. </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\"> <pre><strong>Input:</strong> head = [1], pos = -1 <strong>Output:</strong> false <strong>Explanation:</strong> There is no cycle in the linked list. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li> <li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li> <li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li> </ul> <p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png",
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png",
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 142,
    "title": "Linked List Cycle II",
    "title_slug": "linked-list-cycle-ii",
    "link": "https://leetcode.com/problems/linked-list-cycle-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list, return <em>the node where the cycle begins. If there is no cycle, return </em><code>null</code>.</p> <p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer. Internally, <code>pos</code> is used to denote the index of the node that tail's <code>next</code> pointer is connected to (<strong>0-indexed</strong>). It is <code>-1</code> if there is no cycle. <strong>Note that</strong> <code>pos</code> <strong>is not passed as a parameter</strong>.</p> <p><strong>Do not modify</strong> the linked list.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\"> <pre><strong>Input:</strong> head = [3,2,0,-4], pos = 1 <strong>Output:</strong> tail connects to node index 1 <strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\"> <pre><strong>Input:</strong> head = [1,2], pos = 0 <strong>Output:</strong> tail connects to node index 0 <strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node. </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\"> <pre><strong>Input:</strong> head = [1], pos = -1 <strong>Output:</strong> no cycle <strong>Explanation:</strong> There is no cycle in the linked list. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li> <li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li> <li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li> </ul> <p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png",
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png",
        "https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 143,
    "title": "Reorder List",
    "title_slug": "reorder-list",
    "link": "https://leetcode.com/problems/reorder-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ],
    "question": "<div><div><p>You are given the head of a singly linked-list. The list can be represented as:</p> <pre>L<sub>0</sub> → L<sub>1</sub> → ... → L<sub>n - 1</sub> → L<sub>n</sub> </pre> <p><em>Reorder the list to be on the following form:</em></p> <pre>L<sub>0</sub> → L<sub>n</sub> → L<sub>1</sub> → L<sub>n - 1</sub> → L<sub>2</sub> → L<sub>n - 2</sub> → ... </pre> <p>You may not modify the values in the list's nodes. Only nodes themselves may be changed.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/04/reorder1linked-list.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4] <strong>Output:</strong> [1,4,2,3] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/09/reorder2-linked-list.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5] <strong>Output:</strong> [1,5,2,4,3] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[1, 5 * 10<sup>4</sup>]</code>.</li> <li><code>1 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/04/reorder1linked-list.jpg",
        "https://assets.leetcode.com/uploads/2021/03/09/reorder2-linked-list.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 144,
    "title": "Binary Tree Preorder Traversal",
    "title_slug": "binary-tree-preorder-traversal",
    "link": "https://leetcode.com/problems/binary-tree-preorder-traversal",
    "difficulty": "Easy",
    "similar_topics": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the preorder traversal of its nodes' values</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\"> <pre><strong>Input:</strong> root = [1,null,2,3] <strong>Output:</strong> [1,2,3] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 145,
    "title": "Binary Tree Postorder Traversal",
    "title_slug": "binary-tree-postorder-traversal",
    "link": "https://leetcode.com/problems/binary-tree-postorder-traversal",
    "difficulty": "Easy",
    "similar_topics": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the postorder traversal of its nodes' values</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/28/pre1.jpg\"> <pre><strong>Input:</strong> root = [1,null,2,3] <strong>Output:</strong> [3,2,1] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of the nodes in the tree is in the range <code>[0, 100]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> <strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/08/28/pre1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 146,
    "title": "LRU Cache",
    "title_slug": "lru-cache",
    "link": "https://leetcode.com/problems/lru-cache",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "question": "<div><div><p>Design a data structure that follows the constraints of a <strong><a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\" rel=\"noopener\">Least Recently Used (LRU) cache</a></strong>.</p> <p>Implement the <code>LRUCache</code> class:</p> <ul> <li><code>LRUCache(int capacity)</code> Initialize the LRU cache with <strong>positive</strong> size <code>capacity</code>.</li> <li><code>int get(int key)</code> Return the value of the <code>key</code> if the key exists, otherwise return <code>-1</code>.</li> <li><code>void put(int key, int value)</code> Update the value of the <code>key</code> if the <code>key</code> exists. Otherwise, add the <code>key-value</code> pair to the cache. If the number of keys exceeds the <code>capacity</code> from this operation, <strong>evict</strong> the least recently used key.</li> </ul> <p>The functions <code>get</code> and <code>put</code> must each run in <code>O(1)</code> average time complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"] [[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]] <strong>Output</strong> [null, null, null, 1, null, -1, null, -1, 3, 4] <strong>Explanation</strong> LRUCache lRUCache = new LRUCache(2); lRUCache.put(1, 1); // cache is {1=1} lRUCache.put(2, 2); // cache is {1=1, 2=2} lRUCache.get(1); // return 1 lRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3} lRUCache.get(2); // returns -1 (not found) lRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3} lRUCache.get(1); // return -1 (not found) lRUCache.get(3); // return 3 lRUCache.get(4); // return 4 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= capacity &lt;= 3000</code></li> <li><code>0 &lt;= key &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= value &lt;= 10<sup>5</sup></code></li> <li>At most <code>2 * 10<sup>5</sup></code> calls will be made to <code>get</code> and <code>put</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 147,
    "title": "Insertion Sort List",
    "title_slug": "insertion-sort-list",
    "link": "https://leetcode.com/problems/insertion-sort-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Sorting"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a singly linked list, sort the list using <strong>insertion sort</strong>, and return <em>the sorted list's head</em>.</p> <p>The steps of the <strong>insertion sort</strong> algorithm:</p> <ol> <li>Insertion sort iterates, consuming one input element each repetition and growing a sorted output list.</li> <li>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.</li> <li>It repeats until no input elements remain.</li> </ol> <p>The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.</p> <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif\"> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/04/sort1linked-list.jpg\"> <pre><strong>Input:</strong> head = [4,2,1,3] <strong>Output:</strong> [1,2,3,4] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/04/sort2linked-list.jpg\"> <pre><strong>Input:</strong> head = [-1,5,3,4,0] <strong>Output:</strong> [-1,0,3,4,5] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[1, 5000]</code>.</li> <li><code>-5000 &lt;= Node.val &lt;= 5000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif",
        "https://assets.leetcode.com/uploads/2021/03/04/sort1linked-list.jpg",
        "https://assets.leetcode.com/uploads/2021/03/04/sort2linked-list.jpg"
      ],
      "previous_element": [
        "The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.",
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 148,
    "title": "Sort List",
    "title_slug": "sort-list",
    "link": "https://leetcode.com/problems/sort-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Two Pointers",
      "Divide and Conquer",
      "Sorting",
      "Merge Sort"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list, return <em>the list after sorting it in <strong>ascending order</strong></em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_1.jpg\"> <pre><strong>Input:</strong> head = [4,2,1,3] <strong>Output:</strong> [1,2,3,4] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_2.jpg\"> <pre><strong>Input:</strong> head = [-1,5,3,4,0] <strong>Output:</strong> [-1,0,3,4,5] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> head = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li> <li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li> </ul> <p><strong>Follow up:</strong> Can you sort the linked list in <code>O(n logn)</code> time and <code>O(1)</code> memory (i.e. constant space)?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/14/sort_list_1.jpg",
        "https://assets.leetcode.com/uploads/2020/09/14/sort_list_2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 149,
    "title": "Max Points on a Line",
    "title_slug": "max-points-on-a-line",
    "link": "https://leetcode.com/problems/max-points-on-a-line",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry"
    ],
    "question": "<div><div><p>Given an array of <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane, return <em>the maximum number of points that lie on the same straight line</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/25/plane1.jpg\"> <pre><strong>Input:</strong> points = [[1,1],[2,2],[3,3]] <strong>Output:</strong> 3 </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/25/plane2.jpg\"> <pre><strong>Input:</strong> points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]] <strong>Output:</strong> 4 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= points.length &lt;= 300</code></li> <li><code>points[i].length == 2</code></li> <li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li> <li>All the <code>points</code> are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/25/plane1.jpg",
        "https://assets.leetcode.com/uploads/2021/02/25/plane2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 150,
    "title": "Evaluate Reverse Polish Notation",
    "title_slug": "evaluate-reverse-polish-notation",
    "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Stack"
    ],
    "question": "<div><div><p>Evaluate the value of an arithmetic expression in <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\" rel=\"noopener\">Reverse Polish Notation</a>.</p> <p>Valid operators are <code>+</code>, <code>-</code>, <code>*</code>, and <code>/</code>. Each operand may be an integer or another expression.</p> <p><strong>Note</strong> that division between two integers should truncate toward zero.</p> <p>It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> tokens = [\"2\",\"1\",\"+\",\"3\",\"*\"] <strong>Output:</strong> 9 <strong>Explanation:</strong> ((2 + 1) * 3) = 9 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"] <strong>Output:</strong> 6 <strong>Explanation:</strong> (4 + (13 / 5)) = 6 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"] <strong>Output:</strong> 22 <strong>Explanation:</strong> ((10 * (6 / ((9 + 3) * -11))) + 17) + 5 = ((10 * (6 / (12 * -11))) + 17) + 5 = ((10 * (6 / -132)) + 17) + 5 = ((10 * 0) + 17) + 5 = (0 + 17) + 5 = 17 + 5 = 22 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= tokens.length &lt;= 10<sup>4</sup></code></li> <li><code>tokens[i]</code> is either an operator: <code>\"+\"</code>, <code>\"-\"</code>, <code>\"*\"</code>, or <code>\"/\"</code>, or an integer in the range <code>[-200, 200]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 151,
    "title": "Reverse Words in a String",
    "title_slug": "reverse-words-in-a-string",
    "link": "https://leetcode.com/problems/reverse-words-in-a-string",
    "difficulty": "Medium",
    "similar_topics": [
      "Two Pointers",
      "String"
    ],
    "question": "<div><div><p>Given an input string <code>s</code>, reverse the order of the <strong>words</strong>.</p> <p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by at least one space.</p> <p>Return <em>a string of the words in reverse order concatenated by a single space.</em></p> <p><strong>Note</strong> that <code>s</code> may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"the sky is blue\" <strong>Output:</strong> \"blue is sky the\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \" hello world \" <strong>Output:</strong> \"world hello\" <strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"a good example\" <strong>Output:</strong> \"example good a\" <strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <li><code>s</code> contains English letters (upper-case and lower-case), digits, and spaces <code>' '</code>.</li> <li>There is <strong>at least one</strong> word in <code>s</code>.</li> </ul> <p><strong>Follow-up: </strong>If the string data type is mutable in your language, can you solve it <strong>in-place</strong> with <code>O(1)</code> extra space?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 152,
    "title": "Maximum Product Subarray",
    "title_slug": "maximum-product-subarray",
    "link": "https://leetcode.com/problems/maximum-product-subarray",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, find a contiguous non-empty subarray within the array that has the largest product, and return <em>the product</em>.</p> <p>The test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p> <p>A <strong>subarray</strong> is a contiguous subsequence of the array.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,3,-2,4] <strong>Output:</strong> 6 <strong>Explanation:</strong> [2,3] has the largest product 6. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [-2,0,-1] <strong>Output:</strong> 0 <strong>Explanation:</strong> The result cannot be 2, because [-2,-1] is not a subarray. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li> <li><code>-10 &lt;= nums[i] &lt;= 10</code></li> <li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 153,
    "title": "Find Minimum in Rotated Sorted Array",
    "title_slug": "find-minimum-in-rotated-sorted-array",
    "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,2,4,5,6,7]</code> might become:</p> <ul> <li><code>[4,5,6,7,0,1,2]</code> if it was rotated <code>4</code> times.</li> <li><code>[0,1,2,4,5,6,7]</code> if it was rotated <code>7</code> times.</li> </ul> <p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p> <p>Given the sorted rotated array <code>nums</code> of <strong>unique</strong> elements, return <em>the minimum element of this array</em>.</p> <p>You must write an algorithm that runs in <code>O(log n) time.</code></p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,4,5,1,2] <strong>Output:</strong> 1 <strong>Explanation:</strong> The original array was [1,2,3,4,5] rotated 3 times. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2] <strong>Output:</strong> 0 <strong>Explanation:</strong> The original array was [0,1,2,4,5,6,7] and it was rotated 4 times. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [11,13,15,17] <strong>Output:</strong> 11 <strong>Explanation:</strong> The original array was [11,13,15,17] and it was rotated 4 times. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 5000</code></li> <li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li> <li>All the integers of <code>nums</code> are <strong>unique</strong>.</li> <li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 154,
    "title": "Find Minimum in Rotated Sorted Array II",
    "title_slug": "find-minimum-in-rotated-sorted-array-ii",
    "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,4,4,5,6,7]</code> might become:</p> <ul> <li><code>[4,5,6,7,0,1,4]</code> if it was rotated <code>4</code> times.</li> <li><code>[0,1,4,4,5,6,7]</code> if it was rotated <code>7</code> times.</li> </ul> <p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p> <p>Given the sorted rotated array <code>nums</code> that may contain <strong>duplicates</strong>, return <em>the minimum element of this array</em>.</p> <p>You must decrease the overall operation steps as much as possible.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,3,5] <strong>Output:</strong> 1 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,2,2,0,1] <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 5000</code></li> <li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li> <li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li> </ul> <p><strong>Follow up:</strong> This problem is similar to <a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\" target=\"_blank\" rel=\"noopener\">Find Minimum in Rotated Sorted Array</a>, but <code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 155,
    "title": "Min Stack",
    "title_slug": "min-stack",
    "link": "https://leetcode.com/problems/min-stack",
    "difficulty": "Medium",
    "similar_topics": [
      "Stack",
      "Design"
    ],
    "question": "<div><div><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p> <p>Implement the <code>MinStack</code> class:</p> <ul> <li><code>MinStack()</code> initializes the stack object.</li> <li><code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li> <li><code>void pop()</code> removes the element on the top of the stack.</li> <li><code>int top()</code> gets the top element of the stack.</li> <li><code>int getMin()</code> retrieves the minimum element in the stack.</li> </ul> <p>You must implement a solution with <code>O(1)</code> time complexity for each function.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"] [[],[-2],[0],[-3],[],[],[],[]] <strong>Output</strong> [null,null,null,null,-3,null,0,-2] <strong>Explanation</strong> MinStack minStack = new MinStack(); minStack.push(-2); minStack.push(0); minStack.push(-3); minStack.getMin(); // return -3 minStack.pop(); minStack.top(); // return 0 minStack.getMin(); // return -2 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li> <li>Methods <code>pop</code>, <code>top</code> and <code>getMin</code> operations will always be called on <strong>non-empty</strong> stacks.</li> <li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>getMin</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 160,
    "title": "Intersection of Two Linked Lists",
    "title_slug": "intersection-of-two-linked-lists",
    "link": "https://leetcode.com/problems/intersection-of-two-linked-lists",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given the heads of two singly linked-lists <code>headA</code> and <code>headB</code>, return <em>the node at which the two lists intersect</em>. If the two linked lists have no intersection at all, return <code>null</code>.</p> <p>For example, the following two linked lists begin to intersect at node <code>c1</code>:</p> <img src=\"https://assets.leetcode.com/uploads/2021/03/05/160_statement.png\"> <p>The test cases are generated such that there are no cycles anywhere in the entire linked structure.</p> <p><strong>Note</strong> that the linked lists must <strong>retain their original structure</strong> after the function returns.</p> <p><strong>Custom Judge:</strong></p> <p>The inputs to the <strong>judge</strong> are given as follows (your program is <strong>not</strong> given these inputs):</p> <ul> <li><code>intersectVal</code> - The value of the node where the intersection occurs. This is <code>0</code> if there is no intersected node.</li> <li><code>listA</code> - The first linked list.</li> <li><code>listB</code> - The second linked list.</li> <li><code>skipA</code> - The number of nodes to skip ahead in <code>listA</code> (starting from the head) to get to the intersected node.</li> <li><code>skipB</code> - The number of nodes to skip ahead in <code>listB</code> (starting from the head) to get to the intersected node.</li> </ul> <p>The judge will then create the linked structure based on these inputs and pass the two heads, <code>headA</code> and <code>headB</code> to your program. If you correctly return the intersected node, then your solution will be <strong>accepted</strong>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png\"> <pre><strong>Input:</strong> intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3 <strong>Output:</strong> Intersected at '8' <strong>Explanation:</strong> The intersected node's value is 8 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B. - Note that the intersected node's value is not 1 because the nodes with value 1 in A and B (2<sup>nd</sup> node in A and 3<sup>rd</sup> node in B) are different node references. In other words, they point to two different locations in memory, while the nodes with value 8 in A and B (3<sup>rd</sup> node in A and 4<sup>th</sup> node in B) point to the same location in memory. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png\"> <pre><strong>Input:</strong> intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1 <strong>Output:</strong> Intersected at '2' <strong>Explanation:</strong> The intersected node's value is 2 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B. </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png\"> <pre><strong>Input:</strong> intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2 <strong>Output:</strong> No intersection <strong>Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values. Explanation: The two lists do not intersect, so return null. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes of <code>listA</code> is in the <code>m</code>.</li> <li>The number of nodes of <code>listB</code> is in the <code>n</code>.</li> <li><code>1 &lt;= m, n &lt;= 3 * 10<sup>4</sup></code></li> <li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= skipA &lt; m</code></li> <li><code>0 &lt;= skipB &lt; n</code></li> <li><code>intersectVal</code> is <code>0</code> if <code>listA</code> and <code>listB</code> do not intersect.</li> <li><code>intersectVal == listA[skipA] == listB[skipB]</code> if <code>listA</code> and <code>listB</code> intersect.</li> </ul> <strong>Follow up:</strong> Could you write a solution that runs in <code>O(m + n)</code> time and use only <code>O(1)</code> memory?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/05/160_statement.png",
        "https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png",
        "https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png",
        "https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png"
      ],
      "previous_element": [
        "c1",
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 162,
    "title": "Find Peak Element",
    "title_slug": "find-peak-element",
    "link": "https://leetcode.com/problems/find-peak-element",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search"
    ],
    "question": "<div><div><p>A peak element is an element that is strictly greater than its neighbors.</p> <p>Given a <strong>0-indexed</strong> integer array <code>nums</code>, find a peak element, and return its index. If the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p> <p>You may imagine that <code>nums[-1] = nums[n] = -∞</code>. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.</p> <p>You must write an algorithm that runs in <code>O(log n)</code> time.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1] <strong>Output:</strong> 2 <strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,2,1,3,5,6,4] <strong>Output:</strong> 5 <strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 1000</code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> <li><code>nums[i] != nums[i + 1]</code> for all valid <code>i</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 164,
    "title": "Maximum Gap",
    "title_slug": "maximum-gap",
    "link": "https://leetcode.com/problems/maximum-gap",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Sorting",
      "Bucket Sort",
      "Radix Sort"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, return <em>the maximum difference between two successive elements in its sorted form</em>. If the array contains less than two elements, return <code>0</code>.</p> <p>You must write an algorithm that runs in linear time and uses linear extra space.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,6,9,1] <strong>Output:</strong> 3 <strong>Explanation:</strong> The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [10] <strong>Output:</strong> 0 <strong>Explanation:</strong> The array contains less than 2 elements, therefore return 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 165,
    "title": "Compare Version Numbers",
    "title_slug": "compare-version-numbers",
    "link": "https://leetcode.com/problems/compare-version-numbers",
    "difficulty": "Medium",
    "similar_topics": [
      "Two Pointers",
      "String"
    ],
    "question": "<div><div><p>Given two version numbers, <code>version1</code> and <code>version2</code>, compare them.</p> <ul> </ul> <p>Version numbers consist of <strong>one or more revisions</strong> joined by a dot <code>'.'</code>. Each revision consists of <strong>digits</strong> and may contain leading <strong>zeros</strong>. Every revision contains <strong>at least one character</strong>. Revisions are <strong>0-indexed from left to right</strong>, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example <code>2.5.33</code> and <code>0.1</code> are valid version numbers.</p> <p>To compare version numbers, compare their revisions in <strong>left-to-right order</strong>. Revisions are compared using their <strong>integer value ignoring any leading zeros</strong>. This means that revisions <code>1</code> and <code>001</code> are considered <strong>equal</strong>. If a version number does not specify a revision at an index, then <strong>treat the revision as <code>0</code></strong>. For example, version <code>1.0</code> is less than version <code>1.1</code> because their revision 0s are the same, but their revision 1s are <code>0</code> and <code>1</code> respectively, and <code>0 &lt; 1</code>.</p> <p><em>Return the following:</em></p> <ul> <li>If <code>version1 &lt; version2</code>, return <code>-1</code>.</li> <li>If <code>version1 &gt; version2</code>, return <code>1</code>.</li> <li>Otherwise, return <code>0</code>.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> version1 = \"1.01\", version2 = \"1.001\" <strong>Output:</strong> 0 <strong>Explanation:</strong> Ignoring leading zeroes, both \"01\" and \"001\" represent the same integer \"1\". </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> version1 = \"1.0\", version2 = \"1.0.0\" <strong>Output:</strong> 0 <strong>Explanation:</strong> version1 does not specify revision 2, which means it is treated as \"0\". </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> version1 = \"0.1\", version2 = \"1.1\" <strong>Output:</strong> -1 <strong>Explanation:</strong> version1's revision 0 is \"0\", while version2's revision 0 is \"1\". 0 &lt; 1, so version1 &lt; version2. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= version1.length, version2.length &lt;= 500</code></li> <li><code>version1</code> and <code>version2</code> only contain digits and <code>'.'</code>.</li> <li><code>version1</code> and <code>version2</code> <strong>are valid version numbers</strong>.</li> <li>All the given revisions in <code>version1</code> and <code>version2</code> can be stored in a <strong>32-bit integer</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 166,
    "title": "Fraction to Recurring Decimal",
    "title_slug": "fraction-to-recurring-decimal",
    "link": "https://leetcode.com/problems/fraction-to-recurring-decimal",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "question": "<div><div><p>Given two integers representing the <code>numerator</code> and <code>denominator</code> of a fraction, return <em>the fraction in string format</em>.</p> <p>If the fractional part is repeating, enclose the repeating part in parentheses.</p> <p>If multiple answers are possible, return <strong>any of them</strong>.</p> <p>It is <strong>guaranteed</strong> that the length of the answer string is less than <code>10<sup>4</sup></code> for all the given inputs.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> numerator = 1, denominator = 2 <strong>Output:</strong> \"0.5\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> numerator = 2, denominator = 1 <strong>Output:</strong> \"2\" </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> numerator = 4, denominator = 333 <strong>Output:</strong> \"0.(012)\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= numerator, denominator &lt;= 2<sup>31</sup> - 1</code></li> <li><code>denominator != 0</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 167,
    "title": "Two Sum II - Input Array Is Sorted",
    "title_slug": "two-sum-ii---input-array-is-sorted",
    "link": "https://leetcode.com/problems/two-sum-ii---input-array-is-sorted",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Two Pointers",
      "Binary Search"
    ],
    "question": "<div><div><p>Given a <strong>1-indexed</strong> array of integers <code>numbers</code> that is already <strong><em>sorted in non-decreasing order</em></strong>, find two numbers such that they add up to a specific <code>target</code> number. Let these two numbers be <code>numbers[index<sub>1</sub>]</code> and <code>numbers[index<sub>2</sub>]</code> where <code>1 &lt;= index<sub>1</sub> &lt; index<sub>2</sub> &lt;= numbers.length</code>.</p> <p>Return<em> the indices of the two numbers, </em><code>index<sub>1</sub></code><em> and </em><code>index<sub>2</sub></code><em>, <strong>added by one</strong> as an integer array </em><code>[index<sub>1</sub>, index<sub>2</sub>]</code><em> of length 2.</em></p> <p>The tests are generated such that there is <strong>exactly one solution</strong>. You <strong>may not</strong> use the same element twice.</p> <p>Your solution must use only constant extra space.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> numbers = [2,7,11,15], target = 9 <strong>Output:</strong> [1,2] <strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore, index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2]. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> numbers = [2,3,4], target = 6 <strong>Output:</strong> [1,3] <strong>Explanation:</strong> The sum of 2 and 4 is 6. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 3. We return [1, 3]. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> numbers = [-1,0], target = -1 <strong>Output:</strong> [1,2] <strong>Explanation:</strong> The sum of -1 and 0 is -1. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2]. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= numbers.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>-1000 &lt;= numbers[i] &lt;= 1000</code></li> <li><code>numbers</code> is sorted in <strong>non-decreasing order</strong>.</li> <li><code>-1000 &lt;= target &lt;= 1000</code></li> <li>The tests are generated such that there is <strong>exactly one solution</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 168,
    "title": "Excel Sheet Column Title",
    "title_slug": "excel-sheet-column-title",
    "link": "https://leetcode.com/problems/excel-sheet-column-title",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "String"
    ],
    "question": "<div><div><p>Given an integer <code>columnNumber</code>, return <em>its corresponding column title as it appears in an Excel sheet</em>.</p> <p>For example:</p> <pre>A -&gt; 1 B -&gt; 2 C -&gt; 3 ... Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ... </pre> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> columnNumber = 1 <strong>Output:</strong> \"A\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> columnNumber = 28 <strong>Output:</strong> \"AB\" </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> columnNumber = 701 <strong>Output:</strong> \"ZY\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= columnNumber &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 169,
    "title": "Majority Element",
    "title_slug": "majority-element",
    "link": "https://leetcode.com/problems/majority-element",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ],
    "question": "<div><div><p>Given an array <code>nums</code> of size <code>n</code>, return <em>the majority element</em>.</p> <p>The majority element is the element that appears more than <code>⌊n / 2⌋</code> times. You may assume that the majority element always exists in the array.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,2,3] <strong>Output:</strong> 3 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,2,1,1,1,2,2] <strong>Output:</strong> 2 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> <strong>Follow-up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 171,
    "title": "Excel Sheet Column Number",
    "title_slug": "excel-sheet-column-number",
    "link": "https://leetcode.com/problems/excel-sheet-column-number",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "String"
    ],
    "question": "<div><div><p>Given a string <code>columnTitle</code> that represents the column title as appears in an Excel sheet, return <em>its corresponding column number</em>.</p> <p>For example:</p> <pre>A -&gt; 1 B -&gt; 2 C -&gt; 3 ... Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ... </pre> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> columnTitle = \"A\" <strong>Output:</strong> 1 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> columnTitle = \"AB\" <strong>Output:</strong> 28 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> columnTitle = \"ZY\" <strong>Output:</strong> 701 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= columnTitle.length &lt;= 7</code></li> <li><code>columnTitle</code> consists only of uppercase English letters.</li> <li><code>columnTitle</code> is in the range <code>[\"A\", \"FXSHRXW\"]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 172,
    "title": "Factorial Trailing Zeroes",
    "title_slug": "factorial-trailing-zeroes",
    "link": "https://leetcode.com/problems/factorial-trailing-zeroes",
    "difficulty": "Medium",
    "similar_topics": [
      "Math"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return <em>the number of trailing zeroes in </em><code>n!</code>.</p> <p>Note that <code>n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> 0 <strong>Explanation:</strong> 3! = 6, no trailing zero. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 5 <strong>Output:</strong> 1 <strong>Explanation:</strong> 5! = 120, one trailing zero. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 0 <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= n &lt;= 10<sup>4</sup></code></li> </ul> <p><strong>Follow up:</strong> Could you write a solution that works in logarithmic time complexity?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 173,
    "title": "Binary Search Tree Iterator",
    "title_slug": "binary-search-tree-iterator",
    "link": "https://leetcode.com/problems/binary-search-tree-iterator",
    "difficulty": "Medium",
    "similar_topics": [
      "Stack",
      "Tree",
      "Design",
      "Binary Search Tree",
      "Binary Tree",
      "Iterator"
    ],
    "question": "<div><div><p>Implement the <code>BSTIterator</code> class that represents an iterator over the <strong><a href=\"https://en.wikipedia.org/wiki/Tree_traversal#In-order_(LNR)\" target=\"_blank\" rel=\"noopener\">in-order traversal</a></strong> of a binary search tree (BST):</p> <ul> <li><code>BSTIterator(TreeNode root)</code> Initializes an object of the <code>BSTIterator</code> class. The <code>root</code> of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST.</li> <li><code>boolean hasNext()</code> Returns <code>true</code> if there exists a number in the traversal to the right of the pointer, otherwise returns <code>false</code>.</li> <li><code>int next()</code> Moves the pointer to the right, then returns the number at the pointer.</li> </ul> <p>Notice that by initializing the pointer to a non-existent smallest number, the first call to <code>next()</code> will return the smallest element in the BST.</p> <p>You may assume that <code>next()</code> calls will always be valid. That is, there will be at least a next number in the in-order traversal when <code>next()</code> is called.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/25/bst-tree.png\"> <pre><strong>Input</strong> [\"BSTIterator\", \"next\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\"] [[[7, 3, 15, null, null, 9, 20]], [], [], [], [], [], [], [], [], []] <strong>Output</strong> [null, 3, 7, true, 9, true, 15, true, 20, false] <strong>Explanation</strong> BSTIterator bSTIterator = new BSTIterator([7, 3, 15, null, null, 9, 20]); bSTIterator.next(); // return 3 bSTIterator.next(); // return 7 bSTIterator.hasNext(); // return True bSTIterator.next(); // return 9 bSTIterator.hasNext(); // return True bSTIterator.next(); // return 15 bSTIterator.hasNext(); // return True bSTIterator.next(); // return 20 bSTIterator.hasNext(); // return False </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 10<sup>5</sup>]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 10<sup>6</sup></code></li> <li>At most <code>10<sup>5</sup></code> calls will be made to <code>hasNext</code>, and <code>next</code>.</li> </ul> <p><strong>Follow up:</strong></p> <ul> <li>Could you implement <code>next()</code> and <code>hasNext()</code> to run in average <code>O(1)</code> time and use <code>O(h)</code> memory, where <code>h</code> is the height of the tree?</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/12/25/bst-tree.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 174,
    "title": "Dungeon Game",
    "title_slug": "dungeon-game",
    "link": "https://leetcode.com/problems/dungeon-game",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "question": "<div><div><p>The demons had captured the princess and imprisoned her in <strong>the bottom-right corner</strong> of a <code>dungeon</code>. The <code>dungeon</code> consists of <code>m x n</code> rooms laid out in a 2D grid. Our valiant knight was initially positioned in <strong>the top-left room</strong> and must fight his way through <code>dungeon</code> to rescue the princess.</p> <p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to <code>0</code> or below, he dies immediately.</p> <p>Some of the rooms are guarded by demons (represented by negative integers), so the knight loses health upon entering these rooms; other rooms are either empty (represented as 0) or contain magic orbs that increase the knight's health (represented by positive integers).</p> <p>To reach the princess as quickly as possible, the knight decides to move only <strong>rightward</strong> or <strong>downward</strong> in each step.</p> <p>Return <em>the knight's minimum initial health so that he can rescue the princess</em>.</p> <p><strong>Note</strong> that any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/13/dungeon-grid-1.jpg\"> <pre><strong>Input:</strong> dungeon = [[-2,-3,3],[-5,-10,1],[10,30,-5]] <strong>Output:</strong> 7 <strong>Explanation:</strong> The initial health of the knight must be at least 7 if he follows the optimal path: RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> dungeon = [[0]] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == dungeon.length</code></li> <li><code>n == dungeon[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>-1000 &lt;= dungeon[i][j] &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/13/dungeon-grid-1.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 175,
    "title": "Combine Two Tables",
    "title_slug": "combine-two-tables",
    "link": "https://leetcode.com/problems/combine-two-tables",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Person</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | personId | int | | lastName | varchar | | firstName | varchar | +-------------+---------+ personId is the primary key column for this table. This table contains information about the ID of some persons and their first and last names. </pre> <p>Table: <code>Address</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | addressId | int | | personId | int | | city | varchar | | state | varchar | +-------------+---------+ addressId is the primary key column for this table. Each row of this table contains information about the city and state of one person with ID = PersonId. </pre> <p>Write an SQL query to report the first name, last name, city, and state of each person in the <code>Person</code> table. If the address of a <code>personId</code> is not present in the <code>Address</code> table, report <code>null</code> instead.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Person table: +----------+----------+-----------+ | personId | lastName | firstName | +----------+----------+-----------+ | 1 | Wang | Allen | | 2 | Alice | Bob | +----------+----------+-----------+ Address table: +-----------+----------+---------------+------------+ | addressId | personId | city | state | +-----------+----------+---------------+------------+ | 1 | 2 | New York City | New York | | 2 | 3 | Leetcode | California | +-----------+----------+---------------+------------+ <strong>Output:</strong> +-----------+----------+---------------+----------+ | firstName | lastName | city | state | +-----------+----------+---------------+----------+ | Allen | Wang | Null | Null | | Bob | Alice | New York City | New York | +-----------+----------+---------------+----------+ <strong>Explanation:</strong> There is no address in the address table for the personId = 1 so we return null in their city and state. addressId = 1 contains information about the address of personId = 2. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 176,
    "title": "Second Highest Salary",
    "title_slug": "second-highest-salary",
    "link": "https://leetcode.com/problems/second-highest-salary",
    "difficulty": "Medium",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Employee</code></p> <pre>+-------------+------+ | Column Name | Type | +-------------+------+ | id | int | | salary | int | +-------------+------+ id is the primary key column for this table. Each row of this table contains information about the salary of an employee. </pre> <p>Write an SQL query to report the second highest salary from the <code>Employee</code> table. If there is no second highest salary, the query should report <code>null</code>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Employee table: +----+--------+ | id | salary | +----+--------+ | 1 | 100 | | 2 | 200 | | 3 | 300 | +----+--------+ <strong>Output:</strong> +---------------------+ | SecondHighestSalary | +---------------------+ | 200 | +---------------------+ </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> Employee table: +----+--------+ | id | salary | +----+--------+ | 1 | 100 | +----+--------+ <strong>Output:</strong> +---------------------+ | SecondHighestSalary | +---------------------+ | null | +---------------------+ </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 177,
    "title": "Nth Highest Salary",
    "title_slug": "nth-highest-salary",
    "link": "https://leetcode.com/problems/nth-highest-salary",
    "difficulty": "Medium",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Employee</code></p> <pre>+-------------+------+ | Column Name | Type | +-------------+------+ | id | int | | salary | int | +-------------+------+ id is the primary key column for this table. Each row of this table contains information about the salary of an employee. </pre> <p>Write an SQL query to report the <code>n<sup>th</sup></code> highest salary from the <code>Employee</code> table. If there is no <code>n<sup>th</sup></code> highest salary, the query should report <code>null</code>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Employee table: +----+--------+ | id | salary | +----+--------+ | 1 | 100 | | 2 | 200 | | 3 | 300 | +----+--------+ n = 2 <strong>Output:</strong> +------------------------+ | getNthHighestSalary(2) | +------------------------+ | 200 | +------------------------+ </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> Employee table: +----+--------+ | id | salary | +----+--------+ | 1 | 100 | +----+--------+ n = 2 <strong>Output:</strong> +------------------------+ | getNthHighestSalary(2) | +------------------------+ | null | +------------------------+ </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 178,
    "title": "Rank Scores",
    "title_slug": "rank-scores",
    "link": "https://leetcode.com/problems/rank-scores",
    "difficulty": "Medium",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Scores</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | score | decimal | +-------------+---------+ id is the primary key for this table. Each row of this table contains the score of a game. Score is a floating point value with two decimal places. </pre> <p>Write an SQL query to rank the scores. The ranking should be calculated according to the following rules:</p> <ul> <li>The scores should be ranked from the highest to the lowest.</li> <li>If there is a tie between two scores, both should have the same ranking.</li> <li>After a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no holes between ranks.</li> </ul> <p>Return the result table ordered by <code>score</code> in descending order.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Scores table: +----+-------+ | id | score | +----+-------+ | 1 | 3.50 | | 2 | 3.65 | | 3 | 4.00 | | 4 | 3.85 | | 5 | 4.00 | | 6 | 3.65 | +----+-------+ <strong>Output:</strong> +-------+------+ | score | rank | +-------+------+ | 4.00 | 1 | | 4.00 | 1 | | 3.85 | 2 | | 3.65 | 3 | | 3.65 | 3 | | 3.50 | 4 | +-------+------+ </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 179,
    "title": "Largest Number",
    "title_slug": "largest-number",
    "link": "https://leetcode.com/problems/largest-number",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Greedy",
      "Sorting"
    ],
    "question": "<div><div><p>Given a list of non-negative integers <code>nums</code>, arrange them such that they form the largest number and return it.</p> <p>Since the result may be very large, so you need to return a string instead of an integer.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [10,2] <strong>Output:</strong> \"210\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,30,34,5,9] <strong>Output:</strong> \"9534330\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 180,
    "title": "Consecutive Numbers",
    "title_slug": "consecutive-numbers",
    "link": "https://leetcode.com/problems/consecutive-numbers",
    "difficulty": "Medium",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Logs</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | num | varchar | +-------------+---------+ id is the primary key for this table. id is an autoincrement column. </pre> <p>Write an SQL query to find all numbers that appear at least three times consecutively.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Logs table: +----+-----+ | id | num | +----+-----+ | 1 | 1 | | 2 | 1 | | 3 | 1 | | 4 | 2 | | 5 | 1 | | 6 | 2 | | 7 | 2 | +----+-----+ <strong>Output:</strong> +-----------------+ | ConsecutiveNums | +-----------------+ | 1 | +-----------------+ <strong>Explanation:</strong> 1 is the only number that appears consecutively for at least three times. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 181,
    "title": "Employees Earning More Than Their Managers",
    "title_slug": "employees-earning-more-than-their-managers",
    "link": "https://leetcode.com/problems/employees-earning-more-than-their-managers",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Employee</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | name | varchar | | salary | int | | managerId | int | +-------------+---------+ id is the primary key column for this table. Each row of this table indicates the ID of an employee, their name, salary, and the ID of their manager. </pre> <p>Write an SQL query to find the employees who earn more than their managers.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Employee table: +----+-------+--------+-----------+ | id | name | salary | managerId | +----+-------+--------+-----------+ | 1 | Joe | 70000 | 3 | | 2 | Henry | 80000 | 4 | | 3 | Sam | 60000 | Null | | 4 | Max | 90000 | Null | +----+-------+--------+-----------+ <strong>Output:</strong> +----------+ | Employee | +----------+ | Joe | +----------+ <strong>Explanation:</strong> Joe is the only employee who earns more than his manager. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 182,
    "title": "Duplicate Emails",
    "title_slug": "duplicate-emails",
    "link": "https://leetcode.com/problems/duplicate-emails",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Person</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | email | varchar | +-------------+---------+ id is the primary key column for this table. Each row of this table contains an email. The emails will not contain uppercase letters. </pre> <p>Write an SQL query to report all the duplicate emails.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Person table: +----+---------+ | id | email | +----+---------+ | 1 | a@b.com | | 2 | c@d.com | | 3 | a@b.com | +----+---------+ <strong>Output:</strong> +---------+ | Email | +---------+ | a@b.com | +---------+ <strong>Explanation:</strong> a@b.com is repeated two times. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 183,
    "title": "Customers Who Never Order",
    "title_slug": "customers-who-never-order",
    "link": "https://leetcode.com/problems/customers-who-never-order",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Customers</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | name | varchar | +-------------+---------+ id is the primary key column for this table. Each row of this table indicates the ID and name of a customer. </pre> <p>Table: <code>Orders</code></p> <pre>+-------------+------+ | Column Name | Type | +-------------+------+ | id | int | | customerId | int | +-------------+------+ id is the primary key column for this table. customerId is a foreign key of the ID from the Customers table. Each row of this table indicates the ID of an order and the ID of the customer who ordered it. </pre> <p>Write an SQL query to report all customers who never order anything.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Customers table: +----+-------+ | id | name | +----+-------+ | 1 | Joe | | 2 | Henry | | 3 | Sam | | 4 | Max | +----+-------+ Orders table: +----+------------+ | id | customerId | +----+------------+ | 1 | 3 | | 2 | 1 | +----+------------+ <strong>Output:</strong> +-----------+ | Customers | +-----------+ | Henry | | Max | +-----------+ </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 184,
    "title": "Department Highest Salary",
    "title_slug": "department-highest-salary",
    "link": "https://leetcode.com/problems/department-highest-salary",
    "difficulty": "Medium",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Employee</code></p> <pre>+--------------+---------+ | Column Name | Type | +--------------+---------+ | id | int | | name | varchar | | salary | int | | departmentId | int | +--------------+---------+ id is the primary key column for this table. departmentId is a foreign key of the ID from the <code>Department </code>table. Each row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department. </pre> <p>Table: <code>Department</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | name | varchar | +-------------+---------+ id is the primary key column for this table. Each row of this table indicates the ID of a department and its name. </pre> <p>Write an SQL query to find employees who have the highest salary in each of the departments.</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Employee table: +----+-------+--------+--------------+ | id | name | salary | departmentId | +----+-------+--------+--------------+ | 1 | Joe | 70000 | 1 | | 2 | Jim | 90000 | 1 | | 3 | Henry | 80000 | 2 | | 4 | Sam | 60000 | 2 | | 5 | Max | 90000 | 1 | +----+-------+--------+--------------+ Department table: +----+-------+ | id | name | +----+-------+ | 1 | IT | | 2 | Sales | +----+-------+ <strong>Output:</strong> +------------+----------+--------+ | Department | Employee | Salary | +------------+----------+--------+ | IT | Jim | 90000 | | Sales | Henry | 80000 | | IT | Max | 90000 | +------------+----------+--------+ <strong>Explanation:</strong> Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 185,
    "title": "Department Top Three Salaries",
    "title_slug": "department-top-three-salaries",
    "link": "https://leetcode.com/problems/department-top-three-salaries",
    "difficulty": "Hard",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Employee</code></p> <pre>+--------------+---------+ | Column Name | Type | +--------------+---------+ | id | int | | name | varchar | | salary | int | | departmentId | int | +--------------+---------+ id is the primary key column for this table. departmentId is a foreign key of the ID from the <code>Department </code>table. Each row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department. </pre> <p>Table: <code>Department</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | name | varchar | +-------------+---------+ id is the primary key column for this table. Each row of this table indicates the ID of a department and its name. </pre> <p>A company's executives are interested in seeing who earns the most money in each of the company's departments. A <strong>high earner</strong> in a department is an employee who has a salary in the <strong>top three unique</strong> salaries for that department.</p> <p>Write an SQL query to find the employees who are <strong>high earners</strong> in each of the departments.</p> <p>Return the result table <strong>in any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Employee table: +----+-------+--------+--------------+ | id | name | salary | departmentId | +----+-------+--------+--------------+ | 1 | Joe | 85000 | 1 | | 2 | Henry | 80000 | 2 | | 3 | Sam | 60000 | 2 | | 4 | Max | 90000 | 1 | | 5 | Janet | 69000 | 1 | | 6 | Randy | 85000 | 1 | | 7 | Will | 70000 | 1 | +----+-------+--------+--------------+ Department table: +----+-------+ | id | name | +----+-------+ | 1 | IT | | 2 | Sales | +----+-------+ <strong>Output:</strong> +------------+----------+--------+ | Department | Employee | Salary | +------------+----------+--------+ | IT | Max | 90000 | | IT | Joe | 85000 | | IT | Randy | 85000 | | IT | Will | 70000 | | Sales | Henry | 80000 | | Sales | Sam | 60000 | +------------+----------+--------+ <strong>Explanation:</strong> In the IT department: - Max earns the highest unique salary - Both Randy and Joe earn the second-highest unique salary - Will earns the third-highest unique salary In the Sales department: - Henry earns the highest salary - Sam earns the second-highest salary - There is no third-highest salary as there are only two employees </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 187,
    "title": "Repeated DNA Sequences",
    "title_slug": "repeated-dna-sequences",
    "link": "https://leetcode.com/problems/repeated-dna-sequences",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ],
    "question": "<div><div><p>The <strong>DNA sequence</strong> is composed of a series of nucleotides abbreviated as <code>'A'</code>, <code>'C'</code>, <code>'G'</code>, and <code>'T'</code>.</p> <ul> <li>For example, <code>\"ACGAATTCCG\"</code> is a <strong>DNA sequence</strong>.</li> </ul> <p>When studying <strong>DNA</strong>, it is useful to identify repeated sequences within the DNA.</p> <p>Given a string <code>s</code> that represents a <strong>DNA sequence</strong>, return all the <strong><code>10</code>-letter-long</strong> sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in <strong>any order</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\" <strong>Output:</strong> [\"AAAAACCCCC\",\"CCCCCAAAAA\"] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"AAAAAAAAAAAAA\" <strong>Output:</strong> [\"AAAAAAAAAA\"] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li> <li><code>s[i]</code> is either <code>'A'</code>, <code>'C'</code>, <code>'G'</code>, or <code>'T'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 188,
    "title": "Best Time to Buy and Sell Stock IV",
    "title_slug": "best-time-to-buy-and-sell-stock-iv",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day, and an integer <code>k</code>.</p> <p>Find the maximum profit you can achieve. You may complete at most <code>k</code> transactions.</p> <p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> k = 2, prices = [2,4,1] <strong>Output:</strong> 2 <strong>Explanation:</strong> Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> k = 2, prices = [3,2,6,5,0,3] <strong>Output:</strong> 7 <strong>Explanation:</strong> Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= k &lt;= 100</code></li> <li><code>1 &lt;= prices.length &lt;= 1000</code></li> <li><code>0 &lt;= prices[i] &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 189,
    "title": "Rotate Array",
    "title_slug": "rotate-array",
    "link": "https://leetcode.com/problems/rotate-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Two Pointers"
    ],
    "question": "<div><div><p>Given an array, rotate the array to the right by <code>k</code> steps, where <code>k</code> is non-negative.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,4,5,6,7], k = 3 <strong>Output:</strong> [5,6,7,1,2,3,4] <strong>Explanation:</strong> rotate 1 steps to the right: [7,1,2,3,4,5,6] rotate 2 steps to the right: [6,7,1,2,3,4,5] rotate 3 steps to the right: [5,6,7,1,2,3,4] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [-1,-100,3,99], k = 2 <strong>Output:</strong> [3,99,-1,-100] <strong>Explanation:</strong> rotate 1 steps to the right: [99,-1,-100,3] rotate 2 steps to the right: [3,99,-1,-100] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> <li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li> </ul> <p><strong>Follow up:</strong></p> <ul> <li>Try to come up with as many solutions as you can. There are at least <strong>three</strong> different ways to solve this problem.</li> <li>Could you do it in-place with <code>O(1)</code> extra space?</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 190,
    "title": "Reverse Bits",
    "title_slug": "reverse-bits",
    "link": "https://leetcode.com/problems/reverse-bits",
    "difficulty": "Easy",
    "similar_topics": [
      "Divide and Conquer",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Reverse bits of a given 32 bits unsigned integer.</p> <p><strong>Note:</strong></p> <ul> <li>Note that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.</li> <li>In Java, the compiler represents the signed integers using <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\" rel=\"noopener\">2's complement notation</a>. Therefore, in <strong>Example 2</strong> above, the input represents the signed integer <code>-3</code> and the output represents the signed integer <code>-1073741825</code>.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 00000010100101000001111010011100 <strong>Output:</strong> 964176192 (00111001011110000010100101000000) <strong>Explanation: </strong>The input binary string <strong>00000010100101000001111010011100</strong> represents the unsigned integer 43261596, so return 964176192 which its binary representation is <strong>00111001011110000010100101000000</strong>. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 11111111111111111111111111111101 <strong>Output:</strong> 3221225471 (10111111111111111111111111111111) <strong>Explanation: </strong>The input binary string <strong>11111111111111111111111111111101</strong> represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is <strong>10111111111111111111111111111111</strong>. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The input must be a <strong>binary string</strong> of length <code>32</code></li> </ul> <p><strong>Follow up:</strong> If this function is called many times, how would you optimize it?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 191,
    "title": "Number of 1 Bits",
    "title_slug": "number-of-1-bits",
    "link": "https://leetcode.com/problems/number-of-1-bits",
    "difficulty": "Easy",
    "similar_topics": [
      "Divide and Conquer",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the <a href=\"http://en.wikipedia.org/wiki/Hamming_weight\" target=\"_blank\" rel=\"noopener\">Hamming weight</a>).</p> <p><strong>Note:</strong></p> <ul> <li>Note that in some languages, such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.</li> <li>In Java, the compiler represents the signed integers using <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\" rel=\"noopener\">2's complement notation</a>. Therefore, in <strong>Example 3</strong>, the input represents the signed integer. <code>-3</code>.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 00000000000000000000000000001011 <strong>Output:</strong> 3 <strong>Explanation:</strong> The input binary string <strong>00000000000000000000000000001011</strong> has a total of three '1' bits. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 00000000000000000000000010000000 <strong>Output:</strong> 1 <strong>Explanation:</strong> The input binary string <strong>00000000000000000000000010000000</strong> has a total of one '1' bit. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 11111111111111111111111111111101 <strong>Output:</strong> 31 <strong>Explanation:</strong> The input binary string <strong>11111111111111111111111111111101</strong> has a total of thirty one '1' bits. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The input must be a <strong>binary string</strong> of length <code>32</code>.</li> </ul> <strong>Follow up:</strong> If this function is called many times, how would you optimize it?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 192,
    "title": "Word Frequency",
    "title_slug": "word-frequency",
    "link": "https://leetcode.com/problems/word-frequency",
    "difficulty": "Medium",
    "similar_topics": [
      "Shell"
    ],
    "question": "<div><div><p>Write a bash script to calculate the frequency of each word in a text file <code>words.txt</code>.</p> <p>For simplicity sake, you may assume:</p> <ul> <li><code>words.txt</code> contains only lowercase characters and space <code>' '</code> characters.</li> <li>Each word must consist of lowercase characters only.</li> <li>Words are separated by one or more whitespace characters.</li> </ul> <p><strong>Example:</strong></p> <p>Assume that <code>words.txt</code> has the following content:</p> <pre>the day is sunny the the the sunny is is </pre> <p>Your script should output the following, sorted by descending frequency:</p> <pre>the 4 is 3 sunny 2 day 1 </pre> <p><strong>Note:</strong></p> <ul> <li>Don't worry about handling ties, it is guaranteed that each word's frequency count is unique.</li> <li>Could you write it in one-line using <a href=\"http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-4.html\">Unix pipes</a>?</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 193,
    "title": "Valid Phone Numbers",
    "title_slug": "valid-phone-numbers",
    "link": "https://leetcode.com/problems/valid-phone-numbers",
    "difficulty": "Easy",
    "similar_topics": [
      "Shell"
    ],
    "question": "<div><div><p>Given a text file <code>file.txt</code> that contains a list of phone numbers (one per line), write a one-liner bash script to print all valid phone numbers.</p> <p>You may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)</p> <p>You may also assume each line in the text file must not contain leading or trailing white spaces.</p> <p><strong>Example:</strong></p> <p>Assume that <code>file.txt</code> has the following content:</p> <pre>987-123-4567 123 456 7890 (123) 456-7890 </pre> <p>Your script should output the following valid phone numbers:</p> <pre>987-123-4567 (123) 456-7890 </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 194,
    "title": "Transpose File",
    "title_slug": "transpose-file",
    "link": "https://leetcode.com/problems/transpose-file",
    "difficulty": "Medium",
    "similar_topics": [
      "Shell"
    ],
    "question": "<div><div><p>Given a text file <code>file.txt</code>, transpose its content.</p> <p>You may assume that each row has the same number of columns, and each field is separated by the <code>' '</code> character.</p> <p><strong>Example:</strong></p> <p>If <code>file.txt</code> has the following content:</p> <pre>name age alice 21 ryan 30 </pre> <p>Output the following:</p> <pre>name alice ryan age 21 30 </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 195,
    "title": "Tenth Line",
    "title_slug": "tenth-line",
    "link": "https://leetcode.com/problems/tenth-line",
    "difficulty": "Easy",
    "similar_topics": [
      "Shell"
    ],
    "question": "<div><div><p>Given a text file <code>file.txt</code>, print just the 10th line of the file.</p> <p><strong>Example:</strong></p> <p>Assume that <code>file.txt</code> has the following content:</p> <pre>Line 1 Line 2 Line 3 Line 4 Line 5 Line 6 Line 7 Line 8 Line 9 Line 10 </pre> <p>Your script should output the tenth line, which is:</p> <pre>Line 10 </pre> <div><strong>Note:</strong><br> 1. If the file contains less than 10 lines, what should you output?<br> 2. There's at least three different solutions. Try to explore all possibilities.</div> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 196,
    "title": "Delete Duplicate Emails",
    "title_slug": "delete-duplicate-emails",
    "link": "https://leetcode.com/problems/delete-duplicate-emails",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Person</code></p> <pre>+-------------+---------+ | Column Name | Type | +-------------+---------+ | id | int | | email | varchar | +-------------+---------+ id is the primary key column for this table. Each row of this table contains an email. The emails will not contain uppercase letters. </pre> <p>Write an SQL query to <strong>delete</strong> all the duplicate emails, keeping only one unique email with the smallest <code>id</code>. Note that you are supposed to write a <code>DELETE</code> statement and not a <code>SELECT</code> one.</p> <p>After running your script, the answer shown is the <code>Person</code> table. The driver will first compile and run your piece of code and then show the <code>Person</code> table. The final order of the <code>Person</code> table <strong>does not matter</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Person table: +----+------------------+ | id | email | +----+------------------+ | 1 | john@example.com | | 2 | bob@example.com | | 3 | john@example.com | +----+------------------+ <strong>Output:</strong> +----+------------------+ | id | email | +----+------------------+ | 1 | john@example.com | | 2 | bob@example.com | +----+------------------+ <strong>Explanation:</strong> john@example.com is repeated two times. We keep the row with the smallest Id = 1. </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 197,
    "title": "Rising Temperature",
    "title_slug": "rising-temperature",
    "link": "https://leetcode.com/problems/rising-temperature",
    "difficulty": "Easy",
    "similar_topics": [
      "Database"
    ],
    "question": "<div><div><a>SQL Schema</a><p>Table: <code>Weather</code></p> <pre>+---------------+---------+ | Column Name | Type | +---------------+---------+ | id | int | | recordDate | date | | temperature | int | +---------------+---------+ id is the primary key for this table. This table contains information about the temperature on a certain day. </pre> <p>Write an SQL query to find all dates' <code>Id</code> with higher temperatures compared to its previous dates (yesterday).</p> <p>Return the result table in <strong>any order</strong>.</p> <p>The query result format is in the following example.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> Weather table: +----+------------+-------------+ | id | recordDate | temperature | +----+------------+-------------+ | 1 | 2015-01-01 | 10 | | 2 | 2015-01-02 | 25 | | 3 | 2015-01-03 | 20 | | 4 | 2015-01-04 | 30 | +----+------------+-------------+ <strong>Output:</strong> +----+ | id | +----+ | 2 | | 4 | +----+ <strong>Explanation:</strong> In 2015-01-02, the temperature was higher than the previous day (10 -&gt; 25). In 2015-01-04, the temperature was higher than the previous day (20 -&gt; 30). </pre> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 198,
    "title": "House Robber",
    "title_slug": "house-robber",
    "link": "https://leetcode.com/problems/house-robber",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and <strong>it will automatically contact the police if two adjacent houses were broken into on the same night</strong>.</p> <p>Given an integer array <code>nums</code> representing the amount of money of each house, return <em>the maximum amount of money you can rob tonight <strong>without alerting the police</strong></em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1] <strong>Output:</strong> 4 <strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3). Total amount you can rob = 1 + 3 = 4. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [2,7,9,3,1] <strong>Output:</strong> 12 <strong>Explanation:</strong> Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1). Total amount you can rob = 2 + 9 + 1 = 12. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 400</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 199,
    "title": "Binary Tree Right Side View",
    "title_slug": "binary-tree-right-side-view",
    "link": "https://leetcode.com/problems/binary-tree-right-side-view",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, imagine yourself standing on the <strong>right side</strong> of it, return <em>the values of the nodes you can see ordered from top to bottom</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/14/tree.jpg\"> <pre><strong>Input:</strong> root = [1,2,3,null,5,null,4] <strong>Output:</strong> [1,3,4] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1,null,3] <strong>Output:</strong> [1,3] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/14/tree.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 200,
    "title": "Number of Islands",
    "title_slug": "number-of-islands",
    "link": "https://leetcode.com/problems/number-of-islands",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> 2D binary grid <code>grid</code> which represents a map of <code>'1'</code>s (land) and <code>'0'</code>s (water), return <em>the number of islands</em>.</p> <p>An <strong>island</strong> is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> grid = [ [\"1\",\"1\",\"1\",\"1\",\"0\"], [\"1\",\"1\",\"0\",\"1\",\"0\"], [\"1\",\"1\",\"0\",\"0\",\"0\"], [\"0\",\"0\",\"0\",\"0\",\"0\"] ] <strong>Output:</strong> 1 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> grid = [ [\"1\",\"1\",\"0\",\"0\",\"0\"], [\"1\",\"1\",\"0\",\"0\",\"0\"], [\"0\",\"0\",\"1\",\"0\",\"0\"], [\"0\",\"0\",\"0\",\"1\",\"1\"] ] <strong>Output:</strong> 3 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == grid.length</code></li> <li><code>n == grid[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 300</code></li> <li><code>grid[i][j]</code> is <code>'0'</code> or <code>'1'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 201,
    "title": "Bitwise AND of Numbers Range",
    "title_slug": "bitwise-and-of-numbers-range",
    "link": "https://leetcode.com/problems/bitwise-and-of-numbers-range",
    "difficulty": "Medium",
    "similar_topics": [
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given two integers <code>left</code> and <code>right</code> that represent the range <code>[left, right]</code>, return <em>the bitwise AND of all numbers in this range, inclusive</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> left = 5, right = 7 <strong>Output:</strong> 4 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> left = 0, right = 0 <strong>Output:</strong> 0 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> left = 1, right = 2147483647 <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= left &lt;= right &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 202,
    "title": "Happy Number",
    "title_slug": "happy-number",
    "link": "https://leetcode.com/problems/happy-number",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "Math",
      "Two Pointers"
    ],
    "question": "<div><div><p>Write an algorithm to determine if a number <code>n</code> is happy.</p> <p>A <strong>happy number</strong> is a number defined by the following process:</p> <ul> <li>Starting with any positive integer, replace the number by the sum of the squares of its digits.</li> <li>Repeat the process until the number equals 1 (where it will stay), or it <strong>loops endlessly in a cycle</strong> which does not include 1.</li> <li>Those numbers for which this process <strong>ends in 1</strong> are happy.</li> </ul> <p>Return <code>true</code> <em>if</em> <code>n</code> <em>is a happy number, and</em> <code>false</code> <em>if not</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 19 <strong>Output:</strong> true <strong>Explanation:</strong> 1<sup>2</sup> + 9<sup>2</sup> = 82 8<sup>2</sup> + 2<sup>2</sup> = 68 6<sup>2</sup> + 8<sup>2</sup> = 100 1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 2 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 203,
    "title": "Remove Linked List Elements",
    "title_slug": "remove-linked-list-elements",
    "link": "https://leetcode.com/problems/remove-linked-list-elements",
    "difficulty": "Easy",
    "similar_topics": [
      "Linked List",
      "Recursion"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a linked list and an integer <code>val</code>, remove all the nodes of the linked list that has <code>Node.val == val</code>, and return <em>the new head</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg\"> <pre><strong>Input:</strong> head = [1,2,6,3,4,5,6], val = 6 <strong>Output:</strong> [1,2,3,4,5] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> head = [], val = 1 <strong>Output:</strong> [] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> head = [7,7,7,7], val = 7 <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li> <li><code>1 &lt;= Node.val &lt;= 50</code></li> <li><code>0 &lt;= val &lt;= 50</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/06/removelinked-list.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 204,
    "title": "Count Primes",
    "title_slug": "count-primes",
    "link": "https://leetcode.com/problems/count-primes",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Enumeration",
      "Number Theory"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return <em>the number of prime numbers that are strictly less than</em> <code>n</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 10 <strong>Output:</strong> 4 <strong>Explanation:</strong> There are 4 prime numbers less than 10, they are 2, 3, 5, 7. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 0 <strong>Output:</strong> 0 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= n &lt;= 5 * 10<sup>6</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 205,
    "title": "Isomorphic Strings",
    "title_slug": "isomorphic-strings",
    "link": "https://leetcode.com/problems/isomorphic-strings",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "String"
    ],
    "question": "<div><div><p>Given two strings <code>s</code> and <code>t</code>, <em>determine if they are isomorphic</em>.</p> <p>Two strings <code>s</code> and <code>t</code> are isomorphic if the characters in <code>s</code> can be replaced to get <code>t</code>.</p> <p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"egg\", t = \"add\" <strong>Output:</strong> true </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"foo\", t = \"bar\" <strong>Output:</strong> false </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"paper\", t = \"title\" <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>t.length == s.length</code></li> <li><code>s</code> and <code>t</code> consist of any valid ascii character.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 206,
    "title": "Reverse Linked List",
    "title_slug": "reverse-linked-list",
    "link": "https://leetcode.com/problems/reverse-linked-list",
    "difficulty": "Easy",
    "similar_topics": [
      "Linked List",
      "Recursion"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a singly linked list, reverse the list, and return <em>the reversed list</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg\"> <pre><strong>Input:</strong> head = [1,2,3,4,5] <strong>Output:</strong> [5,4,3,2,1] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/02/19/rev1ex2.jpg\"> <pre><strong>Input:</strong> head = [1,2] <strong>Output:</strong> [2,1] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> head = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is the range <code>[0, 5000]</code>.</li> <li><code>-5000 &lt;= Node.val &lt;= 5000</code></li> </ul> <p><strong>Follow up:</strong> A linked list can be reversed either iteratively or recursively. Could you implement both?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg",
        "https://assets.leetcode.com/uploads/2021/02/19/rev1ex2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 207,
    "title": "Course Schedule",
    "title_slug": "course-schedule",
    "link": "https://leetcode.com/problems/course-schedule",
    "difficulty": "Medium",
    "similar_topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "question": "<div><div><p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses - 1</code>. You are given an array <code>prerequisites</code> where <code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that you <strong>must</strong> take course <code>b<sub>i</sub></code> first if you want to take course <code>a<sub>i</sub></code>.</p> <ul> <li>For example, the pair <code>[0, 1]</code>, indicates that to take course <code>0</code> you have to first take course <code>1</code>.</li> </ul> <p>Return <code>true</code> if you can finish all courses. Otherwise, return <code>false</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]] <strong>Output:</strong> true <strong>Explanation:</strong> There are a total of 2 courses to take. To take course 1 you should have finished course 0. So it is possible. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> numCourses = 2, prerequisites = [[1,0],[0,1]] <strong>Output:</strong> false <strong>Explanation:</strong> There are a total of 2 courses to take. To take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= numCourses &lt;= 2000</code></li> <li><code>0 &lt;= prerequisites.length &lt;= 5000</code></li> <li><code>prerequisites[i].length == 2</code></li> <li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; numCourses</code></li> <li>All the pairs prerequisites[i] are <strong>unique</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 208,
    "title": "Implement Trie (Prefix Tree)",
    "title_slug": "implement-trie-(prefix-tree)",
    "link": "https://leetcode.com/problems/implement-trie-(prefix-tree)",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "question": "<div><div><p>A <a href=\"https://en.wikipedia.org/wiki/Trie\" target=\"_blank\" rel=\"noopener\"><strong>trie</strong></a> (pronounced as \"try\") or <strong>prefix tree</strong> is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.</p> <p>Implement the Trie class:</p> <ul> <li><code>Trie()</code> Initializes the trie object.</li> <li><code>void insert(String word)</code> Inserts the string <code>word</code> into the trie.</li> <li><code>boolean search(String word)</code> Returns <code>true</code> if the string <code>word</code> is in the trie (i.e., was inserted before), and <code>false</code> otherwise.</li> <li><code>boolean startsWith(String prefix)</code> Returns <code>true</code> if there is a previously inserted string <code>word</code> that has the prefix <code>prefix</code>, and <code>false</code> otherwise.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"Trie\", \"insert\", \"search\", \"search\", \"startsWith\", \"insert\", \"search\"] [[], [\"apple\"], [\"apple\"], [\"app\"], [\"app\"], [\"app\"], [\"app\"]] <strong>Output</strong> [null, null, true, false, true, null, true] <strong>Explanation</strong> Trie trie = new Trie(); trie.insert(\"apple\"); trie.search(\"apple\"); // return True trie.search(\"app\"); // return False trie.startsWith(\"app\"); // return True trie.insert(\"app\"); trie.search(\"app\"); // return True </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= word.length, prefix.length &lt;= 2000</code></li> <li><code>word</code> and <code>prefix</code> consist only of lowercase English letters.</li> <li>At most <code>3 * 10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>insert</code>, <code>search</code>, and <code>startsWith</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 209,
    "title": "Minimum Size Subarray Sum",
    "title_slug": "minimum-size-subarray-sum",
    "link": "https://leetcode.com/problems/minimum-size-subarray-sum",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "question": "<div><div><p>Given an array of positive integers <code>nums</code> and a positive integer <code>target</code>, return the minimal length of a <strong>contiguous subarray</strong> <code>[nums<sub>l</sub>, nums<sub>l+1</sub>, ..., nums<sub>r-1</sub>, nums<sub>r</sub>]</code> of which the sum is greater than or equal to <code>target</code>. If there is no such subarray, return <code>0</code> instead.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> target = 7, nums = [2,3,1,2,4,3] <strong>Output:</strong> 2 <strong>Explanation:</strong> The subarray [4,3] has the minimal length under the problem constraint. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> target = 4, nums = [1,4,4] <strong>Output:</strong> 1 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> target = 11, nums = [1,1,1,1,1,1,1,1] <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= target &lt;= 10<sup>9</sup></code></li> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> </ul> <strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution of which the time complexity is <code>O(n log(n))</code>.</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 210,
    "title": "Course Schedule II",
    "title_slug": "course-schedule-ii",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "question": "<div><div><p>There are a total of <code>numCourses</code> courses you have to take, labeled from <code>0</code> to <code>numCourses - 1</code>. You are given an array <code>prerequisites</code> where <code>prerequisites[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> indicates that you <strong>must</strong> take course <code>b<sub>i</sub></code> first if you want to take course <code>a<sub>i</sub></code>.</p> <ul> <li>For example, the pair <code>[0, 1]</code>, indicates that to take course <code>0</code> you have to first take course <code>1</code>.</li> </ul> <p>Return <em>the ordering of courses you should take to finish all courses</em>. If there are many valid answers, return <strong>any</strong> of them. If it is impossible to finish all courses, return <strong>an empty array</strong>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> numCourses = 2, prerequisites = [[1,0]] <strong>Output:</strong> [0,1] <strong>Explanation:</strong> There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1]. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]] <strong>Output:</strong> [0,2,1,3] <strong>Explanation:</strong> There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. So one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3]. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> numCourses = 1, prerequisites = [] <strong>Output:</strong> [0] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= numCourses &lt;= 2000</code></li> <li><code>0 &lt;= prerequisites.length &lt;= numCourses * (numCourses - 1)</code></li> <li><code>prerequisites[i].length == 2</code></li> <li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt; numCourses</code></li> <li><code>a<sub>i</sub> != b<sub>i</sub></code></li> <li>All the pairs <code>[a<sub>i</sub>, b<sub>i</sub>]</code> are <strong>distinct</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 211,
    "title": "Design Add and Search Words Data Structure",
    "title_slug": "design-add-and-search-words-data-structure",
    "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ],
    "question": "<div><div><p>Design a data structure that supports adding new words and finding if a string matches any previously added string.</p> <p>Implement the <code>WordDictionary</code> class:</p> <ul> <li><code>WordDictionary()</code> Initializes the object.</li> <li><code>void addWord(word)</code> Adds <code>word</code> to the data structure, it can be matched later.</li> <li><code>bool search(word)</code> Returns <code>true</code> if there is any string in the data structure that matches <code>word</code> or <code>false</code> otherwise. <code>word</code> may contain dots <code>'.'</code> where dots can be matched with any letter.</li> </ul> <p><strong>Example:</strong></p> <pre><strong>Input</strong> [\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"] [[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]] <strong>Output</strong> [null,null,null,null,false,true,true,true] <strong>Explanation</strong> WordDictionary wordDictionary = new WordDictionary(); wordDictionary.addWord(\"bad\"); wordDictionary.addWord(\"dad\"); wordDictionary.addWord(\"mad\"); wordDictionary.search(\"pad\"); // return False wordDictionary.search(\"bad\"); // return True wordDictionary.search(\".ad\"); // return True wordDictionary.search(\"b..\"); // return True </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= word.length &lt;= 25</code></li> <li><code>word</code> in <code>addWord</code> consists of lowercase English letters.</li> <li><code>word</code> in <code>search</code> consist of <code>'.'</code> or lowercase English letters.</li> <li>There will be at most <code>3</code> dots in <code>word</code> for <code>search</code> queries.</li> <li>At most <code>10<sup>4</sup></code> calls will be made to <code>addWord</code> and <code>search</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 212,
    "title": "Word Search II",
    "title_slug": "word-search-ii",
    "link": "https://leetcode.com/problems/word-search-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n board</code> of characters and a list of strings <code>words</code>, return <em>all words on the board</em>.</p> <p>Each word must be constructed from letters of sequentially adjacent cells, where <strong>adjacent cells</strong> are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/07/search1.jpg\"> <pre><strong>Input:</strong> board = [[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]], words = [\"oath\",\"pea\",\"eat\",\"rain\"] <strong>Output:</strong> [\"eat\",\"oath\"] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/07/search2.jpg\"> <pre><strong>Input:</strong> board = [[\"a\",\"b\"],[\"c\",\"d\"]], words = [\"abcb\"] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == board.length</code></li> <li><code>n == board[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 12</code></li> <li><code>board[i][j]</code> is a lowercase English letter.</li> <li><code>1 &lt;= words.length &lt;= 3 * 10<sup>4</sup></code></li> <li><code>1 &lt;= words[i].length &lt;= 10</code></li> <li><code>words[i]</code> consists of lowercase English letters.</li> <li>All the strings of <code>words</code> are unique.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/07/search1.jpg",
        "https://assets.leetcode.com/uploads/2020/11/07/search2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 213,
    "title": "House Robber II",
    "title_slug": "house-robber-ii",
    "link": "https://leetcode.com/problems/house-robber-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and <strong>it will automatically contact the police if two adjacent houses were broken into on the same night</strong>.</p> <p>Given an integer array <code>nums</code> representing the amount of money of each house, return <em>the maximum amount of money you can rob tonight <strong>without alerting the police</strong></em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [2,3,2] <strong>Output:</strong> 3 <strong>Explanation:</strong> You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1] <strong>Output:</strong> 4 <strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3). Total amount you can rob = 1 + 3 = 4. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3] <strong>Output:</strong> 3 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 100</code></li> <li><code>0 &lt;= nums[i] &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 214,
    "title": "Shortest Palindrome",
    "title_slug": "shortest-palindrome",
    "link": "https://leetcode.com/problems/shortest-palindrome",
    "difficulty": "Hard",
    "similar_topics": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "question": "<div><div><p>You are given a string <code>s</code>. You can convert <code>s</code> to a palindrome by adding characters in front of it.</p> <p>Return <em>the shortest palindrome you can find by performing this transformation</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aacecaaa\" <strong>Output:</strong> \"aaacecaaa\" </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"abcd\" <strong>Output:</strong> \"dcbabcd\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>s</code> consists of lowercase English letters only.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 215,
    "title": "Kth Largest Element in an Array",
    "title_slug": "kth-largest-element-in-an-array",
    "link": "https://leetcode.com/problems/kth-largest-element-in-an-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>largest element in the array</em>.</p> <p>Note that it is the <code>k<sup>th</sup></code> largest element in the sorted order, not the <code>k<sup>th</sup></code> distinct element.</p> <p>You must solve it in <code>O(n)</code> time complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,2,1,5,6,4], k = 2 <strong>Output:</strong> 5 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [3,2,3,1,2,4,5,5,6], k = 4 <strong>Output:</strong> 4 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= k &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 216,
    "title": "Combination Sum III",
    "title_slug": "combination-sum-iii",
    "link": "https://leetcode.com/problems/combination-sum-iii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Backtracking"
    ],
    "question": "<div><div><p>Find all valid combinations of <code>k</code> numbers that sum up to <code>n</code> such that the following conditions are true:</p> <ul> <li>Only numbers <code>1</code> through <code>9</code> are used.</li> <li>Each number is used <strong>at most once</strong>.</li> </ul> <p>Return <em>a list of all possible valid combinations</em>. The list must not contain the same combination twice, and the combinations may be returned in any order.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> k = 3, n = 7 <strong>Output:</strong> [[1,2,4]] <strong>Explanation:</strong> 1 + 2 + 4 = 7 There are no other valid combinations.</pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> k = 3, n = 9 <strong>Output:</strong> [[1,2,6],[1,3,5],[2,3,4]] <strong>Explanation:</strong> 1 + 2 + 6 = 9 1 + 3 + 5 = 9 2 + 3 + 4 = 9 There are no other valid combinations. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> k = 4, n = 1 <strong>Output:</strong> [] <strong>Explanation:</strong> There are no valid combinations. Using 4 different numbers in the range [1,9], the smallest sum we can get is 1+2+3+4 = 10 and since 10 &gt; 1, there are no valid combination. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= k &lt;= 9</code></li> <li><code>1 &lt;= n &lt;= 60</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 217,
    "title": "Contains Duplicate",
    "title_slug": "contains-duplicate",
    "link": "https://leetcode.com/problems/contains-duplicate",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, return <code>true</code> if any value appears <strong>at least twice</strong> in the array, and return <code>false</code> if every element is distinct.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1] <strong>Output:</strong> true </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,4] <strong>Output:</strong> false </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,1,1,3,3,4,3,2,4,2] <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 218,
    "title": "The Skyline Problem",
    "title_slug": "the-skyline-problem",
    "link": "https://leetcode.com/problems/the-skyline-problem",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Line Sweep",
      "Heap (Priority Queue)",
      "Ordered Set"
    ],
    "question": "<div><div><p>A city's <strong>skyline</strong> is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return <em>the <strong>skyline</strong> formed by these buildings collectively</em>.</p> <p>The geometric information of each building is given in the array <code>buildings</code> where <code>buildings[i] = [left<sub>i</sub>, right<sub>i</sub>, height<sub>i</sub>]</code>:</p> <ul> <li><code>left<sub>i</sub></code> is the x coordinate of the left edge of the <code>i<sup>th</sup></code> building.</li> <li><code>right<sub>i</sub></code> is the x coordinate of the right edge of the <code>i<sup>th</sup></code> building.</li> <li><code>height<sub>i</sub></code> is the height of the <code>i<sup>th</sup></code> building.</li> </ul> <p>You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height <code>0</code>.</p> <p>The <strong>skyline</strong> should be represented as a list of \"key points\" <strong>sorted by their x-coordinate</strong> in the form <code>[[x<sub>1</sub>,y<sub>1</sub>],[x<sub>2</sub>,y<sub>2</sub>],...]</code>. Each key point is the left endpoint of some horizontal segment in the skyline except the last point in the list, which always has a y-coordinate <code>0</code> and is used to mark the skyline's termination where the rightmost building ends. Any ground between the leftmost and rightmost buildings should be part of the skyline's contour.</p> <p><strong>Note:</strong> There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...,[2 3],[4 5],[7 5],[11 5],[12 7],...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...,[2 3],[4 5],[12 7],...]</code></p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/12/01/merged.jpg\"> <pre><strong>Input:</strong> buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]] <strong>Output:</strong> [[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]] <strong>Explanation:</strong> Figure A shows the buildings of the input. Figure B shows the skyline formed by those buildings. The red points in figure B represent the key points in the output list. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> buildings = [[0,2,3],[2,5,3]] <strong>Output:</strong> [[0,3],[5,0]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= buildings.length &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= left<sub>i</sub> &lt; right<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li> <li><code>1 &lt;= height<sub>i</sub> &lt;= 2<sup>31</sup> - 1</code></li> <li><code>buildings</code> is sorted by <code>left<sub>i</sub></code> in non-decreasing order.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/12/01/merged.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 219,
    "title": "Contains Duplicate II",
    "title_slug": "contains-duplicate-ii",
    "link": "https://leetcode.com/problems/contains-duplicate-ii",
    "difficulty": "Easy",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <code>true</code> if there are two <strong>distinct indices</strong> <code>i</code> and <code>j</code> in the array such that <code>nums[i] == nums[j]</code> and <code>abs(i - j) &lt;= k</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1], k = 3 <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,0,1,1], k = 1 <strong>Output:</strong> true </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1,2,3], k = 2 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> <li><code>0 &lt;= k &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 220,
    "title": "Contains Duplicate III",
    "title_slug": "contains-duplicate-iii",
    "link": "https://leetcode.com/problems/contains-duplicate-iii",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Sliding Window",
      "Sorting",
      "Bucket Sort",
      "Ordered Set"
    ],
    "question": "<div><div><p>You are given an integer array <code>nums</code> and two integers <code>indexDiff</code> and <code>valueDiff</code>.</p> <p>Find a pair of indices <code>(i, j)</code> such that:</p> <ul> <li><code>i != j</code>,</li> <li><code>abs(i - j) &lt;= indexDiff</code>.</li> <li><code>abs(nums[i] - nums[j]) &lt;= valueDiff</code>, and</li> </ul> <p>Return <code>true</code><em> if such pair exists or </em><code>false</code><em> otherwise</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,1], indexDiff = 3, valueDiff = 0 <strong>Output:</strong> true <strong>Explanation:</strong> We can choose (i, j) = (0, 3). We satisfy the three conditions: i != j --&gt; 0 != 3 abs(i - j) &lt;= indexDiff --&gt; abs(0 - 3) &lt;= 3 abs(nums[i] - nums[j]) &lt;= valueDiff --&gt; abs(1 - 1) &lt;= 0 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1,5,9,1,5,9], indexDiff = 2, valueDiff = 3 <strong>Output:</strong> false <strong>Explanation:</strong> After trying all the possible pairs (i, j), we cannot satisfy the three conditions, so we return false. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> <li><code>1 &lt;= indexDiff &lt;= nums.length</code></li> <li><code>0 &lt;= valueDiff &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 221,
    "title": "Maximal Square",
    "title_slug": "maximal-square",
    "link": "https://leetcode.com/problems/maximal-square",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> binary <code>matrix</code> filled with <code>0</code>'s and <code>1</code>'s, <em>find the largest square containing only</em> <code>1</code>'s <em>and return its area</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/26/max1grid.jpg\"> <pre><strong>Input:</strong> matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]] <strong>Output:</strong> 4 </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/26/max2grid.jpg\"> <pre><strong>Input:</strong> matrix = [[\"0\",\"1\"],[\"1\",\"0\"]] <strong>Output:</strong> 1 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> matrix = [[\"0\"]] <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 300</code></li> <li><code>matrix[i][j]</code> is <code>'0'</code> or <code>'1'</code>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/26/max1grid.jpg",
        "https://assets.leetcode.com/uploads/2020/11/26/max2grid.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 222,
    "title": "Count Complete Tree Nodes",
    "title_slug": "count-complete-tree-nodes",
    "link": "https://leetcode.com/problems/count-complete-tree-nodes",
    "difficulty": "Medium",
    "similar_topics": [
      "Binary Search",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a <strong>complete</strong> binary tree, return the number of the nodes in the tree.</p> <p>According to <strong><a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\" rel=\"noopener\">Wikipedia</a></strong>, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between <code>1</code> and <code>2<sup>h</sup></code> nodes inclusive at the last level <code>h</code>.</p> <p>Design an algorithm that runs in less than <code>O(n)</code> time complexity.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/14/complete.jpg\"> <pre><strong>Input:</strong> root = [1,2,3,4,5,6] <strong>Output:</strong> 6 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> 0 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 5 * 10<sup>4</sup></code></li> <li>The tree is guaranteed to be <strong>complete</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/14/complete.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 223,
    "title": "Rectangle Area",
    "title_slug": "rectangle-area",
    "link": "https://leetcode.com/problems/rectangle-area",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Geometry"
    ],
    "question": "<div><div><p>Given the coordinates of two <strong>rectilinear</strong> rectangles in a 2D plane, return <em>the total area covered by the two rectangles</em>.</p> <p>The first rectangle is defined by its <strong>bottom-left</strong> corner <code>(ax1, ay1)</code> and its <strong>top-right</strong> corner <code>(ax2, ay2)</code>.</p> <p>The second rectangle is defined by its <strong>bottom-left</strong> corner <code>(bx1, by1)</code> and its <strong>top-right</strong> corner <code>(bx2, by2)</code>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/05/08/rectangle-plane.png\"> <pre><strong>Input:</strong> ax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2 <strong>Output:</strong> 45 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> ax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2 <strong>Output:</strong> 16 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-10<sup>4</sup> &lt;= ax1 &lt;= ax2 &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= ay1 &lt;= ay2 &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= bx1 &lt;= bx2 &lt;= 10<sup>4</sup></code></li> <li><code>-10<sup>4</sup> &lt;= by1 &lt;= by2 &lt;= 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/05/08/rectangle-plane.png"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 224,
    "title": "Basic Calculator",
    "title_slug": "basic-calculator",
    "link": "https://leetcode.com/problems/basic-calculator",
    "difficulty": "Hard",
    "similar_topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ],
    "question": "<div><div><p>Given a string <code>s</code> representing a valid expression, implement a basic calculator to evaluate it, and return <em>the result of the evaluation</em>.</p> <p><strong>Note:</strong> You are <strong>not</strong> allowed to use any built-in function which evaluates strings as mathematical expressions, such as <code>eval()</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"1 + 1\" <strong>Output:</strong> 2 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \" 2-1 + 2 \" <strong>Output:</strong> 3 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"(1+(4+5+2)-3)+(6+8)\" <strong>Output:</strong> 23 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li> <li><code>s</code> consists of digits, <code>'+'</code>, <code>'-'</code>, <code>'('</code>, <code>')'</code>, and <code>' '</code>.</li> <li><code>s</code> represents a valid expression.</li> <li><code>'+'</code> is <strong>not</strong> used as a unary operation (i.e., <code>\"+1\"</code> and <code>\"+(2 + 3)\"</code> is invalid).</li> <li><code>'-'</code> could be used as a unary operation (i.e., <code>\"-1\"</code> and <code>\"-(2 + 3)\"</code> is valid).</li> <li>There will be no two consecutive operators in the input.</li> <li>Every number and running calculation will fit in a signed 32-bit integer.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 225,
    "title": "Implement Stack using Queues",
    "title_slug": "implement-stack-using-queues",
    "link": "https://leetcode.com/problems/implement-stack-using-queues",
    "difficulty": "Easy",
    "similar_topics": [
      "Stack",
      "Design",
      "Queue"
    ],
    "question": "<div><div><p>Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (<code>push</code>, <code>top</code>, <code>pop</code>, and <code>empty</code>).</p> <p>Implement the <code>MyStack</code> class:</p> <ul> <li><code>void push(int x)</code> Pushes element x to the top of the stack.</li> <li><code>int pop()</code> Removes the element on the top of the stack and returns it.</li> <li><code>int top()</code> Returns the element on the top of the stack.</li> <li><code>boolean empty()</code> Returns <code>true</code> if the stack is empty, <code>false</code> otherwise.</li> </ul> <p><strong>Notes:</strong></p> <ul> <li>You must use <strong>only</strong> standard operations of a queue, which means that only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code> and <code>is empty</code> operations are valid.</li> <li>Depending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue's standard operations.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"MyStack\", \"push\", \"push\", \"top\", \"pop\", \"empty\"] [[], [1], [2], [], [], []] <strong>Output</strong> [null, null, null, 2, 2, false] <strong>Explanation</strong> MyStack myStack = new MyStack(); myStack.push(1); myStack.push(2); myStack.top(); // return 2 myStack.pop(); // return 2 myStack.empty(); // return False </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= x &lt;= 9</code></li> <li>At most <code>100</code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>empty</code>.</li> <li>All the calls to <code>pop</code> and <code>top</code> are valid.</li> </ul> <p><strong>Follow-up:</strong> Can you implement the stack using only one queue?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 226,
    "title": "Invert Binary Tree",
    "title_slug": "invert-binary-tree",
    "link": "https://leetcode.com/problems/invert-binary-tree",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, invert the tree, and return <em>its root</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/14/invert1-tree.jpg\"> <pre><strong>Input:</strong> root = [4,2,7,1,3,6,9] <strong>Output:</strong> [4,7,2,9,6,3,1] </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/14/invert2-tree.jpg\"> <pre><strong>Input:</strong> root = [2,1,3] <strong>Output:</strong> [2,3,1] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [] <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li> <li><code>-100 &lt;= Node.val &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/14/invert1-tree.jpg",
        "https://assets.leetcode.com/uploads/2021/03/14/invert2-tree.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 227,
    "title": "Basic Calculator II",
    "title_slug": "basic-calculator-ii",
    "link": "https://leetcode.com/problems/basic-calculator-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "String",
      "Stack"
    ],
    "question": "<div><div><p>Given a string <code>s</code> which represents an expression, <em>evaluate this expression and return its value</em>. </p> <p>The integer division should truncate toward zero.</p> <p>You may assume that the given expression is always valid. All intermediate results will be in the range of <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>.</p> <p><strong>Note:</strong> You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as <code>eval()</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"3+2*2\" <strong>Output:</strong> 7 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \" 3/2 \" <strong>Output:</strong> 1 </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \" 3+5 / 2 \" <strong>Output:</strong> 5 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 3 * 10<sup>5</sup></code></li> <li><code>s</code> consists of integers and operators <code>('+', '-', '*', '/')</code> separated by some number of spaces.</li> <li><code>s</code> represents <strong>a valid expression</strong>.</li> <li>All the integers in the expression are non-negative integers in the range <code>[0, 2<sup>31</sup> - 1]</code>.</li> <li>The answer is <strong>guaranteed</strong> to fit in a <strong>32-bit integer</strong>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 228,
    "title": "Summary Ranges",
    "title_slug": "summary-ranges",
    "link": "https://leetcode.com/problems/summary-ranges",
    "difficulty": "Easy",
    "similar_topics": [
      "Array"
    ],
    "question": "<div><div><p>You are given a <strong>sorted unique</strong> integer array <code>nums</code>.</p> <p>A <strong>range</strong> <code>[a,b]</code> is the set of all integers from <code>a</code> to <code>b</code> (inclusive).</p> <p>Return <em>the <strong>smallest sorted</strong> list of ranges that <strong>cover all the numbers in the array exactly</strong></em>. That is, each element of <code>nums</code> is covered by exactly one of the ranges, and there is no integer <code>x</code> such that <code>x</code> is in one of the ranges but not in <code>nums</code>.</p> <p>Each range <code>[a,b]</code> in the list should be output as:</p> <ul> <li><code>\"a-&gt;b\"</code> if <code>a != b</code></li> <li><code>\"a\"</code> if <code>a == b</code></li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [0,1,2,4,5,7] <strong>Output:</strong> [\"0-&gt;2\",\"4-&gt;5\",\"7\"] <strong>Explanation:</strong> The ranges are: [0,2] --&gt; \"0-&gt;2\" [4,5] --&gt; \"4-&gt;5\" [7,7] --&gt; \"7\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [0,2,3,4,6,8,9] <strong>Output:</strong> [\"0\",\"2-&gt;4\",\"6\",\"8-&gt;9\"] <strong>Explanation:</strong> The ranges are: [0,0] --&gt; \"0\" [2,4] --&gt; \"2-&gt;4\" [6,6] --&gt; \"6\" [8,9] --&gt; \"8-&gt;9\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= nums.length &lt;= 20</code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> <li>All the values of <code>nums</code> are <strong>unique</strong>.</li> <li><code>nums</code> is sorted in ascending order.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 229,
    "title": "Majority Element II",
    "title_slug": "majority-element-ii",
    "link": "https://leetcode.com/problems/majority-element-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "question": "<div><div><p>Given an integer array of size <code>n</code>, find all elements that appear more than <code>⌊ n/3 ⌋</code> times.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [3,2,3] <strong>Output:</strong> [3] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1] <strong>Output:</strong> [1] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> nums = [1,2] <strong>Output:</strong> [1,2] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li> </ul> <p><strong>Follow up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 230,
    "title": "Kth Smallest Element in a BST",
    "title_slug": "kth-smallest-element-in-a-bst",
    "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary search tree, and an integer <code>k</code>, return <em>the</em> <code>k<sup>th</sup></code> <em>smallest value (<strong>1-indexed</strong>) of all the values of the nodes in the tree</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/28/kthtree1.jpg\"> <pre><strong>Input:</strong> root = [3,1,4,null,2], k = 1 <strong>Output:</strong> 1 </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/01/28/kthtree2.jpg\"> <pre><strong>Input:</strong> root = [5,3,6,2,4,null,null,1], k = 3 <strong>Output:</strong> 3 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is <code>n</code>.</li> <li><code>1 &lt;= k &lt;= n &lt;= 10<sup>4</sup></code></li> <li><code>0 &lt;= Node.val &lt;= 10<sup>4</sup></code></li> </ul> <p><strong>Follow up:</strong> If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?</p> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/01/28/kthtree1.jpg",
        "https://assets.leetcode.com/uploads/2021/01/28/kthtree2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 231,
    "title": "Power of Two",
    "title_slug": "power-of-two",
    "link": "https://leetcode.com/problems/power-of-two",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "Bit Manipulation",
      "Recursion"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of two. Otherwise, return <code>false</code></em>.</p> <p>An integer <code>n</code> is a power of two, if there exists an integer <code>x</code> such that <code>n == 2<sup>x</sup></code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> true <strong>Explanation: </strong>2<sup>0</sup> = 1 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 16 <strong>Output:</strong> true <strong>Explanation: </strong>2<sup>4</sup> = 16 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li> </ul> <strong>Follow up:</strong> Could you solve it without loops/recursion?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 232,
    "title": "Implement Queue using Stacks",
    "title_slug": "implement-queue-using-stacks",
    "link": "https://leetcode.com/problems/implement-queue-using-stacks",
    "difficulty": "Easy",
    "similar_topics": [
      "Stack",
      "Design",
      "Queue"
    ],
    "question": "<div><div><p>Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (<code>push</code>, <code>peek</code>, <code>pop</code>, and <code>empty</code>).</p> <p>Implement the <code>MyQueue</code> class:</p> <ul> <li><code>void push(int x)</code> Pushes element x to the back of the queue.</li> <li><code>int pop()</code> Removes the element from the front of the queue and returns it.</li> <li><code>int peek()</code> Returns the element at the front of the queue.</li> <li><code>boolean empty()</code> Returns <code>true</code> if the queue is empty, <code>false</code> otherwise.</li> </ul> <p><strong>Notes:</strong></p> <ul> <li>You must use <strong>only</strong> standard operations of a stack, which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li> <li>Depending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack's standard operations.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"MyQueue\", \"push\", \"push\", \"peek\", \"pop\", \"empty\"] [[], [1], [2], [], [], []] <strong>Output</strong> [null, null, null, 1, 1, false] <strong>Explanation</strong> MyQueue myQueue = new MyQueue(); myQueue.push(1); // queue is: [1] myQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue) myQueue.peek(); // return 1 myQueue.pop(); // return 1, queue is [2] myQueue.empty(); // return false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= x &lt;= 9</code></li> <li>At most <code>100</code> calls will be made to <code>push</code>, <code>pop</code>, <code>peek</code>, and <code>empty</code>.</li> <li>All the calls to <code>pop</code> and <code>peek</code> are valid.</li> </ul> <p><strong>Follow-up:</strong> Can you implement the queue such that each operation is <strong><a href=\"https://en.wikipedia.org/wiki/Amortized_analysis\" target=\"_blank\" rel=\"noopener\">amortized</a></strong> <code>O(1)</code> time complexity? In other words, performing <code>n</code> operations will take overall <code>O(n)</code> time even if one of those operations may take longer.</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 233,
    "title": "Number of Digit One",
    "title_slug": "number-of-digit-one",
    "link": "https://leetcode.com/problems/number-of-digit-one",
    "difficulty": "Hard",
    "similar_topics": [
      "Math",
      "Dynamic Programming",
      "Recursion"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, count <em>the total number of digit </em><code>1</code><em> appearing in all non-negative integers less than or equal to</em> <code>n</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 13 <strong>Output:</strong> 6 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 0 <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 234,
    "title": "Palindrome Linked List",
    "title_slug": "palindrome-linked-list",
    "link": "https://leetcode.com/problems/palindrome-linked-list",
    "difficulty": "Easy",
    "similar_topics": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ],
    "question": "<div><div><p>Given the <code>head</code> of a singly linked list, return <code>true</code><em> if it is a palindrome or </em><code>false</code><em> otherwise</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/03/pal1linked-list.jpg\"> <pre><strong>Input:</strong> head = [1,2,2,1] <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/03/pal2linked-list.jpg\"> <pre><strong>Input:</strong> head = [1,2] <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the list is in the range <code>[1, 10<sup>5</sup>]</code>.</li> <li><code>0 &lt;= Node.val &lt;= 9</code></li> </ul> <strong>Follow up:</strong> Could you do it in <code>O(n)</code> time and <code>O(1)</code> space?</div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/03/pal1linked-list.jpg",
        "https://assets.leetcode.com/uploads/2021/03/03/pal2linked-list.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 235,
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "title_slug": "lowest-common-ancestor-of-a-binary-search-tree",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.</p> <p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\" rel=\"noopener\">definition of LCA on Wikipedia</a>: “The lowest common ancestor is defined between two nodes <code>p</code> and <code>q</code> as the lowest node in <code>T</code> that has both <code>p</code> and <code>q</code> as descendants (where we allow <strong>a node to be a descendant of itself</strong>).”</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png\"> <pre><strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8 <strong>Output:</strong> 6 <strong>Explanation:</strong> The LCA of nodes 2 and 8 is 6. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png\"> <pre><strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4 <strong>Output:</strong> 2 <strong>Explanation:</strong> The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [2,1], p = 2, q = 1 <strong>Output:</strong> 2 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[2, 10<sup>5</sup>]</code>.</li> <li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li> <li>All <code>Node.val</code> are <strong>unique</strong>.</li> <li><code>p != q</code></li> <li><code>p</code> and <code>q</code> will exist in the BST.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png",
        "https://assets.leetcode.com/uploads/2018/12/14/binarysearchtree_improved.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 236,
    "title": "Lowest Common Ancestor of a Binary Tree",
    "title_slug": "lowest-common-ancestor-of-a-binary-tree",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
    "difficulty": "Medium",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.</p> <p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\" rel=\"noopener\">definition of LCA on Wikipedia</a>: “The lowest common ancestor is defined between two nodes <code>p</code> and <code>q</code> as the lowest node in <code>T</code> that has both <code>p</code> and <code>q</code> as descendants (where we allow <strong>a node to be a descendant of itself</strong>).”</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\"> <pre><strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1 <strong>Output:</strong> 3 <strong>Explanation:</strong> The LCA of nodes 5 and 1 is 3. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2018/12/14/binarytree.png\"> <pre><strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4 <strong>Output:</strong> 5 <strong>Explanation:</strong> The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> root = [1,2], p = 1, q = 2 <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[2, 10<sup>5</sup>]</code>.</li> <li><code>-10<sup>9</sup> &lt;= Node.val &lt;= 10<sup>9</sup></code></li> <li>All <code>Node.val</code> are <strong>unique</strong>.</li> <li><code>p != q</code></li> <li><code>p</code> and <code>q</code> will exist in the tree.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2018/12/14/binarytree.png",
        "https://assets.leetcode.com/uploads/2018/12/14/binarytree.png"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 237,
    "title": "Delete Node in a Linked List",
    "title_slug": "delete-node-in-a-linked-list",
    "link": "https://leetcode.com/problems/delete-node-in-a-linked-list",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List"
    ],
    "question": "<div><div><p>There is a singly-linked list <code>head</code> and we want to delete a node <code>node</code> in it.</p> <p>You are given the node to be deleted <code>node</code>. You will <strong>not be given access</strong> to the first node of <code>head</code>.</p> <p>All the values of the linked list are <strong>unique</strong>, and it is guaranteed that the given node <code>node</code> is not the last node in the linked list.</p> <p>Delete the given node. Note that by deleting the node, we do not mean removing it from memory. We mean:</p> <ul> <li>The value of the given node should not exist in the linked list.</li> <li>The number of nodes in the linked list should decrease by one.</li> <li>All the values before <code>node</code> should be in the same order.</li> <li>All the values after <code>node</code> should be in the same order.</li> </ul> <p><strong>Custom testing:</strong></p> <ul> <li>For the input, you should provide the entire linked list <code>head</code> and the node to be given <code>node</code>. <code>node</code> should not be the last node of the list and should be an actual node in the list.</li> <li>We will build the linked list and pass the node to your function.</li> <li>The output will be the entire list after calling your function.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/01/node1.jpg\"> <pre><strong>Input:</strong> head = [4,5,1,9], node = 5 <strong>Output:</strong> [4,1,9] <strong>Explanation: </strong>You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/09/01/node2.jpg\"> <pre><strong>Input:</strong> head = [4,5,1,9], node = 1 <strong>Output:</strong> [4,5,9] <strong>Explanation: </strong>You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of the nodes in the given list is in the range <code>[2, 1000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> <li>The value of each node in the list is <strong>unique</strong>.</li> <li>The <code>node</code> to be deleted is <strong>in the list</strong> and is <strong>not a tail</strong> node.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/09/01/node1.jpg",
        "https://assets.leetcode.com/uploads/2020/09/01/node2.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 238,
    "title": "Product of Array Except Self",
    "title_slug": "product-of-array-except-self",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Prefix Sum"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, return <em>an array</em> <code>answer</code> <em>such that</em> <code>answer[i]</code> <em>is equal to the product of all the elements of</em> <code>nums</code> <em>except</em> <code>nums[i]</code>.</p> <p>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</p> <p>You must write an algorithm that runs in <code>O(n)</code> time and without using the division operation.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,2,3,4] <strong>Output:</strong> [24,12,8,6] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [-1,1,0,-3,3] <strong>Output:</strong> [0,0,9,0,0] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-30 &lt;= nums[i] &lt;= 30</code></li> <li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li> </ul> <p><strong>Follow up:</strong> Can you solve the problem in <code>O(1) </code>extra space complexity? (The output array <strong>does not</strong> count as extra space for space complexity analysis.)</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 239,
    "title": "Sliding Window Maximum",
    "title_slug": "sliding-window-maximum",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "question": "<div><div><p>You are given an array of integers <code>nums</code>, there is a sliding window of size <code>k</code> which is moving from the very left of the array to the very right. You can only see the <code>k</code> numbers in the window. Each time the sliding window moves right by one position.</p> <p>Return <em>the max sliding window</em>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [1,3,-1,-3,5,3,6,7], k = 3 <strong>Output:</strong> [3,3,5,5,6,7] <strong>Explanation:</strong> Window position Max --------------- ----- [1 3 -1] -3 5 3 6 7 <strong>3</strong> 1 [3 -1 -3] 5 3 6 7 <strong>3</strong> 1 3 [-1 -3 5] 3 6 7 <strong> 5</strong> 1 3 -1 [-3 5 3] 6 7 <strong>5</strong> 1 3 -1 -3 [5 3 6] 7 <strong>6</strong> 1 3 -1 -3 5 [3 6 7] <strong>7</strong> </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [1], k = 1 <strong>Output:</strong> [1] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li> <li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li> <li><code>1 &lt;= k &lt;= nums.length</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 240,
    "title": "Search a 2D Matrix II",
    "title_slug": "search-a-2d-matrix-ii",
    "link": "https://leetcode.com/problems/search-a-2d-matrix-ii",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Matrix"
    ],
    "question": "<div><div><p>Write an efficient algorithm that searches for a value <code>target</code> in an <code>m x n</code> integer matrix <code>matrix</code>. This matrix has the following properties:</p> <ul> <li>Integers in each row are sorted in ascending from left to right.</li> <li>Integers in each column are sorted in ascending from top to bottom.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid2.jpg\"> <pre><strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5 <strong>Output:</strong> true </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/11/24/searchgrid.jpg\"> <pre><strong>Input:</strong> matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20 <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == matrix.length</code></li> <li><code>n == matrix[i].length</code></li> <li><code>1 &lt;= n, m &lt;= 300</code></li> <li><code>-10<sup>9</sup> &lt;= matrix[i][j] &lt;= 10<sup>9</sup></code></li> <li>All the integers in each row are <strong>sorted</strong> in ascending order.</li> <li>All the integers in each column are <strong>sorted</strong> in ascending order.</li> <li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/11/24/searchgrid2.jpg",
        "https://assets.leetcode.com/uploads/2020/11/24/searchgrid.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 241,
    "title": "Different Ways to Add Parentheses",
    "title_slug": "different-ways-to-add-parentheses",
    "link": "https://leetcode.com/problems/different-ways-to-add-parentheses",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "String",
      "Dynamic Programming",
      "Recursion",
      "Memoization"
    ],
    "question": "<div><div><p>Given a string <code>expression</code> of numbers and operators, return <em>all possible results from computing all the different possible ways to group numbers and operators</em>. You may return the answer in <strong>any order</strong>.</p> <p>The test cases are generated such that the output values fit in a 32-bit integer and the number of different results does not exceed <code>10<sup>4</sup></code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> expression = \"2-1-1\" <strong>Output:</strong> [0,2] <strong>Explanation:</strong> ((2-1)-1) = 0 (2-(1-1)) = 2 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> expression = \"2*3-4*5\" <strong>Output:</strong> [-34,-14,-10,-10,10] <strong>Explanation:</strong> (2*(3-(4*5))) = -34 ((2*3)-(4*5)) = -14 ((2*(3-4))*5) = -10 (2*((3-4)*5)) = -10 (((2*3)-4)*5) = 10 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= expression.length &lt;= 20</code></li> <li><code>expression</code> consists of digits and the operator <code>'+'</code>, <code>'-'</code>, and <code>'*'</code>.</li> <li>All the integer values in the input expression are in the range <code>[0, 99]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 242,
    "title": "Valid Anagram",
    "title_slug": "valid-anagram",
    "link": "https://leetcode.com/problems/valid-anagram",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "question": "<div><div><p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code> <em>if</em> <code>t</code> <em>is an anagram of</em> <code>s</code><em>, and</em> <code>false</code> <em>otherwise</em>.</p> <p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"anagram\", t = \"nagaram\" <strong>Output:</strong> true </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"rat\", t = \"car\" <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length, t.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>s</code> and <code>t</code> consist of lowercase English letters.</li> </ul> <p><strong>Follow up:</strong> What if the inputs contain Unicode characters? How would you adapt your solution to such a case?</p> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 380,
    "title": "Insert Delete GetRandom O(1)",
    "title_slug": "insert-delete-getrandom-o(1)",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o(1)",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "question": "<div><div><p>Implement the <code>RandomizedSet</code> class:</p> <ul> <li><code>RandomizedSet()</code> Initializes the <code>RandomizedSet</code> object.</li> <li><code>bool insert(int val)</code> Inserts an item <code>val</code> into the set if not present. Returns <code>true</code> if the item was not present, <code>false</code> otherwise.</li> <li><code>bool remove(int val)</code> Removes an item <code>val</code> from the set if present. Returns <code>true</code> if the item was present, <code>false</code> otherwise.</li> <li><code>int getRandom()</code> Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the <strong>same probability</strong> of being returned.</li> </ul> <p>You must implement the functions of the class such that each function works in <strong>average</strong> <code>O(1)</code> time complexity.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"] [[], [1], [2], [2], [], [1], [2], []] <strong>Output</strong> [null, true, false, true, 2, true, false, 2] <strong>Explanation</strong> RandomizedSet randomizedSet = new RandomizedSet(); randomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully. randomizedSet.remove(2); // Returns false as 2 does not exist in the set. randomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2]. randomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly. randomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2]. randomizedSet.insert(2); // 2 was already in the set, so return false. randomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li> <li>At most <code>2 * 10<sup>5</sup></code> calls will be made to <code>insert</code>, <code>remove</code>, and <code>getRandom</code>.</li> <li>There will be <strong>at least one</strong> element in the data structure when <code>getRandom</code> is called.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 381,
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "title_slug": "insert-delete-getrandom-o(1)---duplicates-allowed",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o(1)---duplicates-allowed",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "question": "<div><div><p><code>RandomizedCollection</code> is a data structure that contains a collection of numbers, possibly duplicates (i.e., a multiset). It should support inserting and removing specific elements and also removing a random element.</p> <p>Implement the <code>RandomizedCollection</code> class:</p> <ul> <li><code>RandomizedCollection()</code> Initializes the empty <code>RandomizedCollection</code> object.</li> <li><code>bool insert(int val)</code> Inserts an item <code>val</code> into the multiset, even if the item is already present. Returns <code>true</code> if the item is not present, <code>false</code> otherwise.</li> <li><code>bool remove(int val)</code> Removes an item <code>val</code> from the multiset if present. Returns <code>true</code> if the item is present, <code>false</code> otherwise. Note that if <code>val</code> has multiple occurrences in the multiset, we only remove one of them.</li> <li><code>int getRandom()</code> Returns a random element from the current multiset of elements. The probability of each element being returned is <strong>linearly related</strong> to the number of same values the multiset contains.</li> </ul> <p>You must implement the functions of the class such that each function works on <strong>average</strong> <code>O(1)</code> time complexity.</p> <p><strong>Note:</strong> The test cases are generated such that <code>getRandom</code> will only be called if there is <strong>at least one</strong> item in the <code>RandomizedCollection</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"RandomizedCollection\", \"insert\", \"insert\", \"insert\", \"getRandom\", \"remove\", \"getRandom\"] [[], [1], [1], [2], [], [1], []] <strong>Output</strong> [null, true, false, true, 2, true, 1] <strong>Explanation</strong> RandomizedCollection randomizedCollection = new RandomizedCollection(); randomizedCollection.insert(1); // return true since the collection does not contain 1. // Inserts 1 into the collection. randomizedCollection.insert(1); // return false since the collection contains 1. // Inserts another 1 into the collection. Collection now contains [1,1]. randomizedCollection.insert(2); // return true since the collection does not contain 2. // Inserts 2 into the collection. Collection now contains [1,1,2]. randomizedCollection.getRandom(); // getRandom should: // - return 1 with probability 2/3, or // - return 2 with probability 1/3. randomizedCollection.remove(1); // return true since the collection contains 1. // Removes 1 from the collection. Collection now contains [1,2]. randomizedCollection.getRandom(); // getRandom should return 1 or 2, both equally likely. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li> <li>At most <code>2 * 10<sup>5</sup></code> calls <strong>in total</strong> will be made to <code>insert</code>, <code>remove</code>, and <code>getRandom</code>.</li> <li>There will be <strong>at least one</strong> element in the data structure when <code>getRandom</code> is called.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 382,
    "title": "Linked List Random Node",
    "title_slug": "linked-list-random-node",
    "link": "https://leetcode.com/problems/linked-list-random-node",
    "difficulty": "Medium",
    "similar_topics": [
      "Linked List",
      "Math",
      "Reservoir Sampling",
      "Randomized"
    ],
    "question": "<div><div><p>Given a singly linked list, return a random node's value from the linked list. Each node must have the <strong>same probability</strong> of being chosen.</p> <p>Implement the <code>Solution</code> class:</p> <ul> <li><code>Solution(ListNode head)</code> Initializes the object with the head of the singly-linked list <code>head</code>.</li> <li><code>int getRandom()</code> Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.</li> </ul> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/16/getrand-linked-list.jpg\"> <pre><strong>Input</strong> [\"Solution\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\"] [[[1, 2, 3]], [], [], [], [], []] <strong>Output</strong> [null, 1, 3, 2, 2, 3] <strong>Explanation</strong> Solution solution = new Solution([1, 2, 3]); solution.getRandom(); // return 1 solution.getRandom(); // return 3 solution.getRandom(); // return 2 solution.getRandom(); // return 2 solution.getRandom(); // return 3 // getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning. </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the linked list will be in the range <code>[1, 10<sup>4</sup>]</code>.</li> <li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li> <li>At most <code>10<sup>4</sup></code> calls will be made to <code>getRandom</code>.</li> </ul> <p><strong>Follow up:</strong></p> <ul> <li>What if the linked list is extremely large and its length is unknown to you?</li> <li>Could you solve this efficiently without using extra space?</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/16/getrand-linked-list.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 383,
    "title": "Ransom Note",
    "title_slug": "ransom-note",
    "link": "https://leetcode.com/problems/ransom-note",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "question": "<div><div><p>Given two strings <code>ransomNote</code> and <code>magazine</code>, return <code>true</code><em> if </em><code>ransomNote</code><em> can be constructed by using the letters from </em><code>magazine</code><em> and </em><code>false</code><em> otherwise</em>.</p> <p>Each letter in <code>magazine</code> can only be used once in <code>ransomNote</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> ransomNote = \"a\", magazine = \"b\" <strong>Output:</strong> false </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"ab\" <strong>Output:</strong> false </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"aab\" <strong>Output:</strong> true </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= ransomNote.length, magazine.length &lt;= 10<sup>5</sup></code></li> <li><code>ransomNote</code> and <code>magazine</code> consist of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 384,
    "title": "Shuffle an Array",
    "title_slug": "shuffle-an-array",
    "link": "https://leetcode.com/problems/shuffle-an-array",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Randomized"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code>, design an algorithm to randomly shuffle the array. All permutations of the array should be <strong>equally likely</strong> as a result of the shuffling.</p> <p>Implement the <code>Solution</code> class:</p> <ul> <li><code>Solution(int[] nums)</code> Initializes the object with the integer array <code>nums</code>.</li> <li><code>int[] reset()</code> Resets the array to its original configuration and returns it.</li> <li><code>int[] shuffle()</code> Returns a random shuffling of the array.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"Solution\", \"shuffle\", \"reset\", \"shuffle\"] [[[1, 2, 3]], [], [], []] <strong>Output</strong> [null, [3, 1, 2], [1, 2, 3], [1, 3, 2]] <strong>Explanation</strong> Solution solution = new Solution([1, 2, 3]); solution.shuffle(); // Shuffle the array [1,2,3] and return its result. // Any permutation of [1,2,3] must be equally likely to be returned. // Example: return [3, 1, 2] solution.reset(); // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3] solution.shuffle(); // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 50</code></li> <li><code>-10<sup>6</sup> &lt;= nums[i] &lt;= 10<sup>6</sup></code></li> <li>All the elements of <code>nums</code> are <strong>unique</strong>.</li> <li>At most <code>10<sup>4</sup></code> calls <strong>in total</strong> will be made to <code>reset</code> and <code>shuffle</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 385,
    "title": "Mini Parser",
    "title_slug": "mini-parser",
    "link": "https://leetcode.com/problems/mini-parser",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Stack",
      "Depth-First Search"
    ],
    "question": "<div><div><p>Given a string s represents the serialization of a nested list, implement a parser to deserialize it and return <em>the deserialized</em> <code>NestedInteger</code>.</p> <p>Each element is either an integer or a list whose elements may also be integers or other lists.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"324\" <strong>Output:</strong> 324 <strong>Explanation:</strong> You should return a NestedInteger object which contains a single integer 324. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"[123,[456,[789]]]\" <strong>Output:</strong> [123,[456,[789]]] <strong>Explanation:</strong> Return a NestedInteger object containing a nested list with 2 elements: 1. An integer containing value 123. 2. A nested list containing two elements: i. An integer containing value 456. ii. A nested list with one element: a. An integer containing value 789 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li> <li><code>s</code> consists of digits, square brackets <code>\"[]\"</code>, negative sign <code>'-'</code>, and commas <code>','</code>.</li> <li><code>s</code> is the serialization of valid <code>NestedInteger</code>.</li> <li>All the values in the input are in the range <code>[-10<sup>6</sup>, 10<sup>6</sup>]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 386,
    "title": "Lexicographical Numbers",
    "title_slug": "lexicographical-numbers",
    "link": "https://leetcode.com/problems/lexicographical-numbers",
    "difficulty": "Medium",
    "similar_topics": [
      "Depth-First Search",
      "Trie"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return all the numbers in the range <code>[1, n]</code> sorted in lexicographical order.</p> <p>You must write an algorithm that runs in <code>O(n)</code> time and uses <code>O(1)</code> extra space. </p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 13 <strong>Output:</strong> [1,10,11,12,13,2,3,4,5,6,7,8,9] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 2 <strong>Output:</strong> [1,2] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 387,
    "title": "First Unique Character in a String",
    "title_slug": "first-unique-character-in-a-string",
    "link": "https://leetcode.com/problems/first-unique-character-in-a-string",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "String",
      "Queue",
      "Counting"
    ],
    "question": "<div><div><p>Given a string <code>s</code>, <em>find the first non-repeating character in it and return its index</em>. If it does not exist, return <code>-1</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"leetcode\" <strong>Output:</strong> 0 </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"loveleetcode\" <strong>Output:</strong> 2 </pre><p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"aabb\" <strong>Output:</strong> -1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li> <li><code>s</code> consists of only lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 388,
    "title": "Longest Absolute File Path",
    "title_slug": "longest-absolute-file-path",
    "link": "https://leetcode.com/problems/longest-absolute-file-path",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Stack",
      "Depth-First Search"
    ],
    "question": "<div><div><p>Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:</p> <p><img src=\"https://assets.leetcode.com/uploads/2020/08/28/mdir.jpg\"></p> <p>Here, we have <code>dir</code> as the only directory in the root. <code>dir</code> contains two subdirectories, <code>subdir1</code> and <code>subdir2</code>. <code>subdir1</code> contains a file <code>file1.ext</code> and subdirectory <code>subsubdir1</code>. <code>subdir2</code> contains a subdirectory <code>subsubdir2</code>, which contains a file <code>file2.ext</code>.</p> <p>In text form, it looks like this (with ⟶ representing the tab character):</p> <pre>dir ⟶ subdir1 ⟶ ⟶ file1.ext ⟶ ⟶ subsubdir1 ⟶ subdir2 ⟶ ⟶ subsubdir2 ⟶ ⟶ ⟶ file2.ext </pre> <p>If we were to write this representation in code, it will look like this: <code>\"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"</code>. Note that the <code>'\\n'</code> and <code>'\\t'</code> are the new-line and tab characters.</p> <p>Every file and directory has a unique <strong>absolute path</strong> in the file system, which is the order of directories that must be opened to reach the file/directory itself, all concatenated by <code>'/'s</code>. Using the above example, the <strong>absolute path</strong> to <code>file2.ext</code> is <code>\"dir/subdir2/subsubdir2/file2.ext\"</code>. Each directory name consists of letters, digits, and/or spaces. Each file name is of the form <code>name.extension</code>, where <code>name</code> and <code>extension</code> consist of letters, digits, and/or spaces.</p> <p>Given a string <code>input</code> representing the file system in the explained format, return <em>the length of the <strong>longest absolute path</strong> to a <strong>file</strong> in the abstracted file system</em>. If there is no file in the system, return <code>0</code>.</p> <p><strong>Note</strong> that the testcases are generated such that the file system is valid and no file or directory name has length 0.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/28/dir1.jpg\"> <pre><strong>Input:</strong> input = \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\" <strong>Output:</strong> 20 <strong>Explanation:</strong> We have only one file, and the absolute path is \"dir/subdir2/file.ext\" of length 20. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2020/08/28/dir2.jpg\"> <pre><strong>Input:</strong> input = \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\" <strong>Output:</strong> 32 <strong>Explanation:</strong> We have two files: \"dir/subdir1/file1.ext\" of length 21 \"dir/subdir2/subsubdir2/file2.ext\" of length 32. We return 32 since it is the longest absolute path to a file. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> input = \"a\" <strong>Output:</strong> 0 <strong>Explanation:</strong> We do not have any files, just a single directory named \"a\". </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= input.length &lt;= 10<sup>4</sup></code></li> <li><code>input</code> may contain lowercase or uppercase English letters, a new line character <code>'\\n'</code>, a tab character <code>'\\t'</code>, a dot <code>'.'</code>, a space <code>' '</code>, and digits.</li> <li>All file and directory names have <strong>positive</strong> length.</li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2020/08/28/mdir.jpg",
        "https://assets.leetcode.com/uploads/2020/08/28/dir1.jpg",
        "https://assets.leetcode.com/uploads/2020/08/28/dir2.jpg"
      ],
      "previous_element": [
        "",
        "Example 1:",
        "Example 2:"
      ]
    }
  },
  {
    "id": 389,
    "title": "Find the Difference",
    "title_slug": "find-the-difference",
    "link": "https://leetcode.com/problems/find-the-difference",
    "difficulty": "Easy",
    "similar_topics": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sorting"
    ],
    "question": "<div><div><p>You are given two strings <code>s</code> and <code>t</code>.</p> <p>String <code>t</code> is generated by random shuffling string <code>s</code> and then add one more letter at a random position.</p> <p>Return the letter that was added to <code>t</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"abcd\", t = \"abcde\" <strong>Output:</strong> \"e\" <strong>Explanation:</strong> 'e' is the letter that was added. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"\", t = \"y\" <strong>Output:</strong> \"y\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 1000</code></li> <li><code>t.length == s.length + 1</code></li> <li><code>s</code> and <code>t</code> consist of lowercase English letters.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 390,
    "title": "Elimination Game",
    "title_slug": "elimination-game",
    "link": "https://leetcode.com/problems/elimination-game",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Recursion"
    ],
    "question": "<div><div><p>You have a list <code>arr</code> of all integers in the range <code>[1, n]</code> sorted in a strictly increasing order. Apply the following algorithm on <code>arr</code>:</p> <ul> <li>Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</li> <li>Repeat the previous step again, but this time from right to left, remove the rightmost number and every other number from the remaining numbers.</li> <li>Keep repeating the steps again, alternating left to right and right to left, until a single number remains.</li> </ul> <p>Given the integer <code>n</code>, return <em>the last number that remains in</em> <code>arr</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 9 <strong>Output:</strong> 6 <strong>Explanation:</strong> arr = [1, 2, 3, 4, 5, 6, 7, 8, 9] arr = [2, 4, 6, 8] arr = [2, 6] arr = [6] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 1 <strong>Output:</strong> 1 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 391,
    "title": "Perfect Rectangle",
    "title_slug": "perfect-rectangle",
    "link": "https://leetcode.com/problems/perfect-rectangle",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Line Sweep"
    ],
    "question": "<div><div><p>Given an array <code>rectangles</code> where <code>rectangles[i] = [x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub>]</code> represents an axis-aligned rectangle. The bottom-left point of the rectangle is <code>(x<sub>i</sub>, y<sub>i</sub>)</code> and the top-right point of it is <code>(a<sub>i</sub>, b<sub>i</sub>)</code>.</p> <p>Return <code>true</code> <em>if all the rectangles together form an exact cover of a rectangular region</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/27/perectrec1-plane.jpg\"> <pre><strong>Input:</strong> rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]] <strong>Output:</strong> true <strong>Explanation:</strong> All 5 rectangles together form an exact cover of a rectangular region. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/27/perfectrec2-plane.jpg\"> <pre><strong>Input:</strong> rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]] <strong>Output:</strong> false <strong>Explanation:</strong> Because there is a gap between the two rectangular regions. </pre> <p><strong>Example 3:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/03/27/perfecrrec4-plane.jpg\"> <pre><strong>Input:</strong> rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]] <strong>Output:</strong> false <strong>Explanation:</strong> Because two of the rectangles overlap with each other. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= rectangles.length &lt;= 2 * 10<sup>4</sup></code></li> <li><code>rectangles[i].length == 4</code></li> <li><code>-10<sup>5</sup> &lt;= x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub> &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/03/27/perectrec1-plane.jpg",
        "https://assets.leetcode.com/uploads/2021/03/27/perfectrec2-plane.jpg",
        "https://assets.leetcode.com/uploads/2021/03/27/perfecrrec4-plane.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:",
        "Example 3:"
      ]
    }
  },
  {
    "id": 392,
    "title": "Is Subsequence",
    "title_slug": "is-subsequence",
    "link": "https://leetcode.com/problems/is-subsequence",
    "difficulty": "Easy",
    "similar_topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>Given two strings <code>s</code> and <code>t</code>, return <code>true</code><em> if </em><code>s</code><em> is a <strong>subsequence</strong> of </em><code>t</code><em>, or </em><code>false</code><em> otherwise</em>.</p> <p>A <strong>subsequence</strong> of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., <code>\"ace\"</code> is a subsequence of <code>\"abcde\"</code> while <code>\"aec\"</code> is not).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"abc\", t = \"ahbgdc\" <strong>Output:</strong> true </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"axc\", t = \"ahbgdc\" <strong>Output:</strong> false </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= s.length &lt;= 100</code></li> <li><code>0 &lt;= t.length &lt;= 10<sup>4</sup></code></li> <li><code>s</code> and <code>t</code> consist only of lowercase English letters.</li> </ul> <strong>Follow up:</strong> Suppose there are lots of incoming <code>s</code>, say <code>s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub></code> where <code>k &gt;= 10<sup>9</sup></code>, and you want to check one by one to see if <code>t</code> has its subsequence. In this scenario, how would you change your code?</div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 393,
    "title": "UTF-8 Validation",
    "title_slug": "utf-8-validation",
    "link": "https://leetcode.com/problems/utf-8-validation",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given an integer array <code>data</code> representing the data, return whether it is a valid <strong>UTF-8</strong> encoding (i.e. it translates to a sequence of valid UTF-8 encoded characters).</p> <p>A character in <strong>UTF8</strong> can be from <strong>1 to 4 bytes</strong> long, subjected to the following rules:</p> <ol> <li>For a <strong>1-byte</strong> character, the first bit is a <code>0</code>, followed by its Unicode code.</li> <li>For an <strong>n-bytes</strong> character, the first <code>n</code> bits are all one's, the <code>n + 1</code> bit is <code>0</code>, followed by <code>n - 1</code> bytes with the most significant <code>2</code> bits being <code>10</code>.</li> </ol> <p>This is how the UTF-8 encoding would work:</p> <pre> Number of Bytes | UTF-8 Octet Sequence | (binary) --------------------+----------------------------------------- 1 | 0xxxxxxx 2 | 110xxxxx 10xxxxxx 3 | 1110xxxx 10xxxxxx 10xxxxxx 4 | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx </pre> <p><code>x</code> denotes a bit in the binary form of a byte that may be either <code>0</code> or <code>1</code>.</p> <p><strong>Note: </strong>The input is an array of integers. Only the <strong>least significant 8 bits</strong> of each integer is used to store the data. This means each integer represents only 1 byte of data.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> data = [197,130,1] <strong>Output:</strong> true <strong>Explanation:</strong> data represents the octet sequence: 11000101 10000010 00000001. It is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> data = [235,140,4] <strong>Output:</strong> false <strong>Explanation:</strong> data represented the octet sequence: 11101011 10001100 00000100. The first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character. The next byte is a continuation byte which starts with 10 and that's correct. But the second continuation byte does not start with 10, so it is invalid. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= data.length &lt;= 2 * 10<sup>4</sup></code></li> <li><code>0 &lt;= data[i] &lt;= 255</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 394,
    "title": "Decode String",
    "title_slug": "decode-string",
    "link": "https://leetcode.com/problems/decode-string",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Stack",
      "Recursion"
    ],
    "question": "<div><div><p>Given an encoded string, return its decoded string.</p> <p>The encoding rule is: <code>k[encoded_string]</code>, where the <code>encoded_string</code> inside the square brackets is being repeated exactly <code>k</code> times. Note that <code>k</code> is guaranteed to be a positive integer.</p> <p>You may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <code>k</code>. For example, there will not be input like <code>3a</code> or <code>2[4]</code>.</p> <p>The test cases are generated so that the length of the output will never exceed <code>10<sup>5</sup></code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"3[a]2[bc]\" <strong>Output:</strong> \"aaabcbc\" </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"3[a2[c]]\" <strong>Output:</strong> \"accaccacc\" </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> s = \"2[abc]3[cd]ef\" <strong>Output:</strong> \"abcabccdcdcdef\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 30</code></li> <li><code>s</code> consists of lowercase English letters, digits, and square brackets <code>'[]'</code>.</li> <li><code>s</code> is guaranteed to be <strong>a valid</strong> input.</li> <li>All the integers in <code>s</code> are in the range <code>[1, 300]</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 395,
    "title": "Longest Substring with At Least K Repeating Characters",
    "title_slug": "longest-substring-with-at-least-k-repeating-characters",
    "link": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "String",
      "Divide and Conquer",
      "Sliding Window"
    ],
    "question": "<div><div><p>Given a string <code>s</code> and an integer <code>k</code>, return <em>the length of the longest substring of</em> <code>s</code> <em>such that the frequency of each character in this substring is greater than or equal to</em> <code>k</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> s = \"aaabb\", k = 3 <strong>Output:</strong> 3 <strong>Explanation:</strong> The longest substring is \"aaa\", as 'a' is repeated 3 times. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> s = \"ababbc\", k = 2 <strong>Output:</strong> 5 <strong>Explanation:</strong> The longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li> <li><code>s</code> consists of only lowercase English letters.</li> <li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 396,
    "title": "Rotate Function",
    "title_slug": "rotate-function",
    "link": "https://leetcode.com/problems/rotate-function",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Math",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>You are given an integer array <code>nums</code> of length <code>n</code>.</p> <p>Assume <code>arr<sub>k</sub></code> to be an array obtained by rotating <code>nums</code> by <code>k</code> positions clock-wise. We define the <strong>rotation function</strong> <code>F</code> on <code>nums</code> as follow:</p> <ul> <li><code>F(k) = 0 * arr<sub>k</sub>[0] + 1 * arr<sub>k</sub>[1] + ... + (n - 1) * arr<sub>k</sub>[n - 1].</code></li> </ul> <p>Return <em>the maximum value of</em> <code>F(0), F(1), ..., F(n-1)</code>.</p> <p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> nums = [4,3,2,6] <strong>Output:</strong> 26 <strong>Explanation:</strong> F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25 F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16 F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23 F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26 So the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> nums = [100] <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>n == nums.length</code></li> <li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li> <li><code>-100 &lt;= nums[i] &lt;= 100</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 397,
    "title": "Integer Replacement",
    "title_slug": "integer-replacement",
    "link": "https://leetcode.com/problems/integer-replacement",
    "difficulty": "Medium",
    "similar_topics": [
      "Dynamic Programming",
      "Greedy",
      "Bit Manipulation",
      "Memoization"
    ],
    "question": "<div><div><p>Given a positive integer <code>n</code>, you can apply one of the following operations:</p> <ol> <li>If <code>n</code> is even, replace <code>n</code> with <code>n / 2</code>.</li> <li>If <code>n</code> is odd, replace <code>n</code> with either <code>n + 1</code> or <code>n - 1</code>.</li> </ol> <p>Return <em>the minimum number of operations needed for</em> <code>n</code> <em>to become</em> <code>1</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 8 <strong>Output:</strong> 3 <strong>Explanation:</strong> 8 -&gt; 4 -&gt; 2 -&gt; 1 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 7 <strong>Output:</strong> 4 <strong>Explanation: </strong>7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 or 7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1 </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> n = 4 <strong>Output:</strong> 2 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 398,
    "title": "Random Pick Index",
    "title_slug": "random-pick-index",
    "link": "https://leetcode.com/problems/random-pick-index",
    "difficulty": "Medium",
    "similar_topics": [
      "Hash Table",
      "Math",
      "Reservoir Sampling",
      "Randomized"
    ],
    "question": "<div><div><p>Given an integer array <code>nums</code> with possible <strong>duplicates</strong>, randomly output the index of a given <code>target</code> number. You can assume that the given target number must exist in the array.</p> <p>Implement the <code>Solution</code> class:</p> <ul> <li><code>Solution(int[] nums)</code> Initializes the object with the array <code>nums</code>.</li> <li><code>int pick(int target)</code> Picks a random index <code>i</code> from <code>nums</code> where <code>nums[i] == target</code>. If there are multiple valid i's, then each index should have an equal probability of returning.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input</strong> [\"Solution\", \"pick\", \"pick\", \"pick\"] [[[1, 2, 3, 3, 3]], [3], [1], [3]] <strong>Output</strong> [null, 4, 0, 2] <strong>Explanation</strong> Solution solution = new Solution([1, 2, 3, 3, 3]); solution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning. solution.pick(1); // It should return 0. Since in the array only nums[0] is equal to 1. solution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li> <li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li> <li><code>target</code> is an integer from <code>nums</code>.</li> <li>At most <code>10<sup>4</sup></code> calls will be made to <code>pick</code>.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 399,
    "title": "Evaluate Division",
    "title_slug": "evaluate-division",
    "link": "https://leetcode.com/problems/evaluate-division",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ],
    "question": "<div><div><p>You are given an array of variable pairs <code>equations</code> and an array of real numbers <code>values</code>, where <code>equations[i] = [A<sub>i</sub>, B<sub>i</sub>]</code> and <code>values[i]</code> represent the equation <code>A<sub>i</sub> / B<sub>i</sub> = values[i]</code>. Each <code>A<sub>i</sub></code> or <code>B<sub>i</sub></code> is a string that represents a single variable.</p> <p>You are also given some <code>queries</code>, where <code>queries[j] = [C<sub>j</sub>, D<sub>j</sub>]</code> represents the <code>j<sup>th</sup></code> query where you must find the answer for <code>C<sub>j</sub> / D<sub>j</sub> = ?</code>.</p> <p>Return <em>the answers to all queries</em>. If a single answer cannot be determined, return <code>-1.0</code>.</p> <p><strong>Note:</strong> The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]] <strong>Output:</strong> [6.00000,0.50000,-1.00000,1.00000,-1.00000] <strong>Explanation:</strong> Given: <em>a / b = 2.0</em>, <em>b / c = 3.0</em> queries are: <em>a / c = ?</em>, <em>b / a = ?</em>, <em>a / e = ?</em>, <em>a / a = ?</em>, <em>x / x = ?</em> return: [6.0, 0.5, -1.0, 1.0, -1.0 ] </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> equations = [[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]], values = [1.5,2.5,5.0], queries = [[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]] <strong>Output:</strong> [3.75000,0.40000,5.00000,0.20000] </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> equations = [[\"a\",\"b\"]], values = [0.5], queries = [[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]] <strong>Output:</strong> [0.50000,2.00000,-1.00000,-1.00000] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= equations.length &lt;= 20</code></li> <li><code>equations[i].length == 2</code></li> <li><code>1 &lt;= A<sub>i</sub>.length, B<sub>i</sub>.length &lt;= 5</code></li> <li><code>values.length == equations.length</code></li> <li><code>0.0 &lt; values[i] &lt;= 20.0</code></li> <li><code>1 &lt;= queries.length &lt;= 20</code></li> <li><code>queries[i].length == 2</code></li> <li><code>1 &lt;= C<sub>j</sub>.length, D<sub>j</sub>.length &lt;= 5</code></li> <li><code>A<sub>i</sub>, B<sub>i</sub>, C<sub>j</sub>, D<sub>j</sub></code> consist of lower case English letters and digits.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 400,
    "title": "Nth Digit",
    "title_slug": "nth-digit",
    "link": "https://leetcode.com/problems/nth-digit",
    "difficulty": "Medium",
    "similar_topics": [
      "Math",
      "Binary Search"
    ],
    "question": "<div><div><p>Given an integer <code>n</code>, return the <code>n<sup>th</sup></code> digit of the infinite integer sequence <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...]</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> n = 3 <strong>Output:</strong> 3 </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> n = 11 <strong>Output:</strong> 0 <strong>Explanation:</strong> The 11<sup>th</sup> digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 401,
    "title": "Binary Watch",
    "title_slug": "binary-watch",
    "link": "https://leetcode.com/problems/binary-watch",
    "difficulty": "Easy",
    "similar_topics": [
      "Backtracking",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>A binary watch has 4 LEDs on the top to represent the hours (0-11), and 6 LEDs on the bottom to represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right.</p> <ul> <li>For example, the below binary watch reads <code>\"4:51\"</code>.</li> </ul> <p><img src=\"https://assets.leetcode.com/uploads/2021/04/08/binarywatch.jpg\"></p> <p>Given an integer <code>turnedOn</code> which represents the number of LEDs that are currently on (ignoring the PM), return <em>all possible times the watch could represent</em>. You may return the answer in <strong>any order</strong>.</p> <p>The hour must not contain a leading zero.</p> <ul> <li>For example, <code>\"01:00\"</code> is not valid. It should be <code>\"1:00\"</code>.</li> </ul> <p>The minute must be consist of two digits and may contain a leading zero.</p> <ul> <li>For example, <code>\"10:2\"</code> is not valid. It should be <code>\"10:02\"</code>.</li> </ul> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> turnedOn = 1 <strong>Output:</strong> [\"0:01\",\"0:02\",\"0:04\",\"0:08\",\"0:16\",\"0:32\",\"1:00\",\"2:00\",\"4:00\",\"8:00\"] </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> turnedOn = 9 <strong>Output:</strong> [] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>0 &lt;= turnedOn &lt;= 10</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/04/08/binarywatch.jpg"
      ],
      "previous_element": [
        ""
      ]
    }
  },
  {
    "id": 402,
    "title": "Remove K Digits",
    "title_slug": "remove-k-digits",
    "link": "https://leetcode.com/problems/remove-k-digits",
    "difficulty": "Medium",
    "similar_topics": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ],
    "question": "<div><div><p>Given string num representing a non-negative integer <code>num</code>, and an integer <code>k</code>, return <em>the smallest possible integer after removing</em> <code>k</code> <em>digits from</em> <code>num</code>.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> num = \"1432219\", k = 3 <strong>Output:</strong> \"1219\" <strong>Explanation:</strong> Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> num = \"10200\", k = 1 <strong>Output:</strong> \"200\" <strong>Explanation:</strong> Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes. </pre> <p><strong>Example 3:</strong></p> <pre><strong>Input:</strong> num = \"10\", k = 2 <strong>Output:</strong> \"0\" <strong>Explanation:</strong> Remove all the digits from the number and it is left with nothing which is 0. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= k &lt;= num.length &lt;= 10<sup>5</sup></code></li> <li><code>num</code> consists of only digits.</li> <li><code>num</code> does not have any leading zeros except for the zero itself.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 403,
    "title": "Frog Jump",
    "title_slug": "frog-jump",
    "link": "https://leetcode.com/problems/frog-jump",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Dynamic Programming"
    ],
    "question": "<div><div><p>A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p> <p>Given a list of <code>stones</code>' positions (in units) in sorted <strong>ascending order</strong>, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be <code>1</code> unit.</p> <p>If the frog's last jump was <code>k</code> units, its next jump must be either <code>k - 1</code>, <code>k</code>, or <code>k + 1</code> units. The frog can only jump in the forward direction.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> stones = [0,1,3,5,6,8,12,17] <strong>Output:</strong> true <strong>Explanation:</strong> The frog can jump to the last stone by jumping 1 unit to the 2nd stone, then 2 units to the 3rd stone, then 2 units to the 4th stone, then 3 units to the 6th stone, 4 units to the 7th stone, and 5 units to the 8th stone. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> stones = [0,1,2,3,4,8,9,11] <strong>Output:</strong> false <strong>Explanation:</strong> There is no way to jump to the last stone as the gap between the 5th and 6th stone is too large. </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>2 &lt;= stones.length &lt;= 2000</code></li> <li><code>0 &lt;= stones[i] &lt;= 2<sup>31</sup> - 1</code></li> <li><code>stones[0] == 0</code></li> <li><code>stones</code> is sorted in a strictly increasing order.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 404,
    "title": "Sum of Left Leaves",
    "title_slug": "sum-of-left-leaves",
    "link": "https://leetcode.com/problems/sum-of-left-leaves",
    "difficulty": "Easy",
    "similar_topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "question": "<div><div><p>Given the <code>root</code> of a binary tree, return <em>the sum of all left leaves.</em></p> <p>A <strong>leaf</strong> is a node with no children. A <strong>left leaf</strong> is a leaf that is the left child of another node.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/04/08/leftsum-tree.jpg\"> <pre><strong>Input:</strong> root = [3,9,20,null,null,15,7] <strong>Output:</strong> 24 <strong>Explanation:</strong> There are two left leaves in the binary tree, with values 9 and 15 respectively. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> root = [1] <strong>Output:</strong> 0 </pre> <p><strong>Constraints:</strong></p> <ul> <li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li> <li><code>-1000 &lt;= Node.val &lt;= 1000</code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/04/08/leftsum-tree.jpg"
      ],
      "previous_element": [
        "Example 1:"
      ]
    }
  },
  {
    "id": 405,
    "title": "Convert a Number to Hexadecimal",
    "title_slug": "convert-a-number-to-hexadecimal",
    "link": "https://leetcode.com/problems/convert-a-number-to-hexadecimal",
    "difficulty": "Easy",
    "similar_topics": [
      "Math",
      "Bit Manipulation"
    ],
    "question": "<div><div><p>Given an integer <code>num</code>, return <em>a string representing its hexadecimal representation</em>. For negative integers, <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\" rel=\"noopener\">two’s complement</a> method is used.</p> <p>All the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself.</p> <p><strong>Note: </strong>You are not allowed to use any built-in library method to directly solve this problem.</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> num = 26 <strong>Output:</strong> \"1a\" </pre><p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> num = -1 <strong>Output:</strong> \"ffffffff\" </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>-2<sup>31</sup> &lt;= num &lt;= 2<sup>31</sup> - 1</code></li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 406,
    "title": "Queue Reconstruction by Height",
    "title_slug": "queue-reconstruction-by-height",
    "link": "https://leetcode.com/problems/queue-reconstruction-by-height",
    "difficulty": "Medium",
    "similar_topics": [
      "Array",
      "Greedy",
      "Binary Indexed Tree",
      "Segment Tree",
      "Sorting"
    ],
    "question": "<div><div><p>You are given an array of people, <code>people</code>, which are the attributes of some people in a queue (not necessarily in order). Each <code>people[i] = [h<sub>i</sub>, k<sub>i</sub>]</code> represents the <code>i<sup>th</sup></code> person of height <code>h<sub>i</sub></code> with <strong>exactly</strong> <code>k<sub>i</sub></code> other people in front who have a height greater than or equal to <code>h<sub>i</sub></code>.</p> <p>Reconstruct and return <em>the queue that is represented by the input array </em><code>people</code>. The returned queue should be formatted as an array <code>queue</code>, where <code>queue[j] = [h<sub>j</sub>, k<sub>j</sub>]</code> is the attributes of the <code>j<sup>th</sup></code> person in the queue (<code>queue[0]</code> is the person at the front of the queue).</p> <p><strong>Example 1:</strong></p> <pre><strong>Input:</strong> people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]] <strong>Output:</strong> [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] <strong>Explanation:</strong> Person 0 has height 5 with no other people taller or the same height in front. Person 1 has height 7 with no other people taller or the same height in front. Person 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1. Person 3 has height 6 with one person taller or the same height in front, which is person 1. Person 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3. Person 5 has height 7 with one person taller or the same height in front, which is person 1. Hence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue. </pre> <p><strong>Example 2:</strong></p> <pre><strong>Input:</strong> people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]] <strong>Output:</strong> [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]] </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>1 &lt;= people.length &lt;= 2000</code></li> <li><code>0 &lt;= h<sub>i</sub> &lt;= 10<sup>6</sup></code></li> <li><code>0 &lt;= k<sub>i</sub> &lt; people.length</code></li> <li>It is guaranteed that the queue can be reconstructed.</li> </ul> </div></div>",
    "images": {
      "image": [],
      "previous_element": []
    }
  },
  {
    "id": 407,
    "title": "Trapping Rain Water II",
    "title_slug": "trapping-rain-water-ii",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii",
    "difficulty": "Hard",
    "similar_topics": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "question": "<div><div><p>Given an <code>m x n</code> integer matrix <code>heightMap</code> representing the height of each unit cell in a 2D elevation map, return <em>the volume of water it can trap after raining</em>.</p> <p><strong>Example 1:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/04/08/trap1-3d.jpg\"> <pre><strong>Input:</strong> heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]] <strong>Output:</strong> 4 <strong>Explanation:</strong> After the rain, water is trapped between the blocks. We have two small ponds 1 and 3 units trapped. The total volume of water trapped is 4. </pre> <p><strong>Example 2:</strong></p> <img src=\"https://assets.leetcode.com/uploads/2021/04/08/trap2-3d.jpg\"> <pre><strong>Input:</strong> heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]] <strong>Output:</strong> 10 </pre> <p><strong>Constraints:</strong></p> <ul> <li><code>m == heightMap.length</code></li> <li><code>n == heightMap[i].length</code></li> <li><code>1 &lt;= m, n &lt;= 200</code></li> <li><code>0 &lt;= heightMap[i][j] &lt;= 2 * 10<sup>4</sup></code></li> </ul> </div></div>",
    "images": {
      "image": [
        "https://assets.leetcode.com/uploads/2021/04/08/trap1-3d.jpg",
        "https://assets.leetcode.com/uploads/2021/04/08/trap2-3d.jpg"
      ],
      "previous_element": [
        "Example 1:",
        "Example 2:"
      ]
    }
  }
]