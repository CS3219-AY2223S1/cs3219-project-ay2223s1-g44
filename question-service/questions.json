[
    {
      "id": 1,
      "title": "Two Sum",
      "title_slug": "two-sum",
      "link": "https://leetcode.com/problems/two-sum",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Hash Table"
      ],
      "question": "<div><p>Given an array of integers <code>nums</code>\u00a0and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n<p>You can return the answer in any order.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>2 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow-up:\u00a0</strong>Can you come up with an algorithm that is less than\u00a0<code>O(n<sup>2</sup>)\u00a0</code>time complexity?</div>"
    },
    {
      "id": 2,
      "title": "Add Two Numbers",
      "title_slug": "add-two-numbers",
      "link": "https://leetcode.com/problems/add-two-numbers",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Math",
        "Recursion"
      ],
      "question": "<div><p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum\u00a0as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\" style=\"width: 483px; height: 342px;\"/>\n<pre><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]\n<strong>Output:</strong> [7,0,8]\n<strong>Explanation:</strong> 342 + 465 = 807.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> l1 = [0], l2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n<strong>Output:</strong> [8,9,9,9,0,0,0,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>\n<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n</div>"
    },
    {
      "id": 3,
      "title": "Longest Substring Without Repeating Characters",
      "title_slug": "longest-substring-without-repeating-characters",
      "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "String",
        "Sliding Window"
      ],
      "question": "<div><p>Given a string <code>s</code>, find the length of the <strong>longest <span data-keyword=\"substring-nonempty\">substring</span></strong> without repeating characters.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"abcabcbb\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is \"abc\", with the length of 3.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"bbbbb\"\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The answer is \"b\", with the length of 1.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"pwwkew\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n<li><code>s</code> consists of English letters, digits, symbols and spaces.</li>\n</ul>\n</div>"
    },
    {
      "id": 4,
      "title": "Median of Two Sorted Arrays",
      "title_slug": "median-of-two-sorted-arrays",
      "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Binary Search",
        "Divide and Conquer"
      ],
      "question": "<div><p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p>\n<p>The overall run time complexity should be <code>O(log (m+n))</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums1 = [1,3], nums2 = [2]\n<strong>Output:</strong> 2.00000\n<strong>Explanation:</strong> merged array = [1,2,3] and median is 2.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums1 = [1,2], nums2 = [3,4]\n<strong>Output:</strong> 2.50000\n<strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>nums1.length == m</code></li>\n<li><code>nums2.length == n</code></li>\n<li><code>0 &lt;= m &lt;= 1000</code></li>\n<li><code>0 &lt;= n &lt;= 1000</code></li>\n<li><code>1 &lt;= m + n &lt;= 2000</code></li>\n<li><code>-10<sup>6</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 5,
      "title": "Longest Palindromic Substring",
      "title_slug": "longest-palindromic-substring",
      "link": "https://leetcode.com/problems/longest-palindromic-substring",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given a string <code>s</code>, return <em>the longest palindromic substring</em> in <code>s</code>.</p>\n<p>A string is called a palindrome string if the reverse of that string is the same as the original string.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"babad\"\n<strong>Output:</strong> \"bab\"\n<strong>Explanation:</strong> \"aba\" is also a valid answer.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"cbbd\"\n<strong>Output:</strong> \"bb\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n<li><code>s</code> consist of only digits and English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 6,
      "title": "Zigzag Conversion",
      "title_slug": "zigzag-conversion",
      "link": "https://leetcode.com/problems/zigzag-conversion",
      "difficulty": "Medium",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>The string <code>\"PAYPALISHIRING\"</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n<pre>P   A   H   N\nA P L S I I G\nY   I   R\n</pre>\n<p>And then read line by line: <code>\"PAHNAPLSIIGYIR\"</code></p>\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n<pre>string convert(string s, int numRows);\n</pre>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"PAYPALISHIRING\", numRows = 3\n<strong>Output:</strong> \"PAHNAPLSIIGYIR\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"PAYPALISHIRING\", numRows = 4\n<strong>Output:</strong> \"PINALSIGYAHRPI\"\n<strong>Explanation:</strong>\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"A\", numRows = 1\n<strong>Output:</strong> \"A\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n<li><code>s</code> consists of English letters (lower-case and upper-case), <code>','</code> and <code>'.'</code>.</li>\n<li><code>1 &lt;= numRows &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 7,
      "title": "Reverse Integer",
      "title_slug": "reverse-integer",
      "link": "https://leetcode.com/problems/reverse-integer",
      "difficulty": "Medium",
      "similar_topics": [
        "Math"
      ],
      "question": "<div><p>Given a signed 32-bit integer <code>x</code>, return <code>x</code><em> with its digits reversed</em>. If reversing <code>x</code> causes the value to go outside the signed 32-bit integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then return <code>0</code>.</p>\n<p><strong>Assume the environment does not allow you to store 64-bit integers (signed or unsigned).</strong></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> x = 123\n<strong>Output:</strong> 321\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> x = -123\n<strong>Output:</strong> -321\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> x = 120\n<strong>Output:</strong> 21\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup> &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n</div>"
    },
    {
      "id": 8,
      "title": "String to Integer (atoi)",
      "title_slug": "string-to-integer",
      "link": "https://leetcode.com/problems/string-to-integer-atoi",
      "difficulty": "Medium",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>Implement the <code>myAtoi(string s)</code> function, which converts a string to a 32-bit signed integer (similar to C/C++'s <code>atoi</code> function).</p>\n<p>The algorithm for <code>myAtoi(string s)</code> is as follows:</p>\n<ol>\n<li>Read in and ignore any leading whitespace.</li>\n<li>Check if the next character (if not already at the end of the string) is <code>'-'</code> or <code>'+'</code>. Read this character in if it is either. This determines if the final result is negative or positive respectively. Assume the result is positive if neither is present.</li>\n<li>Read in next the characters until the next non-digit character or the end of the input is reached. The rest of the string is ignored.</li>\n<li>Convert these digits into an integer (i.e. <code>\"123\" -&gt; 123</code>, <code>\"0032\" -&gt; 32</code>). If no digits were read, then the integer is <code>0</code>. Change the sign as necessary (from step 2).</li>\n<li>If the integer is out of the 32-bit signed integer range <code>[-2<sup>31</sup>, 2<sup>31</sup> - 1]</code>, then clamp the integer so that it remains in the range. Specifically, integers less than <code>-2<sup>31</sup></code> should be clamped to <code>-2<sup>31</sup></code>, and integers greater than <code>2<sup>31</sup> - 1</code> should be clamped to <code>2<sup>31</sup> - 1</code>.</li>\n<li>Return the integer as the final result.</li>\n</ol>\n<p><strong>Note:</strong></p>\n<ul>\n<li>Only the space character <code>' '</code> is considered a whitespace character.</li>\n<li><strong>Do not ignore</strong> any characters other than the leading whitespace or the rest of the string after the digits.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"42\"\n<strong>Output:</strong> 42\n<strong>Explanation:</strong> The underlined characters are what is read in, the caret is the current reader position.\nStep 1: \"42\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"42\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"<u>42</u>\" (\"42\" is read in)\n           ^\nThe parsed integer is 42.\nSince 42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 42.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"   -42\"\n<strong>Output:</strong> -42\n<strong>Explanation:</strong>\nStep 1: \"<u>   </u>-42\" (leading whitespace is read and ignored)\n            ^\nStep 2: \"   <u>-</u>42\" ('-' is read, so the result should be negative)\n             ^\nStep 3: \"   -<u>42</u>\" (\"42\" is read in)\n               ^\nThe parsed integer is -42.\nSince -42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is -42.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"4193 with words\"\n<strong>Output:</strong> 4193\n<strong>Explanation:</strong>\nStep 1: \"4193 with words\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"4193 with words\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"<u>4193</u> with words\" (\"4193\" is read in; reading stops because the next character is a non-digit)\n             ^\nThe parsed integer is 4193.\nSince 4193 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 4193.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 200</code></li>\n<li><code>s</code> consists of English letters (lower-case and upper-case), digits (<code>0-9</code>), <code>' '</code>, <code>'+'</code>, <code>'-'</code>, and <code>'.'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 9,
      "title": "Palindrome Number",
      "title_slug": "palindrome-number",
      "link": "https://leetcode.com/problems/palindrome-number",
      "difficulty": "Easy",
      "similar_topics": [
        "Math"
      ],
      "question": "<div><p>Given an integer <code>x</code>, return <code>true</code> if <code>x</code> is palindrome integer.</p>\n<p>An integer is a <strong>palindrome</strong> when it reads the same backward as forward.</p>\n<ul>\n<li>For example, <code>121</code> is a palindrome while <code>123</code> is not.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> x = 121\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> x = -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> x = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup>\u00a0&lt;= x &lt;= 2<sup>31</sup>\u00a0- 1</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Could you solve it without converting the integer to a string?</div>"
    },
    {
      "id": 10,
      "title": "Regular Expression Matching",
      "title_slug": "regular-expression-matching",
      "link": "https://leetcode.com/problems/regular-expression-matching",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming",
        "Recursion"
      ],
      "question": "<div><p>Given an input string <code>s</code>\u00a0and a pattern <code>p</code>, implement regular expression matching with support for <code>'.'</code> and <code>'*'</code> where:</p>\n<ul>\n<li><code>'.'</code> Matches any single character.\u200b\u200b\u200b\u200b</li>\n<li><code>'*'</code> Matches zero or more of the preceding element.</li>\n</ul>\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aa\", p = \"a\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \"a\" does not match the entire string \"aa\".\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"aa\", p = \"a*\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\".\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"ab\", p = \".*\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \".*\" means \"zero or more (*) of any character (.)\".\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length\u00a0&lt;= 20</code></li>\n<li><code>1 &lt;= p.length\u00a0&lt;= 30</code></li>\n<li><code>s</code> contains only lowercase English letters.</li>\n<li><code>p</code> contains only lowercase English letters, <code>'.'</code>, and\u00a0<code>'*'</code>.</li>\n<li>It is guaranteed for each appearance of the character <code>'*'</code>, there will be a previous valid character to match.</li>\n</ul>\n</div>"
    },
    {
      "id": 11,
      "title": "Container With Most Water",
      "title_slug": "container-with-most-water",
      "link": "https://leetcode.com/problems/container-with-most-water",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Greedy"
      ],
      "question": "<div><p>You are given an integer array <code>height</code> of length <code>n</code>. There are <code>n</code> vertical lines drawn such that the two endpoints of the <code>i<sup>th</sup></code> line are <code>(i, 0)</code> and <code>(i, height[i])</code>.</p>\n<p>Find two lines that together with the x-axis form a container, such that the container contains the most water.</p>\n<p>Return <em>the maximum amount of water a container can store</em>.</p>\n<p><strong>Notice</strong> that you may not slant the container.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://s3-lc-upload.s3.amazonaws.com/uploads/2018/07/17/question_11.jpg\" style=\"width: 600px; height: 287px;\"/>\n<pre><strong>Input:</strong> height = [1,8,6,2,5,4,8,3,7]\n<strong>Output:</strong> 49\n<strong>Explanation:</strong> The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> height = [1,1]\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == height.length</code></li>\n<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= height[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 12,
      "title": "Integer to Roman",
      "title_slug": "integer-to-roman",
      "link": "https://leetcode.com/problems/integer-to-roman",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Math",
        "String"
      ],
      "question": "<div><p>Roman numerals are represented by seven different symbols:\u00a0<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n<pre><strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n<p>For example,\u00a0<code>2</code> is written as <code>II</code>\u00a0in Roman numeral, just two one's added together. <code>12</code> is written as\u00a0<code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n<ul>\n<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.\u00a0</li>\n<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.\u00a0</li>\n<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n<p>Given an integer, convert it to a roman numeral.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num = 3\n<strong>Output:</strong> \"III\"\n<strong>Explanation:</strong> 3 is represented as 3 ones.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num = 58\n<strong>Output:</strong> \"LVIII\"\n<strong>Explanation:</strong> L = 50, V = 5, III = 3.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> num = 1994\n<strong>Output:</strong> \"MCMXCIV\"\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= num &lt;= 3999</code></li>\n</ul>\n</div>"
    },
    {
      "id": 13,
      "title": "Roman to Integer",
      "title_slug": "roman-to-integer",
      "link": "https://leetcode.com/problems/roman-to-integer",
      "difficulty": "Easy",
      "similar_topics": [
        "Hash Table",
        "Math",
        "String"
      ],
      "question": "<div><p>Roman numerals are represented by seven different symbols:\u00a0<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n<pre><strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n<p>For example,\u00a0<code>2</code> is written as <code>II</code>\u00a0in Roman numeral, just two ones added together. <code>12</code> is written as\u00a0<code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n<ul>\n<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.\u00a0</li>\n<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.\u00a0</li>\n<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n<p>Given a roman numeral, convert it to an integer.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"III\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> III = 3.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"LVIII\"\n<strong>Output:</strong> 58\n<strong>Explanation:</strong> L = 50, V= 5, III = 3.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"MCMXCIV\"\n<strong>Output:</strong> 1994\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 15</code></li>\n<li><code>s</code> contains only\u00a0the characters <code>('I', 'V', 'X', 'L', 'C', 'D', 'M')</code>.</li>\n<li>It is <strong>guaranteed</strong>\u00a0that <code>s</code> is a valid roman numeral in the range <code>[1, 3999]</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 14,
      "title": "Longest Common Prefix",
      "title_slug": "longest-common-prefix",
      "link": "https://leetcode.com/problems/longest-common-prefix",
      "difficulty": "Easy",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n<p>If there is no common prefix, return an empty string <code>\"\"</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> strs = [\"flower\",\"flow\",\"flight\"]\n<strong>Output:</strong> \"fl\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> strs = [\"dog\",\"racecar\",\"car\"]\n<strong>Output:</strong> \"\"\n<strong>Explanation:</strong> There is no common prefix among the input strings.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= strs.length &lt;= 200</code></li>\n<li><code>0 &lt;= strs[i].length &lt;= 200</code></li>\n<li><code>strs[i]</code> consists of only lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 15,
      "title": "3Sum",
      "title_slug": "3sum",
      "link": "https://leetcode.com/problems/3sum",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Sorting"
      ],
      "question": "<div><p>Given an integer array nums, return all the triplets <code>[nums[i], nums[j], nums[k]]</code> such that <code>i != j</code>, <code>i != k</code>, and <code>j != k</code>, and <code>nums[i] + nums[j] + nums[k] == 0</code>.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]\n<strong>Output:</strong> [[-1,-1,2],[-1,0,1]]\n<strong>Explanation:</strong> \nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,1]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The only possible triplet does not sum up to 0.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,0]\n<strong>Output:</strong> [[0,0,0]]\n<strong>Explanation:</strong> The only possible triplet sums up to 0.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>3 &lt;= nums.length &lt;= 3000</code></li>\n<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 16,
      "title": "3Sum Closest",
      "title_slug": "3sum-closest",
      "link": "https://leetcode.com/problems/3sum-closest",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Sorting"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> of length <code>n</code> and an integer <code>target</code>, find three integers in <code>nums</code> such that the sum is closest to <code>target</code>.</p>\n<p>Return <em>the sum of the three integers</em>.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-1,2,1,-4], target = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,0], target = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The sum that is closest to the target is 0. (0 + 0 + 0 = 0).\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>3 &lt;= nums.length &lt;= 500</code></li>\n<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 17,
      "title": "Letter Combinations of a Phone Number",
      "title_slug": "letter-combinations-of-a-phone-number",
      "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "String",
        "Backtracking"
      ],
      "question": "<div><p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent. Return the answer in <strong>any order</strong>.</p>\n<p>A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/15/1200px-telephone-keypad2svg.png\" style=\"width: 300px; height: 243px;\"/>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> digits = \"23\"\n<strong>Output:</strong> [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> digits = \"\"\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> digits = \"2\"\n<strong>Output:</strong> [\"a\",\"b\",\"c\"]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= digits.length &lt;= 4</code></li>\n<li><code>digits[i]</code> is a digit in the range <code>['2', '9']</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 18,
      "title": "4Sum",
      "title_slug": "4sum",
      "link": "https://leetcode.com/problems/4sum",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Sorting"
      ],
      "question": "<div><p>Given an array <code>nums</code> of <code>n</code> integers, return <em>an array of all the <strong>unique</strong> quadruplets</em> <code>[nums[a], nums[b], nums[c], nums[d]]</code> such that:</p>\n<ul>\n<li><code>0 &lt;= a, b, c, d\u00a0&lt; n</code></li>\n<li><code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code> are <strong>distinct</strong>.</li>\n<li><code>nums[a] + nums[b] + nums[c] + nums[d] == target</code></li>\n</ul>\n<p>You may return the answer in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,0,-1,0,-2,2], target = 0\n<strong>Output:</strong> [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,2,2,2], target = 8\n<strong>Output:</strong> [[2,2,2,2]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 200</code></li>\n<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n<li><code>-10<sup>9</sup> &lt;= target &lt;= 10<sup>9</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 19,
      "title": "Remove Nth Node From End of List",
      "title_slug": "remove-nth-node-from-end-of-list",
      "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked list, remove the <code>n<sup>th</sup></code> node from the end of the list and return its head.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/remove_ex1.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5], n = 2\n<strong>Output:</strong> [1,2,3,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> head = [1], n = 1\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> head = [1,2], n = 1\n<strong>Output:</strong> [1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is <code>sz</code>.</li>\n<li><code>1 &lt;= sz &lt;= 30</code></li>\n<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n<li><code>1 &lt;= n &lt;= sz</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Could you do this in one pass?</p>\n</div>"
    },
    {
      "id": 20,
      "title": "Valid Parentheses",
      "title_slug": "valid-parentheses",
      "link": "https://leetcode.com/problems/valid-parentheses",
      "difficulty": "Easy",
      "similar_topics": [
        "String",
        "Stack"
      ],
      "question": "<div><p>Given a string <code>s</code> containing just the characters <code>'('</code>, <code>')'</code>, <code>'{'</code>, <code>'}'</code>, <code>'['</code> and <code>']'</code>, determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<ol>\n<li>Open brackets must be closed by the same type of brackets.</li>\n<li>Open brackets must be closed in the correct order.</li>\n<li>Every close bracket has a corresponding open bracket of the same type.</li>\n</ol>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"()\"\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"()[]{}\"\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"(]\"\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>s</code> consists of parentheses only <code>'()[]{}'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 21,
      "title": "Merge Two Sorted Lists",
      "title_slug": "merge-two-sorted-lists",
      "link": "https://leetcode.com/problems/merge-two-sorted-lists",
      "difficulty": "Easy",
      "similar_topics": [
        "Linked List",
        "Recursion"
      ],
      "question": "<div><p>You are given the heads of two sorted linked lists <code>list1</code> and <code>list2</code>.</p>\n<p>Merge the two lists in a one <strong>sorted</strong> list. The list should be made by splicing together the nodes of the first two lists.</p>\n<p>Return <em>the head of the merged linked list</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg\" style=\"width: 662px; height: 302px;\"/>\n<pre><strong>Input:</strong> list1 = [1,2,4], list2 = [1,3,4]\n<strong>Output:</strong> [1,1,2,3,4,4]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> list1 = [], list2 = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> list1 = [], list2 = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in both lists is in the range <code>[0, 50]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li>Both <code>list1</code> and <code>list2</code> are sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n</div>"
    },
    {
      "id": 22,
      "title": "Generate Parentheses",
      "title_slug": "generate-parentheses",
      "link": "https://leetcode.com/problems/generate-parentheses",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Dynamic Programming",
        "Backtracking"
      ],
      "question": "<div><p>Given <code>n</code> pairs of parentheses, write a function to <em>generate all combinations of well-formed parentheses</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [\"()\"]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n</div>"
    },
    {
      "id": 23,
      "title": "Merge k Sorted Lists",
      "title_slug": "merge-k-sorted-list",
      "link": "https://leetcode.com/problems/merge-k-sorted-lists",
      "difficulty": "Hard",
      "similar_topics": [
        "Linked List",
        "Divide and Conquer",
        "Heap (Priority Queue)",
        "Merge Sort"
      ],
      "question": "<div><p>You are given an array of <code>k</code> linked-lists <code>lists</code>, each linked-list is sorted in ascending order.</p>\n<p><em>Merge all the linked-lists into one sorted linked-list and return it.</em></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> lists = [[1,4,5],[1,3,4],[2,6]]\n<strong>Output:</strong> [1,1,2,3,4,4,5,6]\n<strong>Explanation:</strong> The linked-lists are:\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\nmerging them into one sorted list:\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> lists = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> lists = [[]]\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>k == lists.length</code></li>\n<li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= lists[i].length &lt;= 500</code></li>\n<li><code>-10<sup>4</sup> &lt;= lists[i][j] &lt;= 10<sup>4</sup></code></li>\n<li><code>lists[i]</code> is sorted in <strong>ascending order</strong>.</li>\n<li>The sum of <code>lists[i].length</code> will not exceed <code>10<sup>4</sup></code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 24,
      "title": "Swap Nodes in Pairs",
      "title_slug": "swap-nodes-in-pairs",
      "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Recursion"
      ],
      "question": "<div><p>Given a\u00a0linked list, swap every two adjacent nodes and return its head. You must solve the problem without\u00a0modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/swap_ex1.jpg\" style=\"width: 422px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [2,1,4,3]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> head = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the\u00a0list\u00a0is in the range <code>[0, 100]</code>.</li>\n<li><code>0 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 25,
      "title": "Reverse Nodes in k-Group",
      "title_slug": "reverse-nodes-in-k-group",
      "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
      "difficulty": "Hard",
      "similar_topics": [
        "Linked List",
        "Recursion"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked list, reverse the nodes of the list <code>k</code> at a time, and return <em>the modified list</em>.</p>\n<p><code>k</code> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <code>k</code> then left-out nodes, in the end, should remain as it is.</p>\n<p>You may not alter the values in the list's nodes, only nodes themselves may be changed.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [2,1,4,3,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5], k = 3\n<strong>Output:</strong> [3,2,1,4,5]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is <code>n</code>.</li>\n<li><code>1 &lt;= k &lt;= n &lt;= 5000</code></li>\n<li><code>0 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow-up:</strong> Can you solve the problem in <code>O(1)</code> extra memory space?</p>\n</div>"
    },
    {
      "id": 26,
      "title": "Remove Duplicates from Sorted Array",
      "title_slug": "remove-duplicates-from-sorted-array",
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Two Pointers"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that each unique element appears only <strong>once</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code>\u00a0should hold the final result. It does not matter what you leave beyond the first\u00a0<code>k</code>\u00a0elements.</p>\n<p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p>\n<p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n<p><strong>Custom Judge:</strong></p>\n<p>The judge will test your solution with the following code:</p>\n<pre>int[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i &lt; k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong> 2, nums = [1,2,_]\n<strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,1,1,1,2,2,3,3,4]\n<strong>Output:</strong> 5, nums = [0,1,2,3,4,_,_,_,_,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-100 &lt;= nums[i] &lt;= 100</code></li>\n<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n</div>"
    },
    {
      "id": 27,
      "title": "Remove Element",
      "title_slug": "remove-element",
      "link": "https://leetcode.com/problems/remove-element",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Two Pointers"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> and an integer <code>val</code>, remove all occurrences of <code>val</code> in <code>nums</code> <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>. The relative order of the elements may be changed.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code> should hold the final result. It does not matter what you leave beyond the first <code>k</code> elements.</p>\n<p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p>\n<p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n<p><strong>Custom Judge:</strong></p>\n<p>The judge will test your solution with the following code:</p>\n<pre>int[] nums = [...]; // Input array\nint val = ...; // Value to remove\nint[] expectedNums = [...]; // The expected answer with correct length.\n                            // It is sorted with no values equaling val.\n\nint k = removeElement(nums, val); // Calls your implementation\n\nassert k == expectedNums.length;\nsort(nums, 0, k); // Sort the first k elements of nums\nfor (int i = 0; i &lt; actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,2,3], val = 3\n<strong>Output:</strong> 2, nums = [2,2,_,_]\n<strong>Explanation:</strong> Your function should return k = 2, with the first two elements of nums being 2.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,2,2,3,0,4,2], val = 2\n<strong>Output:</strong> 5, nums = [0,1,4,0,3,_,_,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\nNote that the five elements can be returned in any order.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 100</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 50</code></li>\n<li><code>0 &lt;= val &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 28,
      "title": "Find the Index of the First Occurrence in a String",
      "title_slug": "implement-strstr",
      "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",
      "difficulty": "Medium",
      "similar_topics": [
        "Two Pointers",
        "String",
        "String Matching"
      ],
      "question": "<div><p>Given two strings <code>needle</code> and <code>haystack</code>, return the index of the first occurrence of <code>needle</code> in <code>haystack</code>, or <code>-1</code> if <code>needle</code> is not part of <code>haystack</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> haystack = \"sadbutsad\", needle = \"sad\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \"sad\" occurs at index 0 and 6.\nThe first occurrence is at index 0, so we return 0.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> haystack = \"leetcode\", needle = \"leeto\"\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> \"leeto\" did not occur in \"leetcode\", so we return -1.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= haystack.length, needle.length &lt;= 10<sup>4</sup></code></li>\n<li><code>haystack</code> and <code>needle</code> consist of only lowercase English characters.</li>\n</ul>\n</div>"
    },
    {
      "id": 29,
      "title": "Divide Two Integers",
      "title_slug": "divide-integers",
      "link": "https://leetcode.com/problems/divide-two-integers",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "Bit Manipulation"
      ],
      "question": "<div><p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers <strong>without</strong> using multiplication, division, and mod operator.</p>\n<p>The integer division should truncate toward zero, which means losing its fractional part. For example, <code>8.345</code> would be truncated to <code>8</code>, and <code>-2.7335</code> would be truncated to <code>-2</code>.</p>\n<p>Return <em>the <strong>quotient</strong> after dividing </em><code>dividend</code><em> by </em><code>divisor</code>.</p>\n<p><strong>Note: </strong>Assume we are dealing with an environment that could only store integers within the <strong>32-bit</strong> signed integer range: <code>[\u22122<sup>31</sup>, 2<sup>31</sup> \u2212 1]</code>. For this problem, if the quotient is <strong>strictly greater than</strong> <code>2<sup>31</sup> - 1</code>, then return <code>2<sup>31</sup> - 1</code>, and if the quotient is <strong>strictly less than</strong> <code>-2<sup>31</sup></code>, then return <code>-2<sup>31</sup></code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> dividend = 10, divisor = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 10/3 = 3.33333.. which is truncated to 3.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> dividend = 7, divisor = -3\n<strong>Output:</strong> -2\n<strong>Explanation:</strong> 7/-3 = -2.33333.. which is truncated to -2.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup> &lt;= dividend, divisor &lt;= 2<sup>31</sup> - 1</code></li>\n<li><code>divisor != 0</code></li>\n</ul>\n</div>"
    },
    {
      "id": 30,
      "title": "Substring with Concatenation of All Words",
      "title_slug": "substring-with-concatenation-of-all-words",
      "link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words",
      "difficulty": "Hard",
      "similar_topics": [
        "Hash Table",
        "String",
        "Sliding Window"
      ],
      "question": "<div><p>You are given a string <code>s</code> and an array of strings <code>words</code>. All the strings of <code>words</code> are of <strong>the same length</strong>.</p>\n<p>A <strong>concatenated substring</strong> in <code>s</code> is a substring that contains all the strings of any permutation of <code>words</code> concatenated.</p>\n<ul>\n<li>For example, if <code>words = [\"ab\",\"cd\",\"ef\"]</code>, then <code>\"abcdef\"</code>, <code>\"abefcd\"</code>, <code>\"cdabef\"</code>, <code>\"cdefab\"</code>, <code>\"efabcd\"</code>, and <code>\"efcdab\"</code> are all concatenated strings. <code>\"acdbef\"</code> is not a concatenated substring because it is not the concatenation of any permutation of <code>words</code>.</li>\n</ul>\n<p>Return <em>the starting indices of all the concatenated substrings in </em><code>s</code>. You can return the answer in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"barfoothefoobarman\", words = [\"foo\",\"bar\"]\n<strong>Output:</strong> [0,9]\n<strong>Explanation:</strong> Since words.length == 2 and words[i].length == 3, the concatenated substring has to be of length 6.\nThe substring starting at 0 is \"barfoo\". It is the concatenation of [\"bar\",\"foo\"] which is a permutation of words.\nThe substring starting at 9 is \"foobar\". It is the concatenation of [\"foo\",\"bar\"] which is a permutation of words.\nThe output order does not matter. Returning [9,0] is fine too.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> Since words.length == 4 and words[i].length == 4, the concatenated substring has to be of length 16.\nThere is no substring of length 16 is s that is equal to the concatenation of any permutation of words.\nWe return an empty array.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"]\n<strong>Output:</strong> [6,9,12]\n<strong>Explanation:</strong> Since words.length == 3 and words[i].length == 3, the concatenated substring has to be of length 9.\nThe substring starting at 6 is \"foobarthe\". It is the concatenation of [\"foo\",\"bar\",\"the\"] which is a permutation of words.\nThe substring starting at 9 is \"barthefoo\". It is the concatenation of [\"bar\",\"the\",\"foo\"] which is a permutation of words.\nThe substring starting at 12 is \"thefoobar\". It is the concatenation of [\"the\",\"foo\",\"bar\"] which is a permutation of words.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>1 &lt;= words.length &lt;= 5000</code></li>\n<li><code>1 &lt;= words[i].length &lt;= 30</code></li>\n<li><code>s</code> and <code>words[i]</code> consist of lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 31,
      "title": "Next Permutation",
      "title_slug": "next-permutation",
      "link": "https://leetcode.com/problems/next-permutation",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers"
      ],
      "question": "<div><p>A <strong>permutation</strong> of an array of integers is an arrangement of its members into a sequence or linear order.</p>\n<ul>\n<li>For example, for <code>arr = [1,2,3]</code>, the following are all the permutations of <code>arr</code>: <code>[1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1]</code>.</li>\n</ul>\n<p>The <strong>next permutation</strong> of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the <strong>next permutation</strong> of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).</p>\n<ul>\n<li>For example, the next permutation of <code>arr = [1,2,3]</code> is <code>[1,3,2]</code>.</li>\n<li>Similarly, the next permutation of <code>arr = [2,3,1]</code> is <code>[3,1,2]</code>.</li>\n<li>While the next permutation of <code>arr = [3,2,1]</code> is <code>[1,2,3]</code> because <code>[3,2,1]</code> does not have a lexicographical larger rearrangement.</li>\n</ul>\n<p>Given an array of integers <code>nums</code>, <em>find the next permutation of</em> <code>nums</code>.</p>\n<p>The replacement must be <strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a></strong> and use only constant extra memory.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> [1,2,3]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,5]\n<strong>Output:</strong> [1,5,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 32,
      "title": "Longest Valid Parentheses",
      "title_slug": "longest-valid-parentheses",
      "link": "https://leetcode.com/problems/longest-valid-parentheses",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming",
        "Stack"
      ],
      "question": "<div><p>Given a string containing just the characters <code>'('</code> and <code>')'</code>, find the length of the longest valid (well-formed) parentheses substring.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"(()\"\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest valid parentheses substring is \"()\".\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \")()())\"\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest valid parentheses substring is \"()()\".\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"\"\n<strong>Output:</strong> 0\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>s[i]</code> is <code>'('</code>, or <code>')'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 33,
      "title": "Search in Rotated Sorted Array",
      "title_slug": "search-in-rotated-sorted-array",
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>There is an integer array <code>nums</code> sorted in ascending order (with <strong>distinct</strong> values).</p>\n<p>Prior to being passed to your function, <code>nums</code> is <strong>possibly rotated</strong> at an unknown pivot index <code>k</code> (<code>1 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,5,6,7]</code> might be rotated at pivot index <code>3</code> and become <code>[4,5,6,7,0,1,2]</code>.</p>\n<p>Given the array <code>nums</code> <strong>after</strong> the possible rotation and an integer <code>target</code>, return <em>the index of </em><code>target</code><em> if it is in </em><code>nums</code><em>, or </em><code>-1</code><em> if it is not in </em><code>nums</code>.</p>\n<p>You must write an algorithm with <code>O(log n)</code> runtime complexity.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 0\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2], target = 3\n<strong>Output:</strong> -1\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1], target = 0\n<strong>Output:</strong> -1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li>All values of <code>nums</code> are <strong>unique</strong>.</li>\n<li><code>nums</code> is an ascending array that is possibly rotated.</li>\n<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 34,
      "title": "Find First and Last Position of Element in Sorted Array",
      "title_slug": "find-first-and-last-position-of-element-in-sorted-array",
      "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>Given an array of integers <code>nums</code> sorted in non-decreasing order, find the starting and ending position of a given <code>target</code> value.</p>\n<p>If <code>target</code> is not found in the array, return <code>[-1, -1]</code>.</p>\n<p>You must\u00a0write an algorithm with\u00a0<code>O(log n)</code> runtime complexity.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 8\n<strong>Output:</strong> [3,4]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [5,7,7,8,8,10], target = 6\n<strong>Output:</strong> [-1,-1]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [], target = 0\n<strong>Output:</strong> [-1,-1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>9</sup>\u00a0&lt;= nums[i]\u00a0&lt;= 10<sup>9</sup></code></li>\n<li><code>nums</code> is a non-decreasing array.</li>\n<li><code>-10<sup>9</sup>\u00a0&lt;= target\u00a0&lt;= 10<sup>9</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 35,
      "title": "Search Insert Position",
      "title_slug": "search-insert-position",
      "link": "https://leetcode.com/problems/search-insert-position",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n<p>You must\u00a0write an algorithm with\u00a0<code>O(log n)</code> runtime complexity.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 5\n<strong>Output:</strong> 2\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 2\n<strong>Output:</strong> 1\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5,6], target = 7\n<strong>Output:</strong> 4\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code> contains <strong>distinct</strong> values sorted in <strong>ascending</strong> order.</li>\n<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 36,
      "title": "Valid Sudoku",
      "title_slug": "valid-sudoku",
      "link": "https://leetcode.com/problems/valid-sudoku",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Matrix"
      ],
      "question": "<div><p>Determine if a\u00a0<code>9 x 9</code> Sudoku board\u00a0is valid.\u00a0Only the filled cells need to be validated\u00a0<strong>according to the following rules</strong>:</p>\n<ol>\n<li>Each row\u00a0must contain the\u00a0digits\u00a0<code>1-9</code> without repetition.</li>\n<li>Each column must contain the digits\u00a0<code>1-9</code>\u00a0without repetition.</li>\n<li>Each of the nine\u00a0<code>3 x 3</code> sub-boxes of the grid must contain the digits\u00a0<code>1-9</code>\u00a0without repetition.</li>\n</ol>\n<p><strong>Note:</strong></p>\n<ul>\n<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>\n<li>Only the filled cells need to be validated according to the mentioned\u00a0rules.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\"/>\n<pre><strong>Input:</strong> board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>board.length == 9</code></li>\n<li><code>board[i].length == 9</code></li>\n<li><code>board[i][j]</code> is a digit <code>1-9</code> or <code>'.'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 37,
      "title": "Sudoku Solver",
      "title_slug": "sudoku-solver",
      "link": "https://leetcode.com/problems/sudoku-solver",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Backtracking",
        "Matrix"
      ],
      "question": "<div><p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n<p>A sudoku solution must satisfy <strong>all of the following rules</strong>:</p>\n<ol>\n<li>Each of the digits <code>1-9</code> must occur exactly once in each row.</li>\n<li>Each of the digits <code>1-9</code> must occur exactly once in each column.</li>\n<li>Each of the digits <code>1-9</code> must occur exactly once in each of the 9 <code>3x3</code> sub-boxes of the grid.</li>\n</ol>\n<p>The <code>'.'</code> character indicates empty cells.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png\" style=\"height:250px; width:250px\"/>\n<pre><strong>Input:</strong> board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n<strong>Output:</strong> [[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]]\n<strong>Explanation:</strong>\u00a0The input board is shown above and the only valid solution is shown below:\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\" style=\"height:250px; width:250px\"/>\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>board.length == 9</code></li>\n<li><code>board[i].length == 9</code></li>\n<li><code>board[i][j]</code> is a digit or <code>'.'</code>.</li>\n<li>It is <strong>guaranteed</strong> that the input board has only one solution.</li>\n</ul>\n</div>"
    },
    {
      "id": 38,
      "title": "Count and Say",
      "title_slug": "count-and-say",
      "link": "https://leetcode.com/problems/count-and-say",
      "difficulty": "Medium",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>The <strong>count-and-say</strong> sequence is a sequence of digit strings defined by the recursive formula:</p>\n<ul>\n<li><code>countAndSay(1) = \"1\"</code></li>\n<li><code>countAndSay(n)</code> is the way you would \"say\" the digit string from <code>countAndSay(n-1)</code>, which is then converted into a different digit string.</li>\n</ul>\n<p>To determine how you \"say\" a digit string, split it into the <strong>minimal</strong> number of substrings such that each substring contains exactly <strong>one</strong> unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.</p>\n<p>For example, the saying and conversion for digit string <code>\"3322251\"</code>:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/23/countandsay.jpg\" style=\"width: 581px; height: 172px;\"/>\n<p>Given a positive integer <code>n</code>, return <em>the </em><code>n<sup>th</sup></code><em> term of the <strong>count-and-say</strong> sequence</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> \"1\"\n<strong>Explanation:</strong> This is the base case.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4\n<strong>Output:</strong> \"1211\"\n<strong>Explanation:</strong>\ncountAndSay(1) = \"1\"\ncountAndSay(2) = say \"1\" = one 1 = \"11\"\ncountAndSay(3) = say \"11\" = two 1's = \"21\"\ncountAndSay(4) = say \"21\" = one 2 + one 1 = \"12\" + \"11\" = \"1211\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 30</code></li>\n</ul>\n</div>"
    },
    {
      "id": 39,
      "title": "Combination Sum",
      "title_slug": "combination-sum",
      "link": "https://leetcode.com/problems/combination-sum",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking"
      ],
      "question": "<div><p>Given an array of <strong>distinct</strong> integers <code>candidates</code> and a target integer <code>target</code>, return <em>a list of all <strong>unique combinations</strong> of </em><code>candidates</code><em> where the chosen numbers sum to </em><code>target</code><em>.</em> You may return the combinations in <strong>any order</strong>.</p>\n<p>The <strong>same</strong> number may be chosen from <code>candidates</code> an <strong>unlimited number of times</strong>. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>\n<p>The test cases are generated such that the number of unique combinations that sum up to <code>target</code> is less than <code>150</code> combinations for the given input.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,3,6,7], target = 7\n<strong>Output:</strong> [[2,2,3],[7]]\n<strong>Explanation:</strong>\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,3,5], target = 8\n<strong>Output:</strong> [[2,2,2,2],[2,3,3],[3,5]]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> candidates = [2], target = 1\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= candidates.length &lt;= 30</code></li>\n<li><code>2 &lt;= candidates[i] &lt;= 40</code></li>\n<li>All elements of <code>candidates</code> are <strong>distinct</strong>.</li>\n<li><code>1 &lt;= target &lt;= 40</code></li>\n</ul>\n</div>"
    },
    {
      "id": 40,
      "title": "Combination Sum II",
      "title_slug": "combination-sum-ii",
      "link": "https://leetcode.com/problems/combination-sum-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking"
      ],
      "question": "<div><p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code>\u00a0where the candidate numbers sum to <code>target</code>.</p>\n<p>Each number in <code>candidates</code>\u00a0may only be used <strong>once</strong> in the combination.</p>\n<p><strong>Note:</strong>\u00a0The solution set must not contain duplicate combinations.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> candidates = [10,1,2,7,6,1,5], target = 8\n<strong>Output:</strong> \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> candidates = [2,5,2,1,2], target = 5\n<strong>Output:</strong> \n[\n[1,2,2],\n[5]\n]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;=\u00a0candidates.length &lt;= 100</code></li>\n<li><code>1 &lt;=\u00a0candidates[i] &lt;= 50</code></li>\n<li><code>1 &lt;= target &lt;= 30</code></li>\n</ul>\n</div>"
    },
    {
      "id": 41,
      "title": "First Missing Positive",
      "title_slug": "first-missing-positive",
      "link": "https://leetcode.com/problems/first-missing-positive",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Hash Table"
      ],
      "question": "<div><p>Given an unsorted integer array <code>nums</code>, return the smallest missing positive integer.</p>\n<p>You must implement an algorithm that runs in <code>O(n)</code> time and uses constant extra space.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,0]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The numbers in the range [1,2] are all in the array.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,4,-1,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 1 is in the array but 2 is missing.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [7,8,9,11,12]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The smallest positive integer 1 is missing.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n</div>"
    },
    {
      "id": 42,
      "title": "Trapping Rain Water",
      "title_slug": "trapping-rain-water",
      "link": "https://leetcode.com/problems/trapping-rain-water",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack"
      ],
      "question": "<div><p>Given <code>n</code> non-negative integers representing an elevation map where the width of each bar is <code>1</code>, compute how much water it can trap after raining.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png\" style=\"width: 412px; height: 161px;\"/>\n<pre><strong>Input:</strong> height = [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> height = [4,2,0,3,2,5]\n<strong>Output:</strong> 9\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == height.length</code></li>\n<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n<li><code>0 &lt;= height[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 43,
      "title": "Multiply Strings",
      "title_slug": "multiply-strings",
      "link": "https://leetcode.com/problems/multiply-strings",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "String",
        "Simulation"
      ],
      "question": "<div><p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n<p><strong>Note:</strong>\u00a0You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n<li>Both <code>num1</code> and <code>num2</code>\u00a0do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n</div>"
    },
    {
      "id": 44,
      "title": "Wildcard Matching",
      "title_slug": "wildcard-matching",
      "link": "https://leetcode.com/problems/wildcard-matching",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming",
        "Greedy",
        "Recursion"
      ],
      "question": "<div><p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>'?'</code> and <code>'*'</code> where:</p>\n<ul>\n<li><code>'?'</code> Matches any single character.</li>\n<li><code>'*'</code> Matches any sequence of characters (including the empty sequence).</li>\n</ul>\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aa\", p = \"a\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \"a\" does not match the entire string \"aa\".\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"aa\", p = \"*\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\u00a0'*' matches any sequence.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"cb\", p = \"?a\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\u00a0'?' matches 'c', but the second letter is 'a', which does not match 'b'.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= s.length, p.length &lt;= 2000</code></li>\n<li><code>s</code> contains only lowercase English letters.</li>\n<li><code>p</code> contains only lowercase English letters, <code>'?'</code> or <code>'*'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 45,
      "title": "Jump Game II",
      "title_slug": "jump-game-ii",
      "link": "https://leetcode.com/problems/jump-game-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ],
      "question": "<div><p>You are given a <strong>0-indexed</strong> array of integers <code>nums</code> of length <code>n</code>. You are initially positioned at <code>nums[0]</code>.</p>\n<p>Each element <code>nums[i]</code> represents the maximum length of a forward jump from index <code>i</code>. In other words, if you are at <code>nums[i]</code>, you can jump to any <code>nums[i + j]</code> where:</p>\n<ul>\n<li><code>0 &lt;= j &lt;= nums[i]</code> and</li>\n<li><code>i + j &lt; n</code></li>\n</ul>\n<p>Return <em>the minimum number of jumps to reach </em><code>nums[n - 1]</code>. The test cases are generated such that you can reach <code>nums[n - 1]</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,0,1,4]\n<strong>Output:</strong> 2\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 46,
      "title": "Permutations",
      "title_slug": "permutations",
      "link": "https://leetcode.com/problems/permutations",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking"
      ],
      "question": "<div><p>Given an array <code>nums</code> of distinct integers, return <em>all the possible permutations</em>. You can return the answer in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1]\n<strong>Output:</strong> [[0,1],[1,0]]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 6</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 47,
      "title": "Permutations II",
      "title_slug": "permutations-ii",
      "link": "https://leetcode.com/problems/permutations-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking"
      ],
      "question": "<div><p>Given a collection of numbers, <code>nums</code>,\u00a0that might contain duplicates, return <em>all possible unique permutations <strong>in any order</strong>.</em></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,2]\n<strong>Output:</strong>\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 8</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n</div>"
    },
    {
      "id": 48,
      "title": "Rotate Image",
      "title_slug": "rotate-image",
      "link": "https://leetcode.com/problems/rotate-image",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Math",
        "Matrix"
      ],
      "question": "<div><p>You are given an <code>n x n</code> 2D <code>matrix</code> representing an image, rotate the image by <strong>90</strong> degrees (clockwise).</p>\n<p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg\" style=\"width: 500px; height: 188px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [[7,4,1],[8,5,2],[9,6,3]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/mat2.jpg\" style=\"width: 500px; height: 201px;\"/>\n<pre><strong>Input:</strong> matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\n<strong>Output:</strong> [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == matrix.length == matrix[i].length</code></li>\n<li><code>1 &lt;= n &lt;= 20</code></li>\n<li><code>-1000 &lt;= matrix[i][j] &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 49,
      "title": "Group Anagrams",
      "title_slug": "group-anagrams",
      "link": "https://leetcode.com/problems/group-anagrams",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "String",
        "Sorting"
      ],
      "question": "<div><p>Given an array of strings <code>strs</code>, group <strong>the anagrams</strong> together. You can return the answer in <strong>any order</strong>.</p>\n<p>An <strong>Anagram</strong> is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n<strong>Output:</strong> [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> strs = [\"\"]\n<strong>Output:</strong> [[\"\"]]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> strs = [\"a\"]\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= strs.length &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= strs[i].length &lt;= 100</code></li>\n<li><code>strs[i]</code> consists of lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 50,
      "title": "Pow(x, n)",
      "title_slug": "powx-n",
      "link": "https://leetcode.com/problems/powx-n",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "Recursion"
      ],
      "question": "<div><p>Implement <a href=\"http://www.cplusplus.com/reference/valarray/pow/\" target=\"_blank\">pow(x, n)</a>, which calculates <code>x</code> raised to the power <code>n</code> (i.e., <code>x<sup>n</sup></code>).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> x = 2.00000, n = 10\n<strong>Output:</strong> 1024.00000\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> x = 2.10000, n = 3\n<strong>Output:</strong> 9.26100\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> x = 2.00000, n = -2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-100.0 &lt; x &lt; 100.0</code></li>\n<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup>-1</code></li>\n<li><code>n</code> is an integer.</li>\n<li><code>-10<sup>4</sup> &lt;= x<sup>n</sup> &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 51,
      "title": "N-Queens",
      "title_slug": "n-queens",
      "link": "https://leetcode.com/problems/n-queens",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Backtracking"
      ],
      "question": "<div><p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n<p>Given an integer <code>n</code>, return <em>all distinct solutions to the <strong>n-queens puzzle</strong></em>. You may return the answer in <strong>any order</strong>.</p>\n<p>Each solution contains a distinct board configuration of the n-queens' placement, where <code>'Q'</code> and <code>'.'</code> both indicate a queen and an empty space, respectively.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\"/>\n<pre><strong>Input:</strong> n = 4\n<strong>Output:</strong> [[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]\n<strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle as shown above\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [[\"Q\"]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n</div>"
    },
    {
      "id": 52,
      "title": "N-Queens II",
      "title_slug": "n-queens-ii",
      "link": "https://leetcode.com/problems/n-queens-ii",
      "difficulty": "Hard",
      "similar_topics": [
        "Backtracking"
      ],
      "question": "<div><p>The <strong>n-queens</strong> puzzle is the problem of placing <code>n</code> queens on an <code>n x n</code> chessboard such that no two queens attack each other.</p>\n<p>Given an integer <code>n</code>, return <em>the number of distinct solutions to the\u00a0<strong>n-queens puzzle</strong></em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/queens.jpg\" style=\"width: 600px; height: 268px;\"/>\n<pre><strong>Input:</strong> n = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two distinct solutions to the 4-queens puzzle as shown.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 9</code></li>\n</ul>\n</div>"
    },
    {
      "id": 53,
      "title": "Maximum Subarray",
      "title_slug": "maximum-subarray",
      "link": "https://leetcode.com/problems/maximum-subarray",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p>\n<p>A <strong>subarray</strong> is a <strong>contiguous</strong> part of an array.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [5,4,-1,7,8]\n<strong>Output:</strong> 23\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p>\n</div>"
    },
    {
      "id": 54,
      "title": "Spiral Matrix",
      "title_slug": "spiral-matrix",
      "link": "https://leetcode.com/problems/spiral-matrix",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Matrix",
        "Simulation"
      ],
      "question": "<div><p>Given an <code>m x n</code> <code>matrix</code>, return <em>all elements of the</em> <code>matrix</code> <em>in spiral order</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral1.jpg\" style=\"width: 242px; height: 242px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiral.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n<strong>Output:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == matrix.length</code></li>\n<li><code>n == matrix[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 10</code></li>\n<li><code>-100 &lt;= matrix[i][j] &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 55,
      "title": "Jump Game",
      "title_slug": "jump-game",
      "link": "https://leetcode.com/problems/jump-game",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ],
      "question": "<div><p>You are given an integer array <code>nums</code>. You are initially positioned at the array's <strong>first index</strong>, and each element in the array represents your maximum jump length at that position.</p>\n<p>Return <code>true</code><em> if you can reach the last index, or </em><code>false</code><em> otherwise</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 56,
      "title": "Merge Intervals",
      "title_slug": "merge-intervals",
      "link": "https://leetcode.com/problems/merge-intervals",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Sorting"
      ],
      "question": "<div><p>Given an array\u00a0of <code>intervals</code>\u00a0where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, merge all overlapping intervals, and return <em>an array of the non-overlapping intervals that cover all the intervals in the input</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlap, merge them into [1,6].\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n<li><code>intervals[i].length == 2</code></li>\n<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 57,
      "title": "Insert Interval",
      "title_slug": "insert-interval",
      "link": "https://leetcode.com/problems/insert-interval",
      "difficulty": "Medium",
      "similar_topics": [
        "Array"
      ],
      "question": "<div><p>You are given an array of non-overlapping intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> represent the start and the end of the <code>i<sup>th</sup></code> interval and <code>intervals</code> is sorted in ascending order by <code>start<sub>i</sub></code>. You are also given an interval <code>newInterval = [start, end]</code> that represents the start and end of another interval.</p>\n<p>Insert <code>newInterval</code> into <code>intervals</code> such that <code>intervals</code> is still sorted in ascending order by <code>start<sub>i</sub></code> and <code>intervals</code> still does not have any overlapping intervals (merge overlapping intervals if necessary).</p>\n<p>Return <code>intervals</code><em> after the insertion</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n<li><code>intervals[i].length == 2</code></li>\n<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n<li><code>intervals</code> is sorted by <code>start<sub>i</sub></code> in <strong>ascending</strong> order.</li>\n<li><code>newInterval.length == 2</code></li>\n<li><code>0 &lt;= start &lt;= end &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 58,
      "title": "Length of Last Word",
      "title_slug": "length-of-last-word",
      "link": "https://leetcode.com/problems/length-of-last-word",
      "difficulty": "Easy",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>Given a string <code>s</code> consisting of words and spaces, return <em>the length of the <strong>last</strong> word in the string.</em></p>\n<p>A <strong>word</strong> is a maximal substring consisting of non-space characters only.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"Hello World\"\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The last word is \"World\" with length 5.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"   fly me   to   the moon  \"\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The last word is \"moon\" with length 4.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"luffy is still joyboy\"\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The last word is \"joyboy\" with length 6.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>s</code> consists of only English letters and spaces <code>' '</code>.</li>\n<li>There will be at least one word in <code>s</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 59,
      "title": "Spiral Matrix II",
      "title_slug": "spiral-matrix-ii",
      "link": "https://leetcode.com/problems/spiral-matrix-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Matrix",
        "Simulation"
      ],
      "question": "<div><p>Given a positive integer <code>n</code>, generate an <code>n x n</code> <code>matrix</code> filled with elements from <code>1</code> to <code>n<sup>2</sup></code> in spiral order.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg\" style=\"width: 242px; height: 242px;\"/>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 20</code></li>\n</ul>\n</div>"
    },
    {
      "id": 60,
      "title": "Permutation Sequence",
      "title_slug": "permutation-sequence",
      "link": "https://leetcode.com/problems/permutation-sequence",
      "difficulty": "Hard",
      "similar_topics": [
        "Math",
        "Recursion"
      ],
      "question": "<div><p>The set <code>[1, 2, 3, ...,\u00a0n]</code> contains a total of <code>n!</code> unique permutations.</p>\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <code>n = 3</code>:</p>\n<ol>\n<li><code>\"123\"</code></li>\n<li><code>\"132\"</code></li>\n<li><code>\"213\"</code></li>\n<li><code>\"231\"</code></li>\n<li><code>\"312\"</code></li>\n<li><code>\"321\"</code></li>\n</ol>\n<p>Given <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> permutation sequence.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> \"213\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> \"2314\"\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"123\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 9</code></li>\n<li><code>1 &lt;= k &lt;= n!</code></li>\n</ul>\n</div>"
    },
    {
      "id": 61,
      "title": "Rotate List",
      "title_slug": "rotate-list",
      "link": "https://leetcode.com/problems/rotate-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked\u00a0list, rotate the list to the right by <code>k</code> places.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/rotate1.jpg\" style=\"width: 450px; height: 191px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5], k = 2\n<strong>Output:</strong> [4,5,1,2,3]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/13/roate2.jpg\" style=\"width: 305px; height: 350px;\"/>\n<pre><strong>Input:</strong> head = [0,1,2], k = 4\n<strong>Output:</strong> [2,0,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[0, 500]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li><code>0 &lt;= k &lt;= 2 * 10<sup>9</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 62,
      "title": "Unique Paths",
      "title_slug": "unique-paths",
      "link": "https://leetcode.com/problems/unique-paths",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "Dynamic Programming",
        "Combinatorics"
      ],
      "question": "<div><p>There is a robot on an <code>m x n</code> grid. The robot is initially located at the <strong>top-left corner</strong> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m - 1][n - 1]</code>). The robot can only move either down or right at any point in time.</p>\n<p>Given the two integers <code>m</code> and <code>n</code>, return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n<p>The test cases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png\" style=\"width: 400px; height: 183px;\"/>\n<pre><strong>Input:</strong> m = 3, n = 7\n<strong>Output:</strong> 28\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= m, n &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 63,
      "title": "Unique Paths II",
      "title_slug": "unique-paths-ii",
      "link": "https://leetcode.com/problems/unique-paths-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ],
      "question": "<div><p>You are given an <code>m x n</code> integer array <code>grid</code>. There is a robot initially located at the <b>top-left corner</b> (i.e., <code>grid[0][0]</code>). The robot tries to move to the <strong>bottom-right corner</strong> (i.e., <code>grid[m-1][n-1]</code>). The robot can only move either down or right at any point in time.</p>\n<p>An obstacle and space are marked as <code>1</code> or <code>0</code> respectively in <code>grid</code>. A path that the robot takes cannot include <strong>any</strong> square that is an obstacle.</p>\n<p>Return <em>the number of possible unique paths that the robot can take to reach the bottom-right corner</em>.</p>\n<p>The testcases are generated so that the answer will be less than or equal to <code>2 * 10<sup>9</sup></code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot1.jpg\" style=\"width: 242px; height: 242px;\"/>\n<pre><strong>Input:</strong> obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/robot2.jpg\" style=\"width: 162px; height: 162px;\"/>\n<pre><strong>Input:</strong> obstacleGrid = [[0,1],[0,0]]\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == obstacleGrid.length</code></li>\n<li><code>n == obstacleGrid[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 100</code></li>\n<li><code>obstacleGrid[i][j]</code> is <code>0</code> or <code>1</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 64,
      "title": "Minimum Path Sum",
      "title_slug": "minimum-path-sum",
      "link": "https://leetcode.com/problems/minimum-path-sum",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Matrix"
      ],
      "question": "<div><p>Given a <code>m x n</code> <code>grid</code> filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.</p>\n<p><strong>Note:</strong> You can only move either down or right at any point in time.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/minpath.jpg\" style=\"width: 242px; height: 242px;\"/>\n<pre><strong>Input:</strong> grid = [[1,3,1],[1,5,1],[4,2,1]]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1 \u2192 3 \u2192 1 \u2192 1 \u2192 1 minimizes the sum.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> grid = [[1,2,3],[4,5,6]]\n<strong>Output:</strong> 12\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == grid.length</code></li>\n<li><code>n == grid[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 65,
      "title": "Valid Number",
      "title_slug": "valid-number",
      "link": "https://leetcode.com/problems/valid-number",
      "difficulty": "Hard",
      "similar_topics": [
        "String"
      ],
      "question": "<div><p>A <strong>valid number</strong> can be split up into these components (in order):</p>\n<ol>\n<li>A <strong>decimal number</strong> or an <strong>integer</strong>.</li>\n<li>(Optional) An <code>'e'</code> or <code>'E'</code>, followed by an <strong>integer</strong>.</li>\n</ol>\n<p>A <strong>decimal number</strong> can be split up into these components (in order):</p>\n<ol>\n<li>(Optional) A sign character (either <code>'+'</code> or <code>'-'</code>).</li>\n<li>One of the following formats:\n\t<ol>\n<li>One or more digits, followed by a dot <code>'.'</code>.</li>\n<li>One or more digits, followed by a dot <code>'.'</code>, followed by one or more digits.</li>\n<li>A dot <code>'.'</code>, followed by one or more digits.</li>\n</ol>\n</li>\n</ol>\n<p>An <strong>integer</strong> can be split up into these components (in order):</p>\n<ol>\n<li>(Optional) A sign character (either <code>'+'</code> or <code>'-'</code>).</li>\n<li>One or more digits.</li>\n</ol>\n<p>For example, all the following are valid numbers: <code>[\"2\", \"0089\", \"-0.1\", \"+3.14\", \"4.\", \"-.9\", \"2e10\", \"-90E3\", \"3e+7\", \"+6e-1\", \"53.5e93\", \"-123.456e789\"]</code>, while the following are not valid numbers: <code>[\"abc\", \"1a\", \"1e\", \"e3\", \"99e2.5\", \"--6\", \"-+3\", \"95a54e53\"]</code>.</p>\n<p>Given a string <code>s</code>, return <code>true</code><em> if </em><code>s</code><em> is a <strong>valid number</strong></em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"0\"\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"e\"\n<strong>Output:</strong> false\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \".\"\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 20</code></li>\n<li><code>s</code> consists of only English letters (both uppercase and lowercase), digits (<code>0-9</code>), plus <code>'+'</code>, minus <code>'-'</code>, or dot <code>'.'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 66,
      "title": "Plus One",
      "title_slug": "plus-one",
      "link": "https://leetcode.com/problems/plus-one",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Math"
      ],
      "question": "<div><p>You are given a <strong>large integer</strong> represented as an integer array <code>digits</code>, where each <code>digits[i]</code> is the <code>i<sup>th</sup></code> digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading <code>0</code>'s.</p>\n<p>Increment the large integer by one and return <em>the resulting array of digits</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> digits = [1,2,3]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong> The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> digits = [4,3,2,1]\n<strong>Output:</strong> [4,3,2,2]\n<strong>Explanation:</strong> The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> digits = [9]\n<strong>Output:</strong> [1,0]\n<strong>Explanation:</strong> The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= digits.length &lt;= 100</code></li>\n<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n<li><code>digits</code> does not contain any leading <code>0</code>'s.</li>\n</ul>\n</div>"
    },
    {
      "id": 67,
      "title": "Add Binary",
      "title_slug": "add-binary",
      "link": "https://leetcode.com/problems/add-binary",
      "difficulty": "Easy",
      "similar_topics": [
        "Math",
        "String",
        "Bit Manipulation",
        "Simulation"
      ],
      "question": "<div><p>Given two binary strings <code>a</code> and <code>b</code>, return <em>their sum as a binary string</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> a = \"11\", b = \"1\"\n<strong>Output:</strong> \"100\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> a = \"1010\", b = \"1011\"\n<strong>Output:</strong> \"10101\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>4</sup></code></li>\n<li><code>a</code> and <code>b</code> consist\u00a0only of <code>'0'</code> or <code>'1'</code> characters.</li>\n<li>Each string does not contain leading zeros except for the zero itself.</li>\n</ul>\n</div>"
    },
    {
      "id": 68,
      "title": "Text Justification",
      "title_slug": "text-justification",
      "link": "https://leetcode.com/problems/text-justification",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "String",
        "Simulation"
      ],
      "question": "<div><p>Given an array of strings <code>words</code> and a width <code>maxWidth</code>, format the text such that each line has exactly <code>maxWidth</code> characters and is fully (left and right) justified.</p>\n<p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>' '</code> when necessary so that each line has exactly <code>maxWidth</code> characters.</p>\n<p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p>\n<p>For the last line of text, it should be left-justified, and no extra space is inserted between words.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>A word is defined as a character sequence consisting of non-space characters only.</li>\n<li>Each word's length is guaranteed to be greater than <code>0</code> and not exceed <code>maxWidth</code>.</li>\n<li>The input array <code>words</code> contains at least one word.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16\n<strong>Output:</strong>\n[\n\u00a0 \u00a0\"This \u00a0 \u00a0is \u00a0 \u00a0an\",\n\u00a0 \u00a0\"example \u00a0of text\",\n\u00a0 \u00a0\"justification. \u00a0\"\n]</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> words = [\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"], maxWidth = 16\n<strong>Output:</strong>\n[\n\u00a0 \"What \u00a0 must \u00a0 be\",\n\u00a0 \"acknowledgment \u00a0\",\n\u00a0 \"shall be \u00a0 \u00a0 \u00a0 \u00a0\"\n]\n<strong>Explanation:</strong> Note that the last line is \"shall be    \" instead of \"shall     be\", because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified because it contains only one word.</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20\n<strong>Output:</strong>\n[\n\u00a0 \"Science \u00a0is \u00a0what we\",\n  \"understand \u00a0 \u00a0 \u00a0well\",\n\u00a0 \"enough to explain to\",\n\u00a0 \"a \u00a0computer. \u00a0Art is\",\n\u00a0 \"everything \u00a0else \u00a0we\",\n\u00a0 \"do \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"\n]</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= words.length &lt;= 300</code></li>\n<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n<li><code>words[i]</code> consists of only English letters and symbols.</li>\n<li><code>1 &lt;= maxWidth &lt;= 100</code></li>\n<li><code>words[i].length &lt;= maxWidth</code></li>\n</ul>\n</div>"
    },
    {
      "id": 69,
      "title": "Sqrt(x)",
      "title_slug": "sqrtx",
      "link": "https://leetcode.com/problems/sqrtx",
      "difficulty": "Easy",
      "similar_topics": [
        "Math",
        "Binary Search"
      ],
      "question": "<div><p>Given a non-negative integer <code>x</code>, return <em>the square root of </em><code>x</code><em> rounded down to the nearest integer</em>. The returned integer should be <strong>non-negative</strong> as well.</p>\n<p>You <strong>must not use</strong> any built-in exponent function or operator.</p>\n<ul>\n<li>For example, do not use <code>pow(x, 0.5)</code> in c++ or <code>x ** 0.5</code> in python.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> x = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 4 is 2, so we return 2.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> x = 8\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n</div>"
    },
    {
      "id": 70,
      "title": "Climbing Stairs",
      "title_slug": "climbing-stairs",
      "link": "https://leetcode.com/problems/climbing-stairs",
      "difficulty": "Easy",
      "similar_topics": [
        "Math",
        "Dynamic Programming",
        "Memoization"
      ],
      "question": "<div><p>You are climbing a staircase. It takes <code>n</code> steps to reach the top.</p>\n<p>Each time you can either climb <code>1</code> or <code>2</code> steps. In how many distinct ways can you climb to the top?</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 45</code></li>\n</ul>\n</div>"
    },
    {
      "id": 71,
      "title": "Simplify Path",
      "title_slug": "simplify-path",
      "link": "https://leetcode.com/problems/simplify-path",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Stack"
      ],
      "question": "<div><p>Given a string <code>path</code>, which is an <strong>absolute path</strong> (starting with a slash <code>'/'</code>) to a file or directory in a Unix-style file system, convert it to the simplified <strong>canonical path</strong>.</p>\n<p>In a Unix-style file system, a period <code>'.'</code> refers to the current directory, a double period <code>'..'</code> refers to the directory up a level, and any multiple consecutive slashes (i.e. <code>'//'</code>) are treated as a single slash <code>'/'</code>. For this problem, any other format of periods such as <code>'...'</code> are treated as file/directory names.</p>\n<p>The <strong>canonical path</strong> should have the following format:</p>\n<ul>\n<li>The path starts with a single slash <code>'/'</code>.</li>\n<li>Any two directories are separated by a single slash <code>'/'</code>.</li>\n<li>The path does not end with a trailing <code>'/'</code>.</li>\n<li>The path only contains the directories on the path from the root directory to the target file or directory (i.e., no period <code>'.'</code> or double period <code>'..'</code>)</li>\n</ul>\n<p>Return <em>the simplified <strong>canonical path</strong></em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> path = \"/home/\"\n<strong>Output:</strong> \"/home\"\n<strong>Explanation:</strong> Note that there is no trailing slash after the last directory name.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> path = \"/../\"\n<strong>Output:</strong> \"/\"\n<strong>Explanation:</strong> Going one level up from the root directory is a no-op, as the root level is the highest level you can go.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> path = \"/home//foo/\"\n<strong>Output:</strong> \"/home/foo\"\n<strong>Explanation:</strong> In the canonical path, multiple consecutive slashes are replaced by a single one.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= path.length &lt;= 3000</code></li>\n<li><code>path</code> consists of English letters, digits, period <code>'.'</code>, slash <code>'/'</code> or <code>'_'</code>.</li>\n<li><code>path</code> is a valid absolute Unix path.</li>\n</ul>\n</div>"
    },
    {
      "id": 72,
      "title": "Edit Distance",
      "title_slug": "edit-distance",
      "link": "https://leetcode.com/problems/edit-distance",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of operations required to convert <code>word1</code> to <code>word2</code></em>.</p>\n<p>You have the following three operations permitted on a word:</p>\n<ul>\n<li>Insert a character</li>\n<li>Delete a character</li>\n<li>Replace a character</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> word1 = \"horse\", word2 = \"ros\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nhorse -&gt; rorse (replace 'h' with 'r')\nrorse -&gt; rose (remove 'r')\nrose -&gt; ros (remove 'e')\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> word1 = \"intention\", word2 = \"execution\"\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nintention -&gt; inention (remove 't')\ninention -&gt; enention (replace 'i' with 'e')\nenention -&gt; exention (replace 'n' with 'x')\nexention -&gt; exection (replace 'n' with 'c')\nexection -&gt; execution (insert 'u')\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= word1.length, word2.length &lt;= 500</code></li>\n<li><code>word1</code> and <code>word2</code> consist of lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 73,
      "title": "Set Matrix Zeroes",
      "title_slug": "set-matrix-zeroes",
      "link": "https://leetcode.com/problems/set-matrix-zeroes",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Matrix"
      ],
      "question": "<div><p>Given an <code>m x n</code> integer matrix <code>matrix</code>, if an element is <code>0</code>, set its entire row and column to <code>0</code>'s.</p>\n<p>You must do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in place</a>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg\" style=\"width: 450px; height: 169px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> [[1,0,1],[0,0,0],[1,0,1]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg\" style=\"width: 450px; height: 137px;\"/>\n<pre><strong>Input:</strong> matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n<strong>Output:</strong> [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == matrix.length</code></li>\n<li><code>n == matrix[0].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>-2<sup>31</sup> &lt;= matrix[i][j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong></p>\n<ul>\n<li>A straightforward solution using <code>O(mn)</code> space is probably a bad idea.</li>\n<li>A simple improvement uses <code>O(m + n)</code> space, but still not the best solution.</li>\n<li>Could you devise a constant space solution?</li>\n</ul>\n</div>"
    },
    {
      "id": 74,
      "title": "Search a 2D Matrix",
      "title_slug": "search-in-2d-matrix",
      "link": "https://leetcode.com/problems/search-a-2d-matrix",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search",
        "Matrix"
      ],
      "question": "<div><p>Write an efficient algorithm that searches for a value <code>target</code> in an <code>m x n</code> integer matrix <code>matrix</code>. This matrix has the following properties:</p>\n<ul>\n<li>Integers in each row are sorted from left to right.</li>\n<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/mat2.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == matrix.length</code></li>\n<li><code>n == matrix[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 100</code></li>\n<li><code>-10<sup>4</sup> &lt;= matrix[i][j], target &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 75,
      "title": "Sort Colors",
      "title_slug": "sort-colors",
      "link": "https://leetcode.com/problems/sort-colors",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Sorting"
      ],
      "question": "<div><p>Given an array <code>nums</code> with <code>n</code> objects colored red, white, or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a> </strong>so that objects of the same color are adjacent, with the colors in the order red, white, and blue.</p>\n<p>We will use the integers <code>0</code>, <code>1</code>, and <code>2</code> to represent the color red, white, and blue, respectively.</p>\n<p>You must solve this problem without using the library's sort function.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,0,2,1,1,0]\n<strong>Output:</strong> [0,0,1,1,2,2]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,0,1]\n<strong>Output:</strong> [0,1,2]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == nums.length</code></li>\n<li><code>1 &lt;= n &lt;= 300</code></li>\n<li><code>nums[i]</code> is either <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong>\u00a0Could you come up with a one-pass algorithm using only\u00a0constant extra space?</p>\n</div>"
    },
    {
      "id": 76,
      "title": "Minimum Window Substring",
      "title_slug": "minimum-window-substring",
      "link": "https://leetcode.com/problems/minimum-window-substring",
      "difficulty": "Hard",
      "similar_topics": [
        "Hash Table",
        "String",
        "Sliding Window"
      ],
      "question": "<div><p>Given two strings <code>s</code> and <code>t</code> of lengths <code>m</code> and <code>n</code> respectively, return <em>the <strong>minimum window substring</strong> of </em><code>s</code><em> such that every character in </em><code>t</code><em> (<strong>including duplicates</strong>) is included in the window. If there is no such substring</em><em>, return the empty string </em><code>\"\"</code><em>.</em></p>\n<p>The testcases will be generated such that the answer is <strong>unique</strong>.</p>\n<p>A <strong>substring</strong> is a contiguous sequence of characters within the string.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"ADOBECODEBANC\", t = \"ABC\"\n<strong>Output:</strong> \"BANC\"\n<strong>Explanation:</strong> The minimum window substring \"BANC\" includes 'A', 'B', and 'C' from string t.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\", t = \"a\"\n<strong>Output:</strong> \"a\"\n<strong>Explanation:</strong> The entire string s is the minimum window.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"a\", t = \"aa\"\n<strong>Output:</strong> \"\"\n<strong>Explanation:</strong> Both 'a's from t must be included in the window.\nSince the largest window of s only has one 'a', return empty string.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == s.length</code></li>\n<li><code>n == t.length</code></li>\n<li><code>1 &lt;= m, n\u00a0&lt;= 10<sup>5</sup></code></li>\n<li><code>s</code> and <code>t</code> consist of uppercase and lowercase English letters.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Could you find an algorithm that runs in <code>O(m + n)</code> time?</p>\n</div>"
    },
    {
      "id": 77,
      "title": "Combinations",
      "title_slug": "combinations",
      "link": "https://leetcode.com/problems/combinations",
      "difficulty": "Medium",
      "similar_topics": [
        "Backtracking"
      ],
      "question": "<div><p>Given two integers <code>n</code> and <code>k</code>, return <em>all possible combinations of</em> <code>k</code> <em>numbers chosen from the range</em> <code>[1, n]</code>.</p>\n<p>You may return the answer in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 2\n<strong>Output:</strong> [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]\n<strong>Explanation:</strong> There are 4 choose 2 = 6 total combinations.\nNote that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1, k = 1\n<strong>Output:</strong> [[1]]\n<strong>Explanation:</strong> There is 1 choose 1 = 1 total combination.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 20</code></li>\n<li><code>1 &lt;= k &lt;= n</code></li>\n</ul>\n</div>"
    },
    {
      "id": 78,
      "title": "Subsets",
      "title_slug": "subsets",
      "link": "https://leetcode.com/problems/subsets",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking",
        "Bit Manipulation"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> of <strong>unique</strong> elements, return <em>all possible subsets (the power set)</em>.</p>\n<p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [[],[0]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n<li>All the numbers of\u00a0<code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 79,
      "title": "Word Search",
      "title_slug": "word-search",
      "link": "https://leetcode.com/problems/word-search",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking",
        "Matrix"
      ],
      "question": "<div><p>Given an <code>m x n</code> grid of characters <code>board</code> and a string <code>word</code>, return <code>true</code> <em>if</em> <code>word</code> <em>exists in the grid</em>.</p>\n<p>The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word2.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/word-1.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/15/word3.jpg\" style=\"width: 322px; height: 242px;\"/>\n<pre><strong>Input:</strong> board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == board.length</code></li>\n<li><code>n = board[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 6</code></li>\n<li><code>1 &lt;= word.length &lt;= 15</code></li>\n<li><code>board</code> and <code>word</code> consists of only lowercase and uppercase English letters.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Could you use search pruning to make your solution faster with a larger <code>board</code>?</p>\n</div>"
    },
    {
      "id": 80,
      "title": "Remove Duplicates from Sorted Array II",
      "title_slug": "remove-duplicates-from-sorted-array-ii",
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> sorted in <strong>non-decreasing order</strong>, remove some duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that each unique element appears <strong>at most twice</strong>. The <strong>relative order</strong> of the elements should be kept the <strong>same</strong>.</p>\n<p>Since it is impossible to change the length of the array in some languages, you must instead have the result be placed in the <strong>first part</strong> of the array <code>nums</code>. More formally, if there are <code>k</code> elements after removing the duplicates, then the first <code>k</code> elements of <code>nums</code>\u00a0should hold the final result. It does not matter what you leave beyond the first\u00a0<code>k</code>\u00a0elements.</p>\n<p>Return <code>k</code><em> after placing the final result in the first </em><code>k</code><em> slots of </em><code>nums</code>.</p>\n<p>Do <strong>not</strong> allocate extra space for another array. You must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n<p><strong>Custom Judge:</strong></p>\n<p>The judge will test your solution with the following code:</p>\n<pre>int[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i &lt; k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n</pre>\n<p>If all assertions pass, then your solution will be <strong>accepted</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1,2,2,3]\n<strong>Output:</strong> 5, nums = [1,1,2,2,3,_]\n<strong>Explanation:</strong> Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,0,1,1,1,1,2,3,3]\n<strong>Output:</strong> 7, nums = [0,0,1,1,2,3,3,_,_]\n<strong>Explanation:</strong> Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code> is sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n</div>"
    },
    {
      "id": 81,
      "title": "Search in Rotated Sorted Array II",
      "title_slug": "search-in-rotated-sorted-array-ii",
      "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>There is an integer array <code>nums</code> sorted in non-decreasing order (not necessarily with <strong>distinct</strong> values).</p>\n<p>Before being passed to your function, <code>nums</code> is <strong>rotated</strong> at an unknown pivot index <code>k</code> (<code>0 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,4,4,5,6,6,7]</code> might be rotated at pivot index <code>5</code> and become <code>[4,5,6,6,7,0,1,2,4,4]</code>.</p>\n<p>Given the array <code>nums</code> <strong>after</strong> the rotation and an integer <code>target</code>, return <code>true</code><em> if </em><code>target</code><em> is in </em><code>nums</code><em>, or </em><code>false</code><em> if it is not in </em><code>nums</code><em>.</em></p>\n<p>You must decrease the overall operation steps as much as possible.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 0\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 3\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code> is guaranteed to be rotated at some pivot.</li>\n<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> This problem is similar to\u00a0<a href=\"/problems/search-in-rotated-sorted-array/description/\" target=\"_blank\">Search in Rotated Sorted Array</a>, but\u00a0<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n</div>"
    },
    {
      "id": 82,
      "title": "Remove Duplicates from Sorted List II",
      "title_slug": "remove-duplicates-from-sorted-list-ii",
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the <code>head</code> of a sorted linked list, <em>delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist1.jpg\" style=\"width: 500px; height: 142px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,3,4,4,5]\n<strong>Output:</strong> [1,2,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/linkedlist2.jpg\" style=\"width: 500px; height: 205px;\"/>\n<pre><strong>Input:</strong> head = [1,1,1,2,3]\n<strong>Output:</strong> [2,3]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li>\n</ul>\n</div>"
    },
    {
      "id": 83,
      "title": "Remove Duplicates from Sorted List",
      "title_slug": "remove-duplicates-from-sorted-list",
      "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list",
      "difficulty": "Easy",
      "similar_topics": [
        "Linked List"
      ],
      "question": "<div><p>Given the <code>head</code> of a sorted linked list, <em>delete all duplicates such that each element appears only once</em>. Return <em>the linked list <strong>sorted</strong> as well</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/list1.jpg\" style=\"width: 302px; height: 242px;\"/>\n<pre><strong>Input:</strong> head = [1,1,2]\n<strong>Output:</strong> [1,2]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/list2.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,1,2,3,3]\n<strong>Output:</strong> [1,2,3]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[0, 300]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li>The list is guaranteed to be <strong>sorted</strong> in ascending order.</li>\n</ul>\n</div>"
    },
    {
      "id": 84,
      "title": "Largest Rectangle in Histogram",
      "title_slug": "largest-rectangle-in-histogram",
      "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Stack",
        "Monotonic Stack"
      ],
      "question": "<div><p>Given an array of integers <code>heights</code> representing the histogram's bar height where the width of each bar is <code>1</code>, return <em>the area of the largest rectangle in the histogram</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg\" style=\"width: 522px; height: 242px;\"/>\n<pre><strong>Input:</strong> heights = [2,1,5,6,2,3]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The above is a histogram where width of each bar is 1.\nThe largest rectangle is shown in the red area, which has an area = 10 units.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg\" style=\"width: 202px; height: 362px;\"/>\n<pre><strong>Input:</strong> heights = [2,4]\n<strong>Output:</strong> 4\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= heights[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 85,
      "title": "Maximal Rectangle",
      "title_slug": "maximal-rectangle",
      "link": "https://leetcode.com/problems/maximal-rectangle",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Matrix",
        "Monotonic Stack"
      ],
      "question": "<div><p>Given a <code>rows x cols</code>\u00a0binary <code>matrix</code> filled with <code>0</code>'s and <code>1</code>'s, find the largest rectangle containing only <code>1</code>'s and return <em>its area</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/maximal.jpg\" style=\"width: 402px; height: 322px;\"/>\n<pre><strong>Input:</strong> matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The maximal rectangle is shown in the above picture.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> matrix = [[\"0\"]]\n<strong>Output:</strong> 0\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> matrix = [[\"1\"]]\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>rows == matrix.length</code></li>\n<li><code>cols == matrix[i].length</code></li>\n<li><code>1 &lt;= row, cols &lt;= 200</code></li>\n<li><code>matrix[i][j]</code> is <code>'0'</code> or <code>'1'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 86,
      "title": "Partition List",
      "title_slug": "partition-list",
      "link": "https://leetcode.com/problems/partition-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked list and a value <code>x</code>, partition it such that all nodes <strong>less than</strong> <code>x</code> come before nodes <strong>greater than or equal</strong> to <code>x</code>.</p>\n<p>You should <strong>preserve</strong> the original relative order of the nodes in each of the two partitions.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/04/partition.jpg\" style=\"width: 662px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,4,3,2,5,2], x = 3\n<strong>Output:</strong> [1,2,2,4,3,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> head = [2,1], x = 2\n<strong>Output:</strong> [1,2]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[0, 200]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n<li><code>-200 &lt;= x &lt;= 200</code></li>\n</ul>\n</div>"
    },
    {
      "id": 87,
      "title": "Scramble String",
      "title_slug": "scramble-string",
      "link": "https://leetcode.com/problems/scramble-string",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>We can scramble a string s to get a string t using the following algorithm:</p>\n<ol>\n<li>If the length of the string is 1, stop.</li>\n<li>If the length of the string is &gt; 1, do the following:\n\t<ul>\n<li>Split the string into two non-empty substrings at a random index, i.e., if the string is <code>s</code>, divide it to <code>x</code> and <code>y</code> where <code>s = x + y</code>.</li>\n<li><strong>Randomly</strong>\u00a0decide to swap the two substrings or to keep them in the same order. i.e., after this step, <code>s</code> may become <code>s = x + y</code> or <code>s = y + x</code>.</li>\n<li>Apply step 1 recursively on each of the two substrings <code>x</code> and <code>y</code>.</li>\n</ul>\n</li>\n</ol>\n<p>Given two strings <code>s1</code> and <code>s2</code> of <strong>the same length</strong>, return <code>true</code> if <code>s2</code> is a scrambled string of <code>s1</code>, otherwise, return <code>false</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s1 = \"great\", s2 = \"rgeat\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One possible scenario applied on s1 is:\n\"great\" --&gt; \"gr/eat\" // divide at random index.\n\"gr/eat\" --&gt; \"gr/eat\" // random decision is not to swap the two substrings and keep them in order.\n\"gr/eat\" --&gt; \"g/r / e/at\" // apply the same algorithm recursively on both substrings. divide at random index each of them.\n\"g/r / e/at\" --&gt; \"r/g / e/at\" // random decision was to swap the first substring and to keep the second substring in the same order.\n\"r/g / e/at\" --&gt; \"r/g / e/ a/t\" // again apply the algorithm recursively, divide \"at\" to \"a/t\".\n\"r/g / e/ a/t\" --&gt; \"r/g / e/ a/t\" // random decision is to keep both substrings in the same order.\nThe algorithm stops now, and the result string is \"rgeat\" which is s2.\nAs one possible scenario led s1 to be scrambled to s2, we return true.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s1 = \"abcde\", s2 = \"caebd\"\n<strong>Output:</strong> false\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s1 = \"a\", s2 = \"a\"\n<strong>Output:</strong> true\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>s1.length == s2.length</code></li>\n<li><code>1 &lt;= s1.length &lt;= 30</code></li>\n<li><code>s1</code> and <code>s2</code> consist of lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 88,
      "title": "Merge Sorted Array",
      "title_slug": "merge-sorted-arrays",
      "link": "https://leetcode.com/problems/merge-sorted-array",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Sorting"
      ],
      "question": "<div><p>You are given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in <strong>non-decreasing order</strong>, and two integers <code>m</code> and <code>n</code>, representing the number of elements in <code>nums1</code> and <code>nums2</code> respectively.</p>\n<p><strong>Merge</strong> <code>nums1</code> and <code>nums2</code> into a single array sorted in <strong>non-decreasing order</strong>.</p>\n<p>The final sorted array should not be returned by the function, but instead be <em>stored inside the array </em><code>nums1</code>. To accommodate this, <code>nums1</code> has a length of <code>m + n</code>, where the first <code>m</code> elements denote the elements that should be merged, and the last <code>n</code> elements are set to <code>0</code> and should be ignored. <code>nums2</code> has a length of <code>n</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n<strong>Output:</strong> [1,2,2,3,5,6]\n<strong>Explanation:</strong> The arrays we are merging are [1,2,3] and [2,5,6].\nThe result of the merge is [<u>1</u>,<u>2</u>,2,<u>3</u>,5,6] with the underlined elements coming from nums1.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums1 = [1], m = 1, nums2 = [], n = 0\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The arrays we are merging are [1] and [].\nThe result of the merge is [1].\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums1 = [0], m = 0, nums2 = [1], n = 1\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> The arrays we are merging are [] and [1].\nThe result of the merge is [1].\nNote that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>nums1.length == m + n</code></li>\n<li><code>nums2.length == n</code></li>\n<li><code>0 &lt;= m, n &lt;= 200</code></li>\n<li><code>1 &lt;= m + n &lt;= 200</code></li>\n<li><code>-10<sup>9</sup> &lt;= nums1[i], nums2[j] &lt;= 10<sup>9</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up: </strong>Can you come up with an algorithm that runs in <code>O(m + n)</code> time?</p>\n</div>"
    },
    {
      "id": 89,
      "title": "Gray Code",
      "title_slug": "gray-code",
      "link": "https://leetcode.com/problems/gray-code",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "Backtracking",
        "Bit Manipulation"
      ],
      "question": "<div><p>An <strong>n-bit gray code sequence</strong> is a sequence of <code>2<sup>n</sup></code> integers where:</p>\n<ul>\n<li>Every integer is in the <strong>inclusive</strong> range <code>[0, 2<sup>n</sup> - 1]</code>,</li>\n<li>The first integer is <code>0</code>,</li>\n<li>An integer appears <strong>no more than once</strong> in the sequence,</li>\n<li>The binary representation of every pair of <strong>adjacent</strong> integers differs by <strong>exactly one bit</strong>, and</li>\n<li>The binary representation of the <strong>first</strong> and <strong>last</strong> integers differs by <strong>exactly one bit</strong>.</li>\n</ul>\n<p>Given an integer <code>n</code>, return <em>any valid <strong>n-bit gray code sequence</strong></em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 2\n<strong>Output:</strong> [0,1,3,2]\n<strong>Explanation:</strong>\nThe binary representation of [0,1,3,2] is [00,01,11,10].\n- 0<u>0</u> and 0<u>1</u> differ by one bit\n- <u>0</u>1 and <u>1</u>1 differ by one bit\n- 1<u>1</u> and 1<u>0</u> differ by one bit\n- <u>1</u>0 and <u>0</u>0 differ by one bit\n[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].\n- <u>0</u>0 and <u>1</u>0 differ by one bit\n- 1<u>0</u> and 1<u>1</u> differ by one bit\n- <u>1</u>1 and <u>0</u>1 differ by one bit\n- 0<u>1</u> and 0<u>0</u> differ by one bit\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [0,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 16</code></li>\n</ul>\n</div>"
    },
    {
      "id": 90,
      "title": "Subsets II",
      "title_slug": "subsets-ii",
      "link": "https://leetcode.com/problems/subsets-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Backtracking",
        "Bit Manipulation"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> that may contain duplicates, return <em>all possible subsets (the power set)</em>.</p>\n<p>The solution set <strong>must not</strong> contain duplicate subsets. Return the solution in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,2]\n<strong>Output:</strong> [[],[1],[1,2],[1,2,2],[2],[2,2]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0]\n<strong>Output:</strong> [[],[0]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10</code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n</ul>\n</div>"
    },
    {
      "id": 91,
      "title": "Decode Ways",
      "title_slug": "decode-ways",
      "link": "https://leetcode.com/problems/decode-ways",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>A message containing letters from <code>A-Z</code> can be <strong>encoded</strong> into numbers using the following mapping:</p>\n<pre>'A' -&gt; \"1\"\n'B' -&gt; \"2\"\n...\n'Z' -&gt; \"26\"\n</pre>\n<p>To <strong>decode</strong> an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, <code>\"11106\"</code> can be mapped into:</p>\n<ul>\n<li><code>\"AAJF\"</code> with the grouping <code>(1 1 10 6)</code></li>\n<li><code>\"KJF\"</code> with the grouping <code>(11 10 6)</code></li>\n</ul>\n<p>Note that the grouping <code>(1 11 06)</code> is invalid because <code>\"06\"</code> cannot be mapped into <code>'F'</code> since <code>\"6\"</code> is different from <code>\"06\"</code>.</p>\n<p>Given a string <code>s</code> containing only digits, return <em>the <strong>number</strong> of ways to <strong>decode</strong> it</em>.</p>\n<p>The test cases are generated so that the answer fits in a <strong>32-bit</strong> integer.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"12\"\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"226\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"06\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\").\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 100</code></li>\n<li><code>s</code> contains only digits and may contain leading zero(s).</li>\n</ul>\n</div>"
    },
    {
      "id": 92,
      "title": "Reverse Linked List II",
      "title_slug": "reverse-linked-list-ii",
      "link": "https://leetcode.com/problems/reverse-linked-list-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List"
      ],
      "question": "<div><p>Given the <code>head</code> of a singly linked list and two integers <code>left</code> and <code>right</code> where <code>left &lt;= right</code>, reverse the nodes of the list from position <code>left</code> to position <code>right</code>, and return <em>the reversed list</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/rev2ex2.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5], left = 2, right = 4\n<strong>Output:</strong> [1,4,3,2,5]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> head = [5], left = 1, right = 1\n<strong>Output:</strong> [5]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is <code>n</code>.</li>\n<li><code>1 &lt;= n &lt;= 500</code></li>\n<li><code>-500 &lt;= Node.val &lt;= 500</code></li>\n<li><code>1 &lt;= left &lt;= right &lt;= n</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Could you do it in one pass?</div>"
    },
    {
      "id": 93,
      "title": "Restore IP Addresses",
      "title_slug": "restore-ip-addresses",
      "link": "https://leetcode.com/problems/restore-ip-addresses",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Backtracking"
      ],
      "question": "<div><p>A <strong>valid IP address</strong> consists of exactly four integers separated by single dots. Each integer is between <code>0</code> and <code>255</code> (<strong>inclusive</strong>) and cannot have leading zeros.</p>\n<ul>\n<li>For example, <code>\"0.1.2.201\"</code> and <code>\"192.168.1.1\"</code> are <strong>valid</strong> IP addresses, but <code>\"0.011.255.245\"</code>, <code>\"192.168.1.312\"</code> and <code>\"192.168@1.1\"</code> are <strong>invalid</strong> IP addresses.</li>\n</ul>\n<p>Given a string <code>s</code> containing only digits, return <em>all possible valid IP addresses that can be formed by inserting dots into </em><code>s</code>. You are <strong>not</strong> allowed to reorder or remove any digits in <code>s</code>. You may return the valid IP addresses in <strong>any</strong> order.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"25525511135\"\n<strong>Output:</strong> [\"255.255.11.135\",\"255.255.111.35\"]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"0000\"\n<strong>Output:</strong> [\"0.0.0.0\"]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"101023\"\n<strong>Output:</strong> [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 20</code></li>\n<li><code>s</code> consists of digits only.</li>\n</ul>\n</div>"
    },
    {
      "id": 94,
      "title": "Binary Tree Inorder Traversal",
      "title_slug": "binary-tree-inorder-traversal",
      "link": "https://leetcode.com/problems/binary-tree-inorder-traversal",
      "difficulty": "Easy",
      "similar_topics": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>the inorder traversal of its nodes' values</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 125px; height: 200px;\"/>\n<pre><strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,3,2]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</div>"
    },
    {
      "id": 95,
      "title": "Unique Binary Search Trees II",
      "title_slug": "unique-binary-search-trees-ii",
      "link": "https://leetcode.com/problems/unique-binary-search-trees-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Dynamic Programming",
        "Backtracking",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given an integer <code>n</code>, return <em>all the structurally unique <strong>BST'</strong>s (binary search trees), which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>. Return the answer in <strong>any order</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" style=\"width: 600px; height: 148px;\"/>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> [[1]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 8</code></li>\n</ul>\n</div>"
    },
    {
      "id": 96,
      "title": "Unique Binary Search Trees",
      "title_slug": "unique-binary-search-trees",
      "link": "https://leetcode.com/problems/unique-binary-search-trees",
      "difficulty": "Medium",
      "similar_topics": [
        "Math",
        "Dynamic Programming",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given an integer <code>n</code>, return <em>the number of structurally unique <strong>BST'</strong>s (binary search trees) which has exactly </em><code>n</code><em> nodes of unique values from</em> <code>1</code> <em>to</em> <code>n</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" style=\"width: 600px; height: 148px;\"/>\n<pre><strong>Input:</strong> n = 3\n<strong>Output:</strong> 5\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= n &lt;= 19</code></li>\n</ul>\n</div>"
    },
    {
      "id": 97,
      "title": "Interleaving String",
      "title_slug": "interleaving-strings",
      "link": "https://leetcode.com/problems/interleaving-string",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given strings <code>s1</code>, <code>s2</code>, and <code>s3</code>, find whether <code>s3</code> is formed by an <strong>interleaving</strong> of <code>s1</code> and <code>s2</code>.</p>\n<p>An <strong>interleaving</strong> of two strings <code>s</code> and <code>t</code> is a configuration where <code>s</code> and <code>t</code> are divided into <code>n</code> and <code>m</code> <strong>non-empty</strong> substrings respectively, such that:</p>\n<ul>\n<li><code>s = s<sub>1</sub> + s<sub>2</sub> + ... + s<sub>n</sub></code></li>\n<li><code>t = t<sub>1</sub> + t<sub>2</sub> + ... + t<sub>m</sub></code></li>\n<li><code>|n - m| &lt;= 1</code></li>\n<li>The <strong>interleaving</strong> is <code>s<sub>1</sub> + t<sub>1</sub> + s<sub>2</sub> + t<sub>2</sub> + s<sub>3</sub> + t<sub>3</sub> + ...</code> or <code>t<sub>1</sub> + s<sub>1</sub> + t<sub>2</sub> + s<sub>2</sub> + t<sub>3</sub> + s<sub>3</sub> + ...</code></li>\n</ul>\n<p><strong>Note:</strong> <code>a + b</code> is the concatenation of strings <code>a</code> and <code>b</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/02/interleave.jpg\" style=\"width: 561px; height: 203px;\"/>\n<pre><strong>Input:</strong> s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> One way to obtain s3 is:\nSplit s1 into s1 = \"aa\" + \"bc\" + \"c\", and s2 into s2 = \"dbbc\" + \"a\".\nInterleaving the two splits, we get \"aa\" + \"dbbc\" + \"bc\" + \"a\" + \"c\" = \"aadbbcbcac\".\nSince s3 can be obtained by interleaving s1 and s2, we return true.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Notice how it is impossible to interleave s2 with any other string to obtain s3.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s1 = \"\", s2 = \"\", s3 = \"\"\n<strong>Output:</strong> true\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= s1.length, s2.length &lt;= 100</code></li>\n<li><code>0 &lt;= s3.length &lt;= 200</code></li>\n<li><code>s1</code>, <code>s2</code>, and <code>s3</code> consist of lowercase English letters.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Could you solve it using only <code>O(s2.length)</code> additional memory space?</p>\n</div>"
    },
    {
      "id": 98,
      "title": "Validate Binary Search Tree",
      "title_slug": "validate-binary-search-tree",
      "link": "https://leetcode.com/problems/validate-binary-search-tree",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, <em>determine if it is a valid binary search tree (BST)</em>.</p>\n<p>A <strong>valid BST</strong> is defined as follows:</p>\n<ul>\n<li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node's key.</li>\n<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node's key.</li>\n<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg\" style=\"width: 302px; height: 182px;\"/>\n<pre><strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg\" style=\"width: 422px; height: 292px;\"/>\n<pre><strong>Input:</strong> root = [5,1,4,null,null,3,6]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The root node's value is 5 but its right child's value is 4.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n</div>"
    },
    {
      "id": 99,
      "title": "Recover Binary Search Tree",
      "title_slug": "recover-binary-search-tree",
      "link": "https://leetcode.com/problems/recover-binary-search-tree",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>You are given the <code>root</code> of a binary search tree (BST), where the values of <strong>exactly</strong> two nodes of the tree were swapped by mistake. <em>Recover the tree without changing its structure</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover1.jpg\" style=\"width: 422px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [1,3,null,null,2]\n<strong>Output:</strong> [3,1,null,null,2]\n<strong>Explanation:</strong> 3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/28/recover2.jpg\" style=\"width: 581px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [3,1,4,null,null,2]\n<strong>Output:</strong> [2,1,4,null,null,3]\n<strong>Explanation:</strong> 2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[2, 1000]</code>.</li>\n<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> A solution using <code>O(n)</code> space is pretty straight-forward. Could you devise a constant <code>O(1)</code> space solution?</div>"
    },
    {
      "id": 100,
      "title": "Same Tree",
      "title_slug": "same-tree",
      "link": "https://leetcode.com/problems/same-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the roots of two binary trees <code>p</code> and <code>q</code>, write a function to check if they are the same or not.</p>\n<p>Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex1.jpg\" style=\"width: 622px; height: 182px;\"/>\n<pre><strong>Input:</strong> p = [1,2,3], q = [1,2,3]\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex2.jpg\" style=\"width: 382px; height: 182px;\"/>\n<pre><strong>Input:</strong> p = [1,2], q = [1,null,2]\n<strong>Output:</strong> false\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/20/ex3.jpg\" style=\"width: 622px; height: 182px;\"/>\n<pre><strong>Input:</strong> p = [1,2,1], q = [1,1,2]\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in both trees is in the range <code>[0, 100]</code>.</li>\n<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 101,
      "title": "Symmetric Tree",
      "title_slug": "symmetric-tree",
      "link": "https://leetcode.com/problems/symmetric-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, <em>check whether it is a mirror of itself</em> (i.e., symmetric around its center).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg\" style=\"width: 354px; height: 291px;\"/>\n<pre><strong>Input:</strong> root = [1,2,2,3,4,4,3]\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg\" style=\"width: 308px; height: 258px;\"/>\n<pre><strong>Input:</strong> root = [1,2,2,null,3,null,3]\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Could you solve it both recursively and iteratively?</div>"
    },
    {
      "id": 102,
      "title": "Binary Tree Level Order Traversal",
      "title_slug": "binary-tree-level-order-traversal",
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>the level order traversal of its nodes' values</em>. (i.e., from left to right, level by level).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[3],[9,20],[15,7]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 103,
      "title": "Binary Tree Zigzag Level Order Traversal",
      "title_slug": "binary-tree-zigzag-level-order-traversal",
      "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>the zigzag level order traversal of its nodes' values</em>. (i.e., from left to right, then right to left for the next level and alternate between).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[3],[20,9],[15,7]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 104,
      "title": "Maximum Depth of Binary Tree",
      "title_slug": "maximum-depth-of-binary-tree",
      "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>its maximum depth</em>.</p>\n<p>A binary tree's <strong>maximum depth</strong>\u00a0is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/26/tmp-tree.jpg\" style=\"width: 400px; height: 277px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 3\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = [1,null,2]\n<strong>Output:</strong> 2\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n</div>"
    },
    {
      "id": 105,
      "title": "Construct Binary Tree from Preorder and Inorder Traversal",
      "title_slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
      "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\"/>\n<pre><strong>Input:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> preorder = [-1], inorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= preorder.length &lt;= 3000</code></li>\n<li><code>inorder.length == preorder.length</code></li>\n<li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li>\n<li><code>preorder</code> and <code>inorder</code> consist of <strong>unique</strong> values.</li>\n<li>Each value of <code>inorder</code> also appears in <code>preorder</code>.</li>\n<li><code>preorder</code> is <strong>guaranteed</strong> to be the preorder traversal of the tree.</li>\n<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n</ul>\n</div>"
    },
    {
      "id": 106,
      "title": "Construct Binary Tree from Inorder and Postorder Traversal",
      "title_slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
      "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given two integer arrays <code>inorder</code> and <code>postorder</code> where <code>inorder</code> is the inorder traversal of a binary tree and <code>postorder</code> is the postorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\"/>\n<pre><strong>Input:</strong> inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> inorder = [-1], postorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= inorder.length &lt;= 3000</code></li>\n<li><code>postorder.length == inorder.length</code></li>\n<li><code>-3000 &lt;= inorder[i], postorder[i] &lt;= 3000</code></li>\n<li><code>inorder</code> and <code>postorder</code> consist of <strong>unique</strong> values.</li>\n<li>Each value of <code>postorder</code> also appears in <code>inorder</code>.</li>\n<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n<li><code>postorder</code> is <strong>guaranteed</strong> to be the postorder traversal of the tree.</li>\n</ul>\n</div>"
    },
    {
      "id": 107,
      "title": "Binary Tree Level Order Traversal II",
      "title_slug": "binary-tree-level-order-traversal-ii",
      "link": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>the bottom-up level order traversal of its nodes' values</em>. (i.e., from left to right, level by level from leaf to root).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg\" style=\"width: 277px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> [[15,7],[9,20],[3]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [[1]]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 108,
      "title": "Convert Sorted Array to Binary Search Tree",
      "title_slug": "convert-sorted-array-to-bst",
      "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> where the elements are sorted in <strong>ascending order</strong>, convert <em>it to a <strong>height-balanced</strong> binary search tree</em>.</p>\n<p>A <strong>height-balanced</strong> binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree1.jpg\" style=\"width: 302px; height: 222px;\"/>\n<pre><strong>Input:</strong> nums = [-10,-3,0,5,9]\n<strong>Output:</strong> [0,-3,9,-10,null,5]\n<strong>Explanation:</strong> [0,-10,5,null,-3,null,9] is also accepted:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree2.jpg\" style=\"width: 302px; height: 222px;\"/>\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree.jpg\" style=\"width: 342px; height: 142px;\"/>\n<pre><strong>Input:</strong> nums = [1,3]\n<strong>Output:</strong> [3,1]\n<strong>Explanation:</strong> [1,null,3] and [3,1] are both height-balanced BSTs.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n<li><code>nums</code> is sorted in a <strong>strictly increasing</strong> order.</li>\n</ul>\n</div>"
    },
    {
      "id": 109,
      "title": "Convert Sorted List to Binary Search Tree",
      "title_slug": "convert-sorted-list-to-binary-search-tree",
      "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>head</code> of a singly linked list where elements are <strong>sorted in ascending order</strong>, convert it to a height balanced BST.</p>\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/17/linked.jpg\" style=\"width: 500px; height: 388px;\"/>\n<pre><strong>Input:</strong> head = [-10,-3,0,5,9]\n<strong>Output:</strong> [0,-3,9,-10,null,5]\n<strong>Explanation:</strong> One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in <code>head</code> is in the range <code>[0, 2 * 10<sup>4</sup>]</code>.</li>\n<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 110,
      "title": "Balanced Binary Tree",
      "title_slug": "balanced-binary-tree",
      "link": "https://leetcode.com/problems/balanced-binary-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given a binary tree, determine if it is height-balanced.</p>\n<p>For this problem, a height-balanced binary tree is defined as:</p>\n<blockquote>\n<p>a binary tree in which the left and right subtrees of <em>every</em> node differ in height by no more than 1.</p>\n</blockquote>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg\" style=\"width: 342px; height: 221px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> true\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg\" style=\"width: 452px; height: 301px;\"/>\n<pre><strong>Input:</strong> root = [1,2,2,3,3,null,null,4,4]\n<strong>Output:</strong> false\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> true\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 111,
      "title": "Minimum Depth of Binary Tree",
      "title_slug": "minimum-depth-of-binary-tree",
      "link": "https://leetcode.com/problems/minimum-depth-of-binary-tree",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given a binary tree, find its minimum depth.</p>\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>\n<p><strong>Note:</strong>\u00a0A leaf is a node with no children.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex_depth.jpg\" style=\"width: 432px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 2\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = [2,null,3,null,4,null,5,null,6]\n<strong>Output:</strong> 5\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 10<sup>5</sup>]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 112,
      "title": "Path Sum",
      "title_slug": "path-sum",
      "link": "https://leetcode.com/problems/path-sum",
      "difficulty": "Easy",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <code>true</code> if the tree has a <strong>root-to-leaf</strong> path such that adding up all the values along the path equals <code>targetSum</code>.</p>\n<p>A <strong>leaf</strong> is a node with no children.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum1.jpg\" style=\"width: 500px; height: 356px;\"/>\n<pre><strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The root-to-leaf path with the target sum is shown.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\"/>\n<pre><strong>Input:</strong> root = [1,2,3], targetSum = 5\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There two root-to-leaf paths in the tree:\n(1 --&gt; 2): The sum is 3.\n(1 --&gt; 3): The sum is 4.\nThere is no root-to-leaf path with sum = 5.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [], targetSum = 0\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Since the tree is empty, there are no root-to-leaf paths.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 113,
      "title": "Path Sum II",
      "title_slug": "path-sum-ii",
      "link": "https://leetcode.com/problems/path-sum-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Backtracking",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree and an integer <code>targetSum</code>, return <em>all <strong>root-to-leaf</strong> paths where the sum of the node values in the path equals </em><code>targetSum</code><em>. Each path should be returned as a list of the node <strong>values</strong>, not node references</em>.</p>\n<p>A <strong>root-to-leaf</strong> path is a path starting from the root and ending at any leaf node. A <strong>leaf</strong> is a node with no children.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsumii1.jpg\" style=\"width: 500px; height: 356px;\"/>\n<pre><strong>Input:</strong> root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n<strong>Output:</strong> [[5,4,11,2],[5,8,4,5]]\n<strong>Explanation:</strong> There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/18/pathsum2.jpg\" style=\"width: 212px; height: 181px;\"/>\n<pre><strong>Input:</strong> root = [1,2,3], targetSum = 5\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [1,2], targetSum = 0\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n<li><code>-1000 &lt;= targetSum &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 114,
      "title": "Flatten Binary Tree to Linked List",
      "title_slug": "flatten-binary-tree-to-linked-list",
      "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, flatten the tree into a \"linked list\":</p>\n<ul>\n<li>The \"linked list\" should use the same <code>TreeNode</code> class where the <code>right</code> child pointer points to the next node in the list and the <code>left</code> child pointer is always <code>null</code>.</li>\n<li>The \"linked list\" should be in the same order as a <a href=\"https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR\" target=\"_blank\"><strong>pre-order</strong><strong> traversal</strong></a> of the binary tree.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/01/14/flaten.jpg\" style=\"width: 500px; height: 226px;\"/>\n<pre><strong>Input:</strong> root = [1,2,5,3,4,null,6]\n<strong>Output:</strong> [1,null,2,null,3,null,4,null,5,null,6]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [0]\n<strong>Output:</strong> [0]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 2000]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Can you flatten the tree in-place (with <code>O(1)</code> extra space)?</div>"
    },
    {
      "id": 115,
      "title": "Distinct Subsequences",
      "title_slug": "distinct-subsequences",
      "link": "https://leetcode.com/problems/distinct-subsequences",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given two strings <code>s</code> and <code>t</code>, return <em>the number of distinct subsequences of <code>s</code> which equals <code>t</code></em>.</p>\n<p>A string's <strong>subsequence</strong> is a new string formed from the original string by deleting some (can be none) of the characters without disturbing the remaining characters' relative positions. (i.e., <code>\"ACE\"</code> is a subsequence of <code>\"ABCDE\"</code> while <code>\"AEC\"</code> is not).</p>\n<p>The test cases are generated so that the answer fits on a 32-bit signed integer.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"rabbbit\", t = \"rabbit\"\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nAs shown below, there are 3 ways you can generate \"rabbit\" from s.\n<code><strong><u>rabb</u></strong>b<strong><u>it</u></strong></code>\n<code><strong><u>ra</u></strong>b<strong><u>bbit</u></strong></code>\n<code><strong><u>rab</u></strong>b<strong><u>bit</u></strong></code>\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"babgbag\", t = \"bag\"\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nAs shown below, there are 5 ways you can generate \"bag\" from s.\n<code><strong><u>ba</u></strong>b<u><strong>g</strong></u>bag</code>\n<code><strong><u>ba</u></strong>bgba<strong><u>g</u></strong></code>\n<code><u><strong>b</strong></u>abgb<strong><u>ag</u></strong></code>\n<code>ba<u><strong>b</strong></u>gb<u><strong>ag</strong></u></code>\n<code>babg<strong><u>bag</u></strong></code></pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length, t.length &lt;= 1000</code></li>\n<li><code>s</code> and <code>t</code> consist of English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 116,
      "title": "Populating Next Right Pointers in Each Node",
      "title_slug": "populating-next-right-pointers-in-each-node",
      "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>You are given a <strong>perfect binary tree</strong> where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p>\n<pre>struct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/14/116_sample.png\" style=\"width: 500px; height: 171px;\"/>\n<pre><strong>Input:</strong> root = [1,2,3,4,5,6,7]\n<strong>Output:</strong> [1,#,2,3,#,4,5,6,7,#]\n<strong>Explanation: </strong>Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 2<sup>12</sup> - 1]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow-up:</strong></p>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li>\n</ul>\n</div>"
    },
    {
      "id": 117,
      "title": "Populating Next Right Pointers in Each Node II",
      "title_slug": "populating-next-right-pointers-in-each-node-ii",
      "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given a binary tree</p>\n<pre>struct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/15/117_sample.png\" style=\"width: 500px; height: 171px;\"/>\n<pre><strong>Input:</strong> root = [1,2,3,4,5,null,7]\n<strong>Output:</strong> [1,#,2,3,#,4,5,7,#]\n<strong>Explanation: </strong>Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 6000]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow-up:</strong></p>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>The recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.</li>\n</ul>\n</div>"
    },
    {
      "id": 118,
      "title": "Pascal's Triangle",
      "title_slug": "pascals-triangle",
      "link": "https://leetcode.com/problems/pascals-triangle",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given an integer <code>numRows</code>, return the first numRows of <strong>Pascal's triangle</strong>.</p>\n<p>In <strong>Pascal's triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" style=\"height:240px; width:260px\"/>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> numRows = 5\n<strong>Output:</strong> [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> numRows = 1\n<strong>Output:</strong> [[1]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= numRows &lt;= 30</code></li>\n</ul>\n</div>"
    },
    {
      "id": 119,
      "title": "Pascal's Triangle II",
      "title_slug": "pascals-triangle-ii",
      "link": "https://leetcode.com/problems/pascals-triangle-ii",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given an integer <code>rowIndex</code>, return the <code>rowIndex<sup>th</sup></code> (<strong>0-indexed</strong>) row of the <strong>Pascal's triangle</strong>.</p>\n<p>In <strong>Pascal's triangle</strong>, each number is the sum of the two numbers directly above it as shown:</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" style=\"height:240px; width:260px\"/>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 3\n<strong>Output:</strong> [1,3,3,1]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 0\n<strong>Output:</strong> [1]\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> rowIndex = 1\n<strong>Output:</strong> [1,1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= rowIndex &lt;= 33</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Could you optimize your algorithm to use only <code>O(rowIndex)</code> extra space?</p>\n</div>"
    },
    {
      "id": 120,
      "title": "Triangle",
      "title_slug": "triangle",
      "link": "https://leetcode.com/problems/triangle",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given a <code>triangle</code> array, return <em>the minimum path sum from top to bottom</em>.</p>\n<p>For each step, you may move to an adjacent number of the row below. More formally, if you are on index <code>i</code> on the current row, you may move to either index <code>i</code> or index <code>i + 1</code> on the next row.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The triangle looks like:\n   <u>2</u>\n  <u>3</u> 4\n 6 <u>5</u> 7\n4 <u>1</u> 8 3\nThe minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> triangle = [[-10]]\n<strong>Output:</strong> -10\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= triangle.length &lt;= 200</code></li>\n<li><code>triangle[0].length == 1</code></li>\n<li><code>triangle[i].length == triangle[i - 1].length + 1</code></li>\n<li><code>-10<sup>4</sup> &lt;= triangle[i][j] &lt;= 10<sup>4</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Could you\u00a0do this using only <code>O(n)</code> extra space, where <code>n</code> is the total number of rows in the triangle?</div>"
    },
    {
      "id": 121,
      "title": "Best Time to Buy and Sell Stock",
      "title_slug": "best-time-to-buy-and-sell-stock",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n<p>You want to maximize your profit by choosing a <strong>single day</strong> to buy one stock and choosing a <strong>different day in the future</strong> to sell that stock.</p>\n<p>Return <em>the maximum profit you can achieve from this transaction</em>. If you cannot achieve any profit, return <code>0</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> prices = [7,1,5,3,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\nNote that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transactions are done and the max profit = 0.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 122,
      "title": "Best Time to Buy and Sell Stock II",
      "title_slug": "best-time-to-buy-and-sell-stock-ii",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming",
        "Greedy"
      ],
      "question": "<div><p>You are given an integer array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n<p>On each day, you may decide to buy and/or sell the stock. You can only hold <strong>at most one</strong> share of the stock at any time. However, you can buy it then immediately sell it on the <strong>same day</strong>.</p>\n<p>Find and return <em>the <strong>maximum</strong> profit you can achieve</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> prices = [7,1,5,3,6,4]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> prices = [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nTotal profit is 4.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= prices.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 123,
      "title": "Best Time to Buy and Sell Stock III",
      "title_slug": "best-time-to-buy-and-sell-stock-iii",
      "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>You are given an array <code>prices</code> where <code>prices[i]</code> is the price of a given stock on the <code>i<sup>th</sup></code> day.</p>\n<p>Find the maximum profit you can achieve. You may complete <strong>at most two transactions</strong>.</p>\n<p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> prices = [3,3,5,0,0,3,1,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> prices = [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> prices = [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= prices.length &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= prices[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 124,
      "title": "Binary Tree Maximum Path Sum",
      "title_slug": "binary-tree-maximum-path-sum",
      "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
      "difficulty": "Hard",
      "similar_topics": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>A <strong>path</strong> in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence <strong>at most once</strong>. Note that the path does not need to pass through the root.</p>\n<p>The <strong>path sum</strong> of a path is the sum of the node's values in the path.</p>\n<p>Given the <code>root</code> of a binary tree, return <em>the maximum <strong>path sum</strong> of any <strong>non-empty</strong> path</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx1.jpg\" style=\"width: 322px; height: 182px;\"/>\n<pre><strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The optimal path is 2 -&gt; 1 -&gt; 3 with a path sum of 2 + 1 + 3 = 6.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/13/exx2.jpg\"/>\n<pre><strong>Input:</strong> root = [-10,9,20,null,null,15,7]\n<strong>Output:</strong> 42\n<strong>Explanation:</strong> The optimal path is 15 -&gt; 20 -&gt; 7 with a path sum of 15 + 20 + 7 = 42.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[1, 3 * 10<sup>4</sup>]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 125,
      "title": "Valid Palindrome",
      "title_slug": "valid-palindrome",
      "link": "https://leetcode.com/problems/valid-palindrome",
      "difficulty": "Easy",
      "similar_topics": [
        "Two Pointers",
        "String"
      ],
      "question": "<div><p>A phrase is a <strong>palindrome</strong> if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p>\n<p>Given a string <code>s</code>, return <code>true</code><em> if it is a <strong>palindrome</strong>, or </em><code>false</code><em> otherwise</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"A man, a plan, a canal: Panama\"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \"amanaplanacanalpanama\" is a palindrome.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"race a car\"\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \"raceacar\" is not a palindrome.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \" \"\n<strong>Output:</strong> true\n<strong>Explanation:</strong> s is an empty string \"\" after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 2 * 10<sup>5</sup></code></li>\n<li><code>s</code> consists only of printable ASCII characters.</li>\n</ul>\n</div>"
    },
    {
      "id": 126,
      "title": "Word Ladder II",
      "title_slug": "word-ladder-ii",
      "link": "https://leetcode.com/problems/word-ladder-ii",
      "difficulty": "Hard",
      "similar_topics": [
        "Hash Table",
        "String",
        "Backtracking",
        "Breadth-First Search"
      ],
      "question": "<div><p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p>\n<ul>\n<li>Every adjacent pair of words differs by a single letter.</li>\n<li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li>\n<li><code>s<sub>k</sub> == endWord</code></li>\n</ul>\n<p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>all the <strong>shortest transformation sequences</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words </em><code>[beginWord, s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub>]</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n<strong>Output:</strong> [[\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],[\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]]\n<strong>Explanation:</strong>\u00a0There are 2 shortest transformation sequences:\n\"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\"\n\"hit\" -&gt; \"hot\" -&gt; \"lot\" -&gt; \"log\" -&gt; \"cog\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n<strong>Output:</strong> []\n<strong>Explanation:</strong> The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= beginWord.length &lt;= 5</code></li>\n<li><code>endWord.length == beginWord.length</code></li>\n<li><code>1 &lt;= wordList.length &lt;= 500</code></li>\n<li><code>wordList[i].length == beginWord.length</code></li>\n<li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li>\n<li><code>beginWord != endWord</code></li>\n<li>All the words in <code>wordList</code> are <strong>unique</strong>.</li>\n<li>The <strong>sum</strong> of all shortest transformation sequences does not exceed <code>10<sup>5</sup></code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 127,
      "title": "Word Ladder",
      "title_slug": "word-ladder",
      "link": "https://leetcode.com/problems/word-ladder",
      "difficulty": "Hard",
      "similar_topics": [
        "Hash Table",
        "String",
        "Breadth-First Search"
      ],
      "question": "<div><p>A <strong>transformation sequence</strong> from word <code>beginWord</code> to word <code>endWord</code> using a dictionary <code>wordList</code> is a sequence of words <code>beginWord -&gt; s<sub>1</sub> -&gt; s<sub>2</sub> -&gt; ... -&gt; s<sub>k</sub></code> such that:</p>\n<ul>\n<li>Every adjacent pair of words differs by a single letter.</li>\n<li>Every <code>s<sub>i</sub></code> for <code>1 &lt;= i &lt;= k</code> is in <code>wordList</code>. Note that <code>beginWord</code> does not need to be in <code>wordList</code>.</li>\n<li><code>s<sub>k</sub> == endWord</code></li>\n</ul>\n<p>Given two words, <code>beginWord</code> and <code>endWord</code>, and a dictionary <code>wordList</code>, return <em>the <strong>number of words</strong> in the <strong>shortest transformation sequence</strong> from</em> <code>beginWord</code> <em>to</em> <code>endWord</code><em>, or </em><code>0</code><em> if no such sequence exists.</em></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> One shortest transformation sequence is \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; cog\", which is 5 words long.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= beginWord.length &lt;= 10</code></li>\n<li><code>endWord.length == beginWord.length</code></li>\n<li><code>1 &lt;= wordList.length &lt;= 5000</code></li>\n<li><code>wordList[i].length == beginWord.length</code></li>\n<li><code>beginWord</code>, <code>endWord</code>, and <code>wordList[i]</code> consist of lowercase English letters.</li>\n<li><code>beginWord != endWord</code></li>\n<li>All the words in <code>wordList</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 128,
      "title": "Longest Consecutive Sequence",
      "title_slug": "longest-consecutive-sequence",
      "link": "https://leetcode.com/problems/longest-consecutive-sequence",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Union Find"
      ],
      "question": "<div><p>Given an unsorted array of integers <code>nums</code>, return <em>the length of the longest consecutive elements sequence.</em></p>\n<p>You must write an algorithm that runs in\u00a0<code>O(n)</code>\u00a0time.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [100,4,200,1,3,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,3,7,2,5,8,4,6,0,1]\n<strong>Output:</strong> 9\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 129,
      "title": "Sum Root to Leaf Numbers",
      "title_slug": "sum-root-to-leaf-numbers",
      "link": "https://leetcode.com/problems/sum-root-to-leaf-numbers",
      "difficulty": "Medium",
      "similar_topics": [
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>You are given the <code>root</code> of a binary tree containing digits from <code>0</code> to <code>9</code> only.</p>\n<p>Each root-to-leaf path in the tree represents a number.</p>\n<ul>\n<li>For example, the root-to-leaf path <code>1 -&gt; 2 -&gt; 3</code> represents the number <code>123</code>.</li>\n</ul>\n<p>Return <em>the total sum of all root-to-leaf numbers</em>. Test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p>\n<p>A <strong>leaf</strong> node is a node with no children.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/num1tree.jpg\" style=\"width: 212px; height: 182px;\"/>\n<pre><strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> 25\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\nTherefore, sum = 12 + 13 = <code>25</code>.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/num2tree.jpg\" style=\"width: 292px; height: 302px;\"/>\n<pre><strong>Input:</strong> root = [4,9,0,5,1]\n<strong>Output:</strong> 1026\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495.\nThe root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491.\nThe root-to-leaf path <code>4-&gt;0</code> represents the number 40.\nTherefore, sum = 495 + 491 + 40 = <code>1026</code>.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[1, 1000]</code>.</li>\n<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n<li>The depth of the tree will not exceed <code>10</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 130,
      "title": "Surrounded Regions",
      "title_slug": "surrounded-regions",
      "link": "https://leetcode.com/problems/surrounded-regions",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ],
      "question": "<div><p>Given an <code>m x n</code> matrix <code>board</code> containing <code>'X'</code> and <code>'O'</code>, <em>capture all regions that are 4-directionally\u00a0surrounded by</em> <code>'X'</code>.</p>\n<p>A region is <strong>captured</strong> by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/xogrid.jpg\" style=\"width: 550px; height: 237px;\"/>\n<pre><strong>Input:</strong> board = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n<strong>Output:</strong> [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n<strong>Explanation:</strong> Notice that an 'O' should not be flipped if:\n- It is on the border, or\n- It is adjacent to an 'O' that should not be flipped.\nThe bottom 'O' is on the border, so it is not flipped.\nThe other three 'O' form a surrounded region, so they are flipped.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> board = [[\"X\"]]\n<strong>Output:</strong> [[\"X\"]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == board.length</code></li>\n<li><code>n == board[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>board[i][j]</code> is <code>'X'</code> or <code>'O'</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 131,
      "title": "Palindrome Partitioning",
      "title_slug": "palindrome-partitioning",
      "link": "https://leetcode.com/problems/palindrome-partitioning",
      "difficulty": "Medium",
      "similar_topics": [
        "String",
        "Dynamic Programming",
        "Backtracking"
      ],
      "question": "<div><p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a <strong>palindrome</strong>. Return all possible palindrome partitioning of <code>s</code>.</p>\n<p>A <strong>palindrome</strong> string is a string that reads the same backward as forward.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aab\"\n<strong>Output:</strong> [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\"\n<strong>Output:</strong> [[\"a\"]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 16</code></li>\n<li><code>s</code> contains only lowercase English letters.</li>\n</ul>\n</div>"
    },
    {
      "id": 132,
      "title": "Palindrome Partitioning II",
      "title_slug": "palindrome-partitioning-ii",
      "link": "https://leetcode.com/problems/palindrome-partitioning-ii",
      "difficulty": "Hard",
      "similar_topics": [
        "String",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given a string <code>s</code>, partition <code>s</code> such that every substring of the partition is a palindrome.</p>\n<p>Return <em>the minimum cuts needed</em> for a palindrome partitioning of <code>s</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aab\"\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a\"\n<strong>Output:</strong> 0\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"ab\"\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 2000</code></li>\n<li><code>s</code> consists of lowercase English letters only.</li>\n</ul>\n</div>"
    },
    {
      "id": 133,
      "title": "Clone Graph",
      "title_slug": "clone-graph",
      "link": "https://leetcode.com/problems/clone-graph",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ],
      "question": "<div><p>Given a reference of a node in a <strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\">connected</a></strong> undirected graph.</p>\n<p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> (clone) of the graph.</p>\n<p>Each node in the graph contains a value (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p>\n<pre>class Node {\n    public int val;\n    public List&lt;Node&gt; neighbors;\n}\n</pre>\n<p>\u00a0</p>\n<p><strong>Test case format:</strong></p>\n<p>For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with <code>val == 1</code>, the second node with <code>val == 2</code>, and so on. The graph is represented in the test case using an adjacency list.</p>\n<p><b>An adjacency list</b> is a collection of unordered <b>lists</b> used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.</p>\n<p>The given node will always be the first node with <code>val = 1</code>. You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/04/133_clone_graph_question.png\" style=\"width: 454px; height: 500px;\"/>\n<pre><strong>Input:</strong> adjList = [[2,4],[1,3],[2,4],[1,3]]\n<strong>Output:</strong> [[2,4],[1,3],[2,4],[1,3]]\n<strong>Explanation:</strong> There are 4 nodes in the graph.\n1st node (val = 1)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/01/07/graph.png\" style=\"width: 163px; height: 148px;\"/>\n<pre><strong>Input:</strong> adjList = [[]]\n<strong>Output:</strong> [[]]\n<strong>Explanation:</strong> Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> adjList = []\n<strong>Output:</strong> []\n<strong>Explanation:</strong> This an empty graph, it does not have any nodes.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the graph is in the range <code>[0, 100]</code>.</li>\n<li><code>1 &lt;= Node.val &lt;= 100</code></li>\n<li><code>Node.val</code> is unique for each node.</li>\n<li>There are no repeated edges and no self-loops in the graph.</li>\n<li>The Graph is connected and all nodes can be visited starting from the given node.</li>\n</ul>\n</div>"
    },
    {
      "id": 134,
      "title": "Gas Station",
      "title_slug": "gas-station",
      "link": "https://leetcode.com/problems/gas-station",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Greedy"
      ],
      "question": "<div><p>There are <code>n</code> gas stations along a circular route, where the amount of gas at the <code>i<sup>th</sup></code> station is <code>gas[i]</code>.</p>\n<p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from the <code>i<sup>th</sup></code> station to its next <code>(i + 1)<sup>th</sup></code> station. You begin the journey with an empty tank at one of the gas stations.</p>\n<p>Given two integer arrays <code>gas</code> and <code>cost</code>, return <em>the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return</em> <code>-1</code>. If there exists a solution, it is <strong>guaranteed</strong> to be <strong>unique</strong></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nStart at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> gas = [2,3,4], cost = [3,4,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nYou can't start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can't travel around the circuit once no matter where you start.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == gas.length == cost.length</code></li>\n<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= gas[i], cost[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 135,
      "title": "Candy",
      "title_slug": "candy",
      "link": "https://leetcode.com/problems/candy",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Greedy"
      ],
      "question": "<div><p>There are <code>n</code> children standing in a line. Each child is assigned a rating value given in the integer array <code>ratings</code>.</p>\n<p>You are giving candies to these children subjected to the following requirements:</p>\n<ul>\n<li>Each child must have at least one candy.</li>\n<li>Children with a higher rating get more candies than their neighbors.</li>\n</ul>\n<p>Return <em>the minimum number of candies you need to have to distribute the candies to the children</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> ratings = [1,0,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> ratings = [1,2,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\nThe third child gets 1 candy because it satisfies the above two conditions.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == ratings.length</code></li>\n<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n<li><code>0 &lt;= ratings[i] &lt;= 2 * 10<sup>4</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 136,
      "title": "Single Number",
      "title_slug": "single-number",
      "link": "https://leetcode.com/problems/single-number",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Bit Manipulation"
      ],
      "question": "<div><p>Given a <strong>non-empty</strong>\u00a0array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n<p>You must\u00a0implement a solution with a linear runtime complexity and use\u00a0only constant\u00a0extra space.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,1,2,1,2]\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n<li>Each element in the array appears twice except for one element which appears only once.</li>\n</ul>\n</div>"
    },
    {
      "id": 137,
      "title": "Single Number II",
      "title_slug": "single-number-ii",
      "link": "https://leetcode.com/problems/single-number-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Bit Manipulation"
      ],
      "question": "<div><p>Given an integer array <code>nums</code> where\u00a0every element appears <strong>three times</strong> except for one, which appears <strong>exactly once</strong>. <em>Find the single element and return it</em>.</p>\n<p>You must\u00a0implement a solution with a linear runtime complexity and use\u00a0only constant\u00a0extra space.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,3,2]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n<li>Each element in <code>nums</code> appears exactly <strong>three times</strong> except for one element which appears <strong>once</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 138,
      "title": "Copy List with Random Pointer",
      "title_slug": "copy-list-with-random-pointer",
      "link": "https://leetcode.com/problems/copy-list-with-random-pointer",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Linked List"
      ],
      "question": "<div><p>A linked list of length <code>n</code> is given such that each node contains an additional random pointer, which could point to any node in the list, or <code>null</code>.</p>\n<p>Construct a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> of the list. The deep copy should consist of exactly <code>n</code> <strong>brand new</strong> nodes, where each new node has its value set to the value of its corresponding original node. Both the <code>next</code> and <code>random</code> pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. <strong>None of the pointers in the new list should point to nodes in the original list</strong>.</p>\n<p>For example, if there are two nodes <code>X</code> and <code>Y</code> in the original list, where <code>X.random --&gt; Y</code>, then for the corresponding two nodes <code>x</code> and <code>y</code> in the copied list, <code>x.random --&gt; y</code>.</p>\n<p>Return <em>the head of the copied linked list</em>.</p>\n<p>The linked list is represented in the input/output as a list of <code>n</code> nodes. Each node is represented as a pair of <code>[val, random_index]</code> where:</p>\n<ul>\n<li><code>val</code>: an integer representing <code>Node.val</code></li>\n<li><code>random_index</code>: the index of the node (range from <code>0</code> to <code>n-1</code>) that the <code>random</code> pointer points to, or <code>null</code> if it does not point to any node.</li>\n</ul>\n<p>Your code will <strong>only</strong> be given the <code>head</code> of the original linked list.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e1.png\" style=\"width: 700px; height: 142px;\"/>\n<pre><strong>Input:</strong> head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n<strong>Output:</strong> [[7,null],[13,0],[11,4],[10,2],[1,0]]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e2.png\" style=\"width: 700px; height: 114px;\"/>\n<pre><strong>Input:</strong> head = [[1,1],[2,1]]\n<strong>Output:</strong> [[1,1],[2,1]]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/18/e3.png\" style=\"width: 700px; height: 122px;\"/></strong></p>\n<pre><strong>Input:</strong> head = [[3,null],[3,0],[3,null]]\n<strong>Output:</strong> [[3,null],[3,0],[3,null]]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= n &lt;= 1000</code></li>\n<li><code>-10<sup>4</sup> &lt;= Node.val &lt;= 10<sup>4</sup></code></li>\n<li><code>Node.random</code> is <code>null</code> or is pointing to some node in the linked list.</li>\n</ul>\n</div>"
    },
    {
      "id": 139,
      "title": "Word Break",
      "title_slug": "word-break",
      "link": "https://leetcode.com/problems/word-break",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Trie",
        "Memoization"
      ],
      "question": "<div><p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, return <code>true</code> if <code>s</code> can be segmented into a space-separated sequence of one or more dictionary words.</p>\n<p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"leetcode\", wordDict = [\"leet\",\"code\"]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because \"leetcode\" can be segmented as \"leet code\".\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"applepenapple\", wordDict = [\"apple\",\"pen\"]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\nNote that you are allowed to reuse a dictionary word.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]\n<strong>Output:</strong> false\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 300</code></li>\n<li><code>1 &lt;= wordDict.length &lt;= 1000</code></li>\n<li><code>1 &lt;= wordDict[i].length &lt;= 20</code></li>\n<li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li>\n<li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 140,
      "title": "Word Break II",
      "title_slug": "word-break-ii",
      "link": "https://leetcode.com/problems/word-break-ii",
      "difficulty": "Hard",
      "similar_topics": [
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Trie",
        "Memoization"
      ],
      "question": "<div><p>Given a string <code>s</code> and a dictionary of strings <code>wordDict</code>, add spaces in <code>s</code> to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in <strong>any order</strong>.</p>\n<p><strong>Note</strong> that the same word in the dictionary may be reused multiple times in the segmentation.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"catsanddog\", wordDict = [\"cat\",\"cats\",\"and\",\"sand\",\"dog\"]\n<strong>Output:</strong> [\"cats and dog\",\"cat sand dog\"]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"pineapplepenapple\", wordDict = [\"apple\",\"pen\",\"applepen\",\"pine\",\"pineapple\"]\n<strong>Output:</strong> [\"pine apple pen apple\",\"pineapple pen apple\",\"pine applepen apple\"]\n<strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 20</code></li>\n<li><code>1 &lt;= wordDict.length &lt;= 1000</code></li>\n<li><code>1 &lt;= wordDict[i].length &lt;= 10</code></li>\n<li><code>s</code> and <code>wordDict[i]</code> consist of only lowercase English letters.</li>\n<li>All the strings of <code>wordDict</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 141,
      "title": "Linked List Cycle",
      "title_slug": "linked-list-cycle",
      "link": "https://leetcode.com/problems/linked-list-cycle",
      "difficulty": "Easy",
      "similar_topics": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given <code>head</code>, the head of a linked list, determine if the linked list has a cycle in it.</p>\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the\u00a0<code>next</code>\u00a0pointer. Internally, <code>pos</code>\u00a0is used to denote the index of the node that\u00a0tail's\u00a0<code>next</code>\u00a0pointer is connected to.\u00a0<strong>Note that\u00a0<code>pos</code>\u00a0is not passed as a parameter</strong>.</p>\n<p>Return\u00a0<code>true</code><em> if there is a cycle in the linked list</em>. Otherwise, return <code>false</code>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"width: 300px; height: 97px; margin-top: 8px; margin-bottom: 8px;\"/>\n<pre><strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"width: 141px; height: 74px;\"/>\n<pre><strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is a cycle in the linked list, where the tail connects to the 0th node.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"width: 45px; height: 45px;\"/>\n<pre><strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n</div>"
    },
    {
      "id": 142,
      "title": "Linked List Cycle II",
      "title_slug": "linked-list-cycle-ii",
      "link": "https://leetcode.com/problems/linked-list-cycle-ii",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked list, return <em>the node where the cycle begins. If there is no cycle, return </em><code>null</code>.</p>\n<p>There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the <code>next</code> pointer. Internally, <code>pos</code> is used to denote the index of the node that tail's <code>next</code> pointer is connected to (<strong>0-indexed</strong>). It is <code>-1</code> if there is no cycle. <strong>Note that</strong> <code>pos</code> <strong>is not passed as a parameter</strong>.</p>\n<p><strong>Do not modify</strong> the linked list.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist.png\" style=\"height: 145px; width: 450px;\"/>\n<pre><strong>Input:</strong> head = [3,2,0,-4], pos = 1\n<strong>Output:</strong> tail connects to node index 1\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test2.png\" style=\"height: 105px; width: 201px;\"/>\n<pre><strong>Input:</strong> head = [1,2], pos = 0\n<strong>Output:</strong> tail connects to node index 0\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/12/07/circularlinkedlist_test3.png\" style=\"height: 65px; width: 65px;\"/>\n<pre><strong>Input:</strong> head = [1], pos = -1\n<strong>Output:</strong> no cycle\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of the nodes in the list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n<li><code>pos</code> is <code>-1</code> or a <strong>valid index</strong> in the linked-list.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Can you solve it using <code>O(1)</code> (i.e. constant) memory?</p>\n</div>"
    },
    {
      "id": 143,
      "title": "Reorder List",
      "title_slug": "reorder-list",
      "link": "https://leetcode.com/problems/reorder-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers",
        "Stack",
        "Recursion"
      ],
      "question": "<div><p>You are given the head of a singly linked-list. The list can be represented as:</p>\n<pre>L<sub>0</sub> \u2192 L<sub>1</sub> \u2192 \u2026 \u2192 L<sub>n - 1</sub> \u2192 L<sub>n</sub>\n</pre>\n<p><em>Reorder the list to be on the following form:</em></p>\n<pre>L<sub>0</sub> \u2192 L<sub>n</sub> \u2192 L<sub>1</sub> \u2192 L<sub>n - 1</sub> \u2192 L<sub>2</sub> \u2192 L<sub>n - 2</sub> \u2192 \u2026\n</pre>\n<p>You may not modify the values in the list's nodes. Only nodes themselves may be changed.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/reorder1linked-list.jpg\" style=\"width: 422px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [1,4,2,3]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/09/reorder2-linked-list.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [1,5,2,4,3]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[1, 5 * 10<sup>4</sup>]</code>.</li>\n<li><code>1 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 144,
      "title": "Binary Tree Preorder Traversal",
      "title_slug": "binary-tree-preorder-traversal",
      "link": "https://leetcode.com/problems/binary-tree-preorder-traversal",
      "difficulty": "Easy",
      "similar_topics": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a binary tree, return <em>the preorder traversal of its nodes' values</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/15/inorder_1.jpg\" style=\"width: 125px; height: 200px;\"/>\n<pre><strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [1,2,3]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 100]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n</div>"
    },
    {
      "id": 145,
      "title": "Binary Tree Postorder Traversal",
      "title_slug": "binary-tree-postorder-traversal",
      "link": "https://leetcode.com/problems/binary-tree-postorder-traversal",
      "difficulty": "Easy",
      "similar_topics": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ],
      "question": "<div><p>Given the <code>root</code> of a\u00a0binary tree, return <em>the postorder traversal of its nodes' values</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/28/pre1.jpg\" style=\"width: 127px; height: 200px;\"/>\n<pre><strong>Input:</strong> root = [1,null,2,3]\n<strong>Output:</strong> [3,2,1]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> root = []\n<strong>Output:</strong> []\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> root = [1]\n<strong>Output:</strong> [1]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of the nodes in the tree is in the range <code>[0, 100]</code>.</li>\n<li><code>-100 &lt;= Node.val &lt;= 100</code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</div>"
    },
    {
      "id": 146,
      "title": "LRU Cache",
      "title_slug": "lru-cache",
      "link": "https://leetcode.com/problems/lru-cache",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Linked List",
        "Design",
        "Doubly-Linked List"
      ],
      "question": "<div><p>Design a data structure that follows the constraints of a <strong><a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\">Least Recently Used (LRU) cache</a></strong>.</p>\n<p>Implement the <code>LRUCache</code> class:</p>\n<ul>\n<li><code>LRUCache(int capacity)</code> Initialize the LRU cache with <strong>positive</strong> size <code>capacity</code>.</li>\n<li><code>int get(int key)</code> Return the value of the <code>key</code> if the key exists, otherwise return <code>-1</code>.</li>\n<li><code>void put(int key, int value)</code> Update the value of the <code>key</code> if the <code>key</code> exists. Otherwise, add the <code>key-value</code> pair to the cache. If the number of keys exceeds the <code>capacity</code> from this operation, <strong>evict</strong> the least recently used key.</li>\n</ul>\n<p>The functions <code>get</code> and <code>put</code> must each run in <code>O(1)</code> average time complexity.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input</strong>\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n<strong>Output</strong>\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n<strong>Explanation</strong>\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= capacity &lt;= 3000</code></li>\n<li><code>0 &lt;= key &lt;= 10<sup>4</sup></code></li>\n<li><code>0 &lt;= value &lt;= 10<sup>5</sup></code></li>\n<li>At most <code>2 * 10<sup>5</sup></code> calls will be made to <code>get</code> and <code>put</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 147,
      "title": "Insertion Sort List",
      "title_slug": "insertion-sort-list",
      "link": "https://leetcode.com/problems/insertion-sort-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Sorting"
      ],
      "question": "<div><p>Given the <code>head</code> of a singly linked list, sort the list using <strong>insertion sort</strong>, and return <em>the sorted list's head</em>.</p>\n<p>The steps of the <strong>insertion sort</strong> algorithm:</p>\n<ol>\n<li>Insertion sort iterates, consuming one input element each repetition and growing a sorted output list.</li>\n<li>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.</li>\n<li>It repeats until no input elements remain.</li>\n</ol>\n<p>The following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.</p>\n<img alt=\"\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Insertion-sort-example-300px.gif\" style=\"height:180px; width:300px\"/>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/sort1linked-list.jpg\" style=\"width: 422px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [4,2,1,3]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/04/sort2linked-list.jpg\" style=\"width: 542px; height: 222px;\"/>\n<pre><strong>Input:</strong> head = [-1,5,3,4,0]\n<strong>Output:</strong> [-1,0,3,4,5]\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[1, 5000]</code>.</li>\n<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>\n</ul>\n</div>"
    },
    {
      "id": 148,
      "title": "Sort List",
      "title_slug": "sort-list",
      "link": "https://leetcode.com/problems/sort-list",
      "difficulty": "Medium",
      "similar_topics": [
        "Linked List",
        "Two Pointers",
        "Divide and Conquer",
        "Sorting",
        "Merge Sort"
      ],
      "question": "<div><p>Given the <code>head</code> of a linked list, return <em>the list after sorting it in <strong>ascending order</strong></em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_1.jpg\" style=\"width: 450px; height: 194px;\"/>\n<pre><strong>Input:</strong> head = [4,2,1,3]\n<strong>Output:</strong> [1,2,3,4]\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/14/sort_list_2.jpg\" style=\"width: 550px; height: 184px;\"/>\n<pre><strong>Input:</strong> head = [-1,5,3,4,0]\n<strong>Output:</strong> [-1,0,3,4,5]\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> head = []\n<strong>Output:</strong> []\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the list is in the range <code>[0, 5 * 10<sup>4</sup>]</code>.</li>\n<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> Can you sort the linked list in <code>O(n logn)</code> time and <code>O(1)</code> memory (i.e. constant space)?</p>\n</div>"
    },
    {
      "id": 149,
      "title": "Max Points on a Line",
      "title_slug": "max-points-on-a-line",
      "link": "https://leetcode.com/problems/max-points-on-a-line",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Math",
        "Geometry"
      ],
      "question": "<div><p>Given an array of <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane, return <em>the maximum number of points that lie on the same straight line</em>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane1.jpg\" style=\"width: 300px; height: 294px;\"/>\n<pre><strong>Input:</strong> points = [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> 3\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/25/plane2.jpg\" style=\"width: 300px; height: 294px;\"/>\n<pre><strong>Input:</strong> points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>Output:</strong> 4\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= points.length &lt;= 300</code></li>\n<li><code>points[i].length == 2</code></li>\n<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n<li>All the <code>points</code> are <strong>unique</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 150,
      "title": "Evaluate Reverse Polish Notation",
      "title_slug": "evaluate-reverse-polish-notation",
      "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Math",
        "Stack"
      ],
      "question": "<div><p>Evaluate the value of an arithmetic expression in <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\">Reverse Polish Notation</a>.</p>\n<p>Valid operators are <code>+</code>, <code>-</code>, <code>*</code>, and <code>/</code>. Each operand may be an integer or another expression.</p>\n<p><strong>Note</strong> that division between two integers should truncate toward zero.</p>\n<p>It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> tokens = [\"2\",\"1\",\"+\",\"3\",\"*\"]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> ((2 + 1) * 3) = 9\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> (4 + (13 / 5)) = 6\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\n<strong>Output:</strong> 22\n<strong>Explanation:</strong> ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= tokens.length &lt;= 10<sup>4</sup></code></li>\n<li><code>tokens[i]</code> is either an operator: <code>\"+\"</code>, <code>\"-\"</code>, <code>\"*\"</code>, or <code>\"/\"</code>, or an integer in the range <code>[-200, 200]</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 151,
      "title": "Reverse Words in a String",
      "title_slug": "reverse-words-in-a-string",
      "link": "https://leetcode.com/problems/reverse-words-in-a-string",
      "difficulty": "Medium",
      "similar_topics": [
        "Two Pointers",
        "String"
      ],
      "question": "<div><p>Given an input string <code>s</code>, reverse the order of the <strong>words</strong>.</p>\n<p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by at least one space.</p>\n<p>Return <em>a string of the words in reverse order concatenated by a single space.</em></p>\n<p><b>Note</b> that <code>s</code> may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"the sky is blue\"\n<strong>Output:</strong> \"blue is sky the\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"  hello world  \"\n<strong>Output:</strong> \"world hello\"\n<strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"a good   example\"\n<strong>Output:</strong> \"example good a\"\n<strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n<li><code>s</code> contains English letters (upper-case and lower-case), digits, and spaces <code>' '</code>.</li>\n<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n</ul>\n<p>\u00a0</p>\n<p><b data-stringify-type=\"bold\">Follow-up:\u00a0</b>If the string data type is mutable in your language, can\u00a0you solve it\u00a0<b data-stringify-type=\"bold\">in-place</b>\u00a0with\u00a0<code data-stringify-type=\"code\">O(1)</code>\u00a0extra space?</p>\n</div>"
    },
    {
      "id": 152,
      "title": "Maximum Product Subarray",
      "title_slug": "maximum-product-subarray",
      "link": "https://leetcode.com/problems/maximum-product-subarray",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Dynamic Programming"
      ],
      "question": "<div><p>Given an integer array <code>nums</code>, find a contiguous non-empty subarray within the array that has the largest product, and return <em>the product</em>.</p>\n<p>The test cases are generated so that the answer will fit in a <strong>32-bit</strong> integer.</p>\n<p>A <strong>subarray</strong> is a contiguous subsequence of the array.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,3,-2,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> [2,3] has the largest product 6.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [-2,0,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The result cannot be 2, because [-2,-1] is not a subarray.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\n<li>The product of any prefix or suffix of <code>nums</code> is <strong>guaranteed</strong> to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n</div>"
    },
    {
      "id": 153,
      "title": "Find Minimum in Rotated Sorted Array",
      "title_slug": "find-minimum-in-rotated-sorted-array",
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,2,4,5,6,7]</code> might become:</p>\n<ul>\n<li><code>[4,5,6,7,0,1,2]</code> if it was rotated <code>4</code> times.</li>\n<li><code>[0,1,2,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n<p>Given the sorted rotated array <code>nums</code> of <strong>unique</strong> elements, return <em>the minimum element of this array</em>.</p>\n<p>You must write an algorithm that runs in\u00a0<code>O(log n) time.</code></p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,4,5,1,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The original array was [1,2,3,4,5] rotated 3 times.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,5,6,7,0,1,2]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [11,13,15,17]\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> The original array was [11,13,15,17] and it was rotated 4 times. \n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == nums.length</code></li>\n<li><code>1 &lt;= n &lt;= 5000</code></li>\n<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n<li>All the integers of <code>nums</code> are <strong>unique</strong>.</li>\n<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n</div>"
    },
    {
      "id": 154,
      "title": "Find Minimum in Rotated Sorted Array II",
      "title_slug": "find-minimum-in-rotated-sorted-array-ii",
      "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,4,4,5,6,7]</code> might become:</p>\n<ul>\n<li><code>[4,5,6,7,0,1,4]</code> if it was rotated <code>4</code> times.</li>\n<li><code>[0,1,4,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n<p>Given the sorted rotated array <code>nums</code> that may contain <strong>duplicates</strong>, return <em>the minimum element of this array</em>.</p>\n<p>You must decrease the overall operation steps as much as possible.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,2,0,1]\n<strong>Output:</strong> 0\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == nums.length</code></li>\n<li><code>1 &lt;= n &lt;= 5000</code></li>\n<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong>Follow up:</strong> This problem is similar to\u00a0<a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\" target=\"_blank\">Find Minimum in Rotated Sorted Array</a>, but\u00a0<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n<p>\u00a0</p>\n</div>"
    },
    {
      "id": 155,
      "title": "Min Stack",
      "title_slug": "min-stack",
      "link": "https://leetcode.com/problems/min-stack",
      "difficulty": "Medium",
      "similar_topics": [
        "Stack",
        "Design"
      ],
      "question": "<div><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n<p>Implement the <code>MinStack</code> class:</p>\n<ul>\n<li><code>MinStack()</code> initializes the stack object.</li>\n<li><code>void push(int val)</code> pushes the element <code>val</code> onto the stack.</li>\n<li><code>void pop()</code> removes the element on the top of the stack.</li>\n<li><code>int top()</code> gets the top element of the stack.</li>\n<li><code>int getMin()</code> retrieves the minimum element in the stack.</li>\n</ul>\n<p>You must implement a solution with <code>O(1)</code> time complexity for each function.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input</strong>\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n<strong>Output</strong>\n[null,null,null,null,-3,null,0,-2]\n\n<strong>Explanation</strong>\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup> &lt;= val &lt;= 2<sup>31</sup> - 1</code></li>\n<li>Methods <code>pop</code>, <code>top</code> and <code>getMin</code> operations will always be called on <strong>non-empty</strong> stacks.</li>\n<li>At most <code>3 * 10<sup>4</sup></code> calls will be made to <code>push</code>, <code>pop</code>, <code>top</code>, and <code>getMin</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 160,
      "title": "Intersection of Two Linked Lists",
      "title_slug": "intersection-of-two-linked-lists",
      "link": "https://leetcode.com/problems/intersection-of-two-linked-lists",
      "difficulty": "Easy",
      "similar_topics": [
        "Hash Table",
        "Linked List",
        "Two Pointers"
      ],
      "question": "<div><p>Given the heads of two singly linked-lists <code>headA</code> and <code>headB</code>, return <em>the node at which the two lists intersect</em>. If the two linked lists have no intersection at all, return <code>null</code>.</p>\n<p>For example, the following two linked lists begin to intersect at node <code>c1</code>:</p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_statement.png\" style=\"width: 500px; height: 162px;\"/>\n<p>The test cases are generated such that there are no cycles anywhere in the entire linked structure.</p>\n<p><strong>Note</strong> that the linked lists must <strong>retain their original structure</strong> after the function returns.</p>\n<p><strong>Custom Judge:</strong></p>\n<p>The inputs to the <strong>judge</strong> are given as follows (your program is <strong>not</strong> given these inputs):</p>\n<ul>\n<li><code>intersectVal</code> - The value of the node where the intersection occurs. This is <code>0</code> if there is no intersected node.</li>\n<li><code>listA</code> - The first linked list.</li>\n<li><code>listB</code> - The second linked list.</li>\n<li><code>skipA</code> - The number of nodes to skip ahead in <code>listA</code> (starting from the head) to get to the intersected node.</li>\n<li><code>skipB</code> - The number of nodes to skip ahead in <code>listB</code> (starting from the head) to get to the intersected node.</li>\n</ul>\n<p>The judge will then create the linked structure based on these inputs and pass the two heads, <code>headA</code> and <code>headB</code> to your program. If you correctly return the intersected node, then your solution will be <strong>accepted</strong>.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_1_1.png\" style=\"width: 500px; height: 162px;\"/>\n<pre><strong>Input:</strong> intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3\n<strong>Output:</strong> Intersected at '8'\n<strong>Explanation:</strong> The intersected node's value is 8 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n- Note that the intersected node's value is not 1 because the nodes with value 1 in A and B (2<sup>nd</sup> node in A and 3<sup>rd</sup> node in B) are different node references. In other words, they point to two different locations in memory, while the nodes with value 8 in A and B (3<sup>rd</sup> node in A and 4<sup>th</sup> node in B) point to the same location in memory.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_2.png\" style=\"width: 500px; height: 194px;\"/>\n<pre><strong>Input:</strong> intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>Output:</strong> Intersected at '2'\n<strong>Explanation:</strong> The intersected node's value is 2 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/05/160_example_3.png\" style=\"width: 300px; height: 189px;\"/>\n<pre><strong>Input:</strong> intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>Output:</strong> No intersection\n<strong>Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes of <code>listA</code> is in the <code>m</code>.</li>\n<li>The number of nodes of <code>listB</code> is in the <code>n</code>.</li>\n<li><code>1 &lt;= m, n &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>1 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= skipA &lt;\u00a0m</code></li>\n<li><code>0 &lt;= skipB &lt;\u00a0n</code></li>\n<li><code>intersectVal</code> is <code>0</code> if <code>listA</code> and <code>listB</code> do not intersect.</li>\n<li><code>intersectVal == listA[skipA] == listB[skipB]</code> if <code>listA</code> and <code>listB</code> intersect.</li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow up:</strong> Could you write a solution that runs in <code>O(m + n)</code> time and use only <code>O(1)</code> memory?</div>"
    },
    {
      "id": 162,
      "title": "Find Peak Element",
      "title_slug": "find-peak-element",
      "link": "https://leetcode.com/problems/find-peak-element",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Binary Search"
      ],
      "question": "<div><p>A peak element is an element that is strictly greater than its neighbors.</p>\n<p>Given a <strong>0-indexed</strong> integer array <code>nums</code>, find a peak element, and return its index. If the array contains multiple peaks, return the index to <strong>any of the peaks</strong>.</p>\n<p>You may imagine that <code>nums[-1] = nums[n] = -\u221e</code>. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.</p>\n<p>You must write an algorithm that runs in <code>O(log n)</code> time.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,1,3,5,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n<li><code>-2<sup>31</sup> &lt;= nums[i] &lt;= 2<sup>31</sup> - 1</code></li>\n<li><code>nums[i] != nums[i + 1]</code> for all valid <code>i</code>.</li>\n</ul>\n</div>"
    },
    {
      "id": 164,
      "title": "Maximum Gap",
      "title_slug": "maximum-gap",
      "link": "https://leetcode.com/problems/maximum-gap",
      "difficulty": "Hard",
      "similar_topics": [
        "Array",
        "Sorting",
        "Bucket Sort",
        "Radix Sort"
      ],
      "question": "<div><p>Given an integer array <code>nums</code>, return <em>the maximum difference between two successive elements in its sorted form</em>. If the array contains less than two elements, return <code>0</code>.</p>\n<p>You must write an algorithm that runs in linear time and uses linear extra space.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,6,9,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [10]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The array contains less than 2 elements, therefore return 0.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n</div>"
    },
    {
      "id": 165,
      "title": "Compare Version Numbers",
      "title_slug": "compare-version-numbers",
      "link": "https://leetcode.com/problems/compare-version-numbers",
      "difficulty": "Medium",
      "similar_topics": [
        "Two Pointers",
        "String"
      ],
      "question": "<div><p>Given two version numbers,\u00a0<code>version1</code> and <code>version2</code>, compare them.</p>\n<ul>\n</ul>\n<p>Version numbers consist of <strong>one or more revisions</strong> joined by a dot\u00a0<code>'.'</code>. Each revision\u00a0consists of <strong>digits</strong>\u00a0and may contain leading <strong>zeros</strong>. Every revision contains <strong>at least one character</strong>. Revisions are <strong>0-indexed from left to right</strong>, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example\u00a0<code>2.5.33</code>\u00a0and\u00a0<code>0.1</code>\u00a0are valid version numbers.</p>\n<p>To compare version numbers, compare their revisions in <strong>left-to-right order</strong>. Revisions are compared using their\u00a0<strong>integer value ignoring any leading zeros</strong>. This means that revisions\u00a0<code>1</code>\u00a0and\u00a0<code>001</code>\u00a0are considered\u00a0<strong>equal</strong>. If a version number does not specify a revision at an index, then\u00a0<strong>treat the revision as\u00a0<code>0</code></strong>. For example, version\u00a0<code>1.0</code> is less than version\u00a0<code>1.1</code>\u00a0because their revision 0s are the same, but their revision 1s are\u00a0<code>0</code>\u00a0and\u00a0<code>1</code>\u00a0respectively, and\u00a0<code>0 &lt; 1</code>.</p>\n<p><em>Return the following:</em></p>\n<ul>\n<li>If <code>version1 &lt; version2</code>, return <code>-1</code>.</li>\n<li>If <code>version1 &gt; version2</code>, return <code>1</code>.</li>\n<li>Otherwise, return <code>0</code>.</li>\n</ul>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> version1 = \"1.01\", version2 = \"1.001\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Ignoring leading zeroes, both \"01\" and \"001\" represent the same integer \"1\".\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> version1 = \"1.0\", version2 = \"1.0.0\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> version1 does not specify revision 2, which means it is treated as \"0\".\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> version1 = \"0.1\", version2 = \"1.1\"\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> version1's revision 0 is \"0\", while version2's revision 0 is \"1\". 0 &lt; 1, so version1 &lt; version2.\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= version1.length, version2.length &lt;= 500</code></li>\n<li><code>version1</code> and <code>version2</code>\u00a0only contain digits and <code>'.'</code>.</li>\n<li><code>version1</code> and <code>version2</code>\u00a0<strong>are valid version numbers</strong>.</li>\n<li>All the given revisions in\u00a0<code>version1</code> and <code>version2</code>\u00a0can be stored in\u00a0a\u00a0<strong>32-bit integer</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 166,
      "title": "Fraction to Recurring Decimal",
      "title_slug": "fraction-to-recurring-decimal",
      "link": "https://leetcode.com/problems/fraction-to-recurring-decimal",
      "difficulty": "Medium",
      "similar_topics": [
        "Hash Table",
        "Math",
        "String"
      ],
      "question": "<div><p>Given two integers representing the <code>numerator</code> and <code>denominator</code> of a fraction, return <em>the fraction in string format</em>.</p>\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n<p>If multiple answers are possible, return <strong>any of them</strong>.</p>\n<p>It is <strong>guaranteed</strong> that the length of the answer string is less than <code>10<sup>4</sup></code> for all the given inputs.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> numerator = 1, denominator = 2\n<strong>Output:</strong> \"0.5\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> numerator = 2, denominator = 1\n<strong>Output:</strong> \"2\"\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> numerator = 4, denominator = 333\n<strong>Output:</strong> \"0.(012)\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>-2<sup>31</sup> &lt;=\u00a0numerator, denominator &lt;= 2<sup>31</sup> - 1</code></li>\n<li><code>denominator != 0</code></li>\n</ul>\n</div>"
    },
    {
      "id": 167,
      "title": "Two Sum II - Input Array Is Sorted",
      "title_slug": "two-sum-ii-input-array-is-sorted",
      "link": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted",
      "difficulty": "Medium",
      "similar_topics": [
        "Array",
        "Two Pointers",
        "Binary Search"
      ],
      "question": "<div><p>Given a <strong>1-indexed</strong> array of integers <code>numbers</code> that is already <strong><em>sorted in non-decreasing order</em></strong>, find two numbers such that they add up to a specific <code>target</code> number. Let these two numbers be <code>numbers[index<sub>1</sub>]</code> and <code>numbers[index<sub>2</sub>]</code> where <code>1 &lt;= index<sub>1</sub> &lt; index<sub>2</sub> &lt;= numbers.length</code>.</p>\n<p>Return<em> the indices of the two numbers, </em><code>index<sub>1</sub></code><em> and </em><code>index<sub>2</sub></code><em>, <strong>added by one</strong> as an integer array </em><code>[index<sub>1</sub>, index<sub>2</sub>]</code><em> of length 2.</em></p>\n<p>The tests are generated such that there is <strong>exactly one solution</strong>. You <strong>may not</strong> use the same element twice.</p>\n<p>Your solution must use only constant extra space.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> numbers = [<u>2</u>,<u>7</u>,11,15], target = 9\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore, index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> numbers = [<u>2</u>,3,<u>4</u>], target = 6\n<strong>Output:</strong> [1,3]\n<strong>Explanation:</strong> The sum of 2 and 4 is 6. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 3. We return [1, 3].\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> numbers = [<u>-1</u>,<u>0</u>], target = -1\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> The sum of -1 and 0 is -1. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>2 &lt;= numbers.length &lt;= 3 * 10<sup>4</sup></code></li>\n<li><code>-1000 &lt;= numbers[i] &lt;= 1000</code></li>\n<li><code>numbers</code> is sorted in <strong>non-decreasing order</strong>.</li>\n<li><code>-1000 &lt;= target &lt;= 1000</code></li>\n<li>The tests are generated such that there is <strong>exactly one solution</strong>.</li>\n</ul>\n</div>"
    },
    {
      "id": 168,
      "title": "Excel Sheet Column Title",
      "title_slug": "excel-sheet-column-title",
      "link": "https://leetcode.com/problems/excel-sheet-column-title",
      "difficulty": "Easy",
      "similar_topics": [
        "Math",
        "String"
      ],
      "question": "<div><p>Given an integer <code>columnNumber</code>, return <em>its corresponding column title as it appears in an Excel sheet</em>.</p>\n<p>For example:</p>\n<pre>A -&gt; 1\nB -&gt; 2\nC -&gt; 3\n...\nZ -&gt; 26\nAA -&gt; 27\nAB -&gt; 28 \n...\n</pre>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> columnNumber = 1\n<strong>Output:</strong> \"A\"\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> columnNumber = 28\n<strong>Output:</strong> \"AB\"\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> columnNumber = 701\n<strong>Output:</strong> \"ZY\"\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>1 &lt;= columnNumber &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n</div>"
    },
    {
      "id": 169,
      "title": "Majority Element",
      "title_slug": "majority-element",
      "link": "https://leetcode.com/problems/majority-element",
      "difficulty": "Easy",
      "similar_topics": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Sorting",
        "Counting"
      ],
      "question": "<div><p>Given an array <code>nums</code> of size <code>n</code>, return <em>the majority element</em>.</p>\n<p>The majority element is the element that appears more than <code>\u230an / 2\u230b</code> times. You may assume that the majority element always exists in the array.</p>\n<p>\u00a0</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [3,2,3]\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1,1,1,2,2]\n<strong>Output:</strong> 2\n</pre>\n<p>\u00a0</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>n == nums.length</code></li>\n<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n<p>\u00a0</p>\n<strong>Follow-up:</strong> Could you solve the problem in linear time and in <code>O(1)</code> space?</div>"
    }
  ]